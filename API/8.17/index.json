{"meta":{"ns":"Vips","version":"8.0","generator":"gi-docgen","generator-version":"2025.3"},"symbols":[{"type":"alias","name":"ArgumentTable","ctype":"VipsArgumentTable","summary":"No description available.","deprecated":null},{"type":"alias","name":"Pel","ctype":"VipsPel","summary":"A picture element. Cast this to whatever the associated VipsBandFormat says to get the value.","deprecated":null},{"type":"bitfield","name":"ArgumentFlags","ctype":"VipsArgumentFlags","summary":"Flags we associate with each object argument.  Have separate input & output flags. Both set is an error; ...","deprecated":null},{"type":"bitfield","name":"ForeignFlags","ctype":"VipsForeignFlags","summary":"Some hints about the image loader.  [flags@Vips.ForeignFlags.PARTIAL] means that the image can be read directly from the file ...","deprecated":null},{"type":"bitfield","name":"ForeignKeep","ctype":"VipsForeignKeep","summary":"Which metadata to retain.","deprecated":null},{"type":"bitfield","name":"ForeignPngFilter","ctype":"VipsForeignPngFilter","summary":"http://www.w3.org/TR/PNG-Filters.html The values mirror those of png.h in libpng.","deprecated":null},{"type":"bitfield","name":"ForeignSaveable","ctype":"VipsForeignSaveable","summary":"The set of image types supported by a saver.  See also: [class@ForeignSave].","deprecated":null},{"type":"bitfield","name":"OperationFlags","ctype":"VipsOperationFlags","summary":"Flags we associate with an operation.  @VIPS_OPERATION_SEQUENTIAL means that the operation works like [method@Image.conv]: it can process images ...","deprecated":null},{"type":"callback","name":"ArgumentClassMapFn","ctype":"VipsArgumentClassMapFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"ArgumentMapFn","ctype":"VipsArgumentMapFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"CallbackFn","ctype":"VipsCallbackFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"ClassMapFn","ctype":"VipsClassMapFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"GenerateFn","ctype":"VipsGenerateFn","summary":"Fill @out->valid with pixels. @seq contains per-thread state, such as the input regions. Set @stop to `TRUE` to stop ...","deprecated":null},{"type":"callback","name":"ImageMapFn","ctype":"VipsImageMapFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"InterpolateMethod","ctype":"VipsInterpolateMethod","summary":"An interpolation function. It should read source pixels from @in with [func@REGION_ADDR], it can look left and up from ...","deprecated":null},{"type":"callback","name":"ObjectSetArguments","ctype":"VipsObjectSetArguments","summary":"No description available.","deprecated":null},{"type":"callback","name":"OperationBuildFn","ctype":"VipsOperationBuildFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"RegionWrite","ctype":"VipsRegionWrite","summary":"The function should write the pixels in @area from @region. @a is the value passed into [method@Image.sink_disc].  See ...","deprecated":null},{"type":"callback","name":"SListFold2Fn","ctype":"VipsSListFold2Fn","summary":"No description available.","deprecated":null},{"type":"callback","name":"SListMap2Fn","ctype":"VipsSListMap2Fn","summary":"No description available.","deprecated":null},{"type":"callback","name":"SListMap4Fn","ctype":"VipsSListMap4Fn","summary":"No description available.","deprecated":null},{"type":"callback","name":"SinkNotify","ctype":"VipsSinkNotify","summary":"No description available.","deprecated":null},{"type":"callback","name":"StartFn","ctype":"VipsStartFn","summary":"Start a new processing sequence for this generate function. This allocates per-thread state, such as an input region.  ...","deprecated":null},{"type":"callback","name":"StopFn","ctype":"VipsStopFn","summary":"Stop a processing sequence. This frees per-thread state, such as an input region.  ::: seealso    ...","deprecated":null},{"type":"callback","name":"ThreadStartFn","ctype":"VipsThreadStartFn","summary":"No description available.","deprecated":null},{"type":"callback","name":"ThreadpoolAllocateFn","ctype":"VipsThreadpoolAllocateFn","summary":"This function is called to allocate a new work unit for the thread. It is always single-threaded, so it ...","deprecated":null},{"type":"callback","name":"ThreadpoolProgressFn","ctype":"VipsThreadpoolProgressFn","summary":"This function is called by the main thread once for every work unit processed. It can be used to ...","deprecated":null},{"type":"callback","name":"ThreadpoolWorkFn","ctype":"VipsThreadpoolWorkFn","summary":"This function is called to process a work unit. Many copies of this can run at once, so it ...","deprecated":null},{"type":"callback","name":"TypeMap2Fn","ctype":"VipsTypeMap2Fn","summary":"No description available.","deprecated":null},{"type":"callback","name":"TypeMapFn","ctype":"VipsTypeMapFn","summary":"No description available.","deprecated":null},{"type":"class","name":"Connection","ctype":"VipsConnection","summary":"An abstract base class representing a source or sink of bytes.  It can be connected to a network ...","deprecated":null},{"type":"class","name":"Foreign","ctype":"VipsForeign","summary":"An abstract base class to load and save images in a variety of formats.  ## Load and save ...","deprecated":null},{"type":"class","name":"ForeignLoad","ctype":"VipsForeignLoad","summary":"An abstract base class to load images in a variety of formats.  ## Writing a new loader  ...","deprecated":null},{"type":"class","name":"ForeignSave","ctype":"VipsForeignSave","summary":"An abstract base class to save images in a variety of formats.  ## Writing a new saver  ...","deprecated":null},{"type":"class","name":"Image","ctype":"VipsImage","summary":"The [class@Image] class and associated types and macros.  Images can be created from formatted files on disc, from ...","deprecated":null},{"type":"class","name":"Interpolate","ctype":"VipsInterpolate","summary":"An abstract base class for the various interpolation functions.  Use `vips --list classes` to see all the interpolators ...","deprecated":null},{"type":"class","name":"Object","ctype":"VipsObject","summary":"An abstract base class for all objects in libvips.  It has the following major features:  - **Functional ...","deprecated":null},{"type":"class","name":"Operation","ctype":"VipsOperation","summary":"An abstract base class for all operations in libvips.  It builds on [class@VipsObject] to provide the introspection and ...","deprecated":null},{"type":"class","name":"Region","ctype":"VipsRegion","summary":"A [class@Region] represents a small, rectangular part of an image.  You use regions to read pixels out of ...","deprecated":null},{"type":"class","name":"Sbuf","ctype":"VipsSbuf","summary":"A [class@Sbuf] provides a buffered reading interface for a [class@Source].  You can fetch lines of text, skip whitespace, ...","deprecated":null},{"type":"class","name":"Source","ctype":"VipsSource","summary":"A [class@Source] provides a unified interface for reading, seeking, and mapping data, regardless of the underlying source type.  ...","deprecated":null},{"type":"class","name":"SourceCustom","ctype":"VipsSourceCustom","summary":"Subclass of [class@Source] with action signals for handlers.  This is supposed to be useful for language bindings.","deprecated":null},{"type":"class","name":"Target","ctype":"VipsTarget","summary":"A [class@Target] provides a unified interface for writing data to various output destinations.  This target could be a ...","deprecated":null},{"type":"class","name":"TargetCustom","ctype":"VipsTargetCustom","summary":"Subclass of [class@Target] with action signals for handlers.  This is supposed to be useful for language bindings.","deprecated":null},{"type":"class","name":"ThreadState","ctype":"VipsThreadState","summary":"A [class@VipsThreadState] represents a per-thread state.  [callback@ThreadpoolAllocateFn] functions can use these members to communicate with [callback@ThreadpoolWorkFn] functions.  ...","deprecated":null},{"type":"class_method","name":"install_argument","type_name":"ObjectClass","struct_for":"Object","ident":"vips_object_class_install_argument","summary":"No description available.","deprecated":null},{"type":"class_method","name":"print_usage","type_name":"OperationClass","struct_for":"Operation","ident":"vips_operation_class_print_usage","summary":"Print a usage message for the operation to stdout.","deprecated":null},{"type":"constant","name":"ARGUMENT_OPTIONAL_INPUT","ident":"VIPS_ARGUMENT_OPTIONAL_INPUT","summary":"No description available.","deprecated":null},{"type":"constant","name":"ARGUMENT_OPTIONAL_OUTPUT","ident":"VIPS_ARGUMENT_OPTIONAL_OUTPUT","summary":"No description available.","deprecated":null},{"type":"constant","name":"ARGUMENT_REQUIRED_INPUT","ident":"VIPS_ARGUMENT_REQUIRED_INPUT","summary":"No description available.","deprecated":null},{"type":"constant","name":"ARGUMENT_REQUIRED_OUTPUT","ident":"VIPS_ARGUMENT_REQUIRED_OUTPUT","summary":"No description available.","deprecated":null},{"type":"constant","name":"A_X0","ident":"VIPS_A_X0","summary":"Areas under curves for illuminant A (2856K), 2 degree observer.","deprecated":null},{"type":"constant","name":"A_Y0","ident":"VIPS_A_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"A_Z0","ident":"VIPS_A_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"B_X0","ident":"VIPS_B_X0","summary":"Areas under curves for illuminant B (4874K), 2 degree observer.","deprecated":null},{"type":"constant","name":"B_Y0","ident":"VIPS_B_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"B_Z0","ident":"VIPS_B_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"CONFIG","ident":"VIPS_CONFIG","summary":"No description available.","deprecated":null},{"type":"constant","name":"C_X0","ident":"VIPS_C_X0","summary":"Areas under curves for illuminant C (6774K), 2 degree observer.","deprecated":null},{"type":"constant","name":"C_Y0","ident":"VIPS_C_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"C_Z0","ident":"VIPS_C_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D3250_X0","ident":"VIPS_D3250_X0","summary":"Areas under curves for black body at 3250K, 2 degree observer.","deprecated":null},{"type":"constant","name":"D3250_Y0","ident":"VIPS_D3250_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D3250_Z0","ident":"VIPS_D3250_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D50_X0","ident":"VIPS_D50_X0","summary":"Areas under curves for D50, 2 degree observer.","deprecated":null},{"type":"constant","name":"D50_Y0","ident":"VIPS_D50_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D50_Z0","ident":"VIPS_D50_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D55_X0","ident":"VIPS_D55_X0","summary":"Areas under curves for D55, 2 degree observer.","deprecated":null},{"type":"constant","name":"D55_Y0","ident":"VIPS_D55_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D55_Z0","ident":"VIPS_D55_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D65_X0","ident":"VIPS_D65_X0","summary":"Areas under curves for D65, 2 degree observer.","deprecated":null},{"type":"constant","name":"D65_Y0","ident":"VIPS_D65_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D65_Z0","ident":"VIPS_D65_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D75_X0","ident":"VIPS_D75_X0","summary":"Areas under curves for D75, 2 degree observer.","deprecated":null},{"type":"constant","name":"D75_Y0","ident":"VIPS_D75_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D75_Z0","ident":"VIPS_D75_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D93_X0","ident":"VIPS_D93_X0","summary":"Areas under curves for D93, 2 degree observer.","deprecated":null},{"type":"constant","name":"D93_Y0","ident":"VIPS_D93_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"D93_Z0","ident":"VIPS_D93_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"DEFAULT_MAX_COORD","ident":"VIPS_DEFAULT_MAX_COORD","summary":"No description available.","deprecated":null},{"type":"constant","name":"ENABLE_DEPRECATED","ident":"VIPS_ENABLE_DEPRECATED","summary":"No description available.","deprecated":null},{"type":"constant","name":"E_X0","ident":"VIPS_E_X0","summary":"Areas under curves for equal energy illuminant E.","deprecated":null},{"type":"constant","name":"E_Y0","ident":"VIPS_E_Y0","summary":"No description available.","deprecated":null},{"type":"constant","name":"E_Z0","ident":"VIPS_E_Z0","summary":"No description available.","deprecated":null},{"type":"constant","name":"INTERPOLATE_SCALE","ident":"VIPS_INTERPOLATE_SCALE","summary":"[const@INTERPOLATE_SHIFT] as a multiplicative constant.","deprecated":null},{"type":"constant","name":"INTERPOLATE_SHIFT","ident":"VIPS_INTERPOLATE_SHIFT","summary":"Many of the vips interpolators use fixed-point arithmetic for value calculation. This is how many bits of precision they use.","deprecated":null},{"type":"constant","name":"LIBRARY_AGE","ident":"VIPS_LIBRARY_AGE","summary":"No description available.","deprecated":null},{"type":"constant","name":"LIBRARY_CURRENT","ident":"VIPS_LIBRARY_CURRENT","summary":"No description available.","deprecated":null},{"type":"constant","name":"LIBRARY_REVISION","ident":"VIPS_LIBRARY_REVISION","summary":"No description available.","deprecated":null},{"type":"constant","name":"MAGIC_INTEL","ident":"VIPS_MAGIC_INTEL","summary":"The first four bytes of a VIPS file in Intel byte ordering.","deprecated":null},{"type":"constant","name":"MAGIC_SPARC","ident":"VIPS_MAGIC_SPARC","summary":"The first four bytes of a VIPS file in SPARC byte ordering.","deprecated":null},{"type":"constant","name":"MAJOR_VERSION","ident":"VIPS_MAJOR_VERSION","summary":"No description available.","deprecated":null},{"type":"constant","name":"META_BITS_PER_SAMPLE","ident":"VIPS_META_BITS_PER_SAMPLE","summary":"The bits per sample for each channel.","deprecated":null},{"type":"constant","name":"META_CONCURRENCY","ident":"VIPS_META_CONCURRENCY","summary":"If set, the suggested concurrency for this image.","deprecated":null},{"type":"constant","name":"META_EXIF_NAME","ident":"VIPS_META_EXIF_NAME","summary":"The name that read and write operations use for the image's EXIF data.","deprecated":null},{"type":"constant","name":"META_ICC_NAME","ident":"VIPS_META_ICC_NAME","summary":"The name we use to attach an ICC profile. The file read and write operations for TIFF, JPEG, PNG ...","deprecated":null},{"type":"constant","name":"META_IMAGEDESCRIPTION","ident":"VIPS_META_IMAGEDESCRIPTION","summary":"The IMAGEDESCRIPTION tag. Often has useful metadata.","deprecated":null},{"type":"constant","name":"META_IPTC_NAME","ident":"VIPS_META_IPTC_NAME","summary":"The name that read and write operations use for the image's IPTC data.","deprecated":null},{"type":"constant","name":"META_LOADER","ident":"VIPS_META_LOADER","summary":"Record the name of the original loader here. Handy for hinting file formats and for debugging.","deprecated":null},{"type":"constant","name":"META_N_PAGES","ident":"VIPS_META_N_PAGES","summary":"If set, the number of pages in the original file.","deprecated":null},{"type":"constant","name":"META_N_SUBIFDS","ident":"VIPS_META_N_SUBIFDS","summary":"If set, the number of subifds in the first page of the file.","deprecated":null},{"type":"constant","name":"META_ORIENTATION","ident":"VIPS_META_ORIENTATION","summary":"The orientation tag for this image. An int from 1 - 8 using the standard exif/tiff meanings.  * ...","deprecated":null},{"type":"constant","name":"META_PAGE_HEIGHT","ident":"VIPS_META_PAGE_HEIGHT","summary":"If set, the height of each page when this image was loaded. If you save an image with \"page-height\" ...","deprecated":null},{"type":"constant","name":"META_PALETTE","ident":"VIPS_META_PALETTE","summary":"Does this image have a palette?","deprecated":null},{"type":"constant","name":"META_PHOTOSHOP_NAME","ident":"VIPS_META_PHOTOSHOP_NAME","summary":"The name that TIFF read and write operations use for the image's TIFFTAG_PHOTOSHOP data.","deprecated":null},{"type":"constant","name":"META_RESOLUTION_UNIT","ident":"VIPS_META_RESOLUTION_UNIT","summary":"The JPEG and TIFF read and write operations use this to record the file's preferred unit for resolution.","deprecated":null},{"type":"constant","name":"META_SEQUENTIAL","ident":"VIPS_META_SEQUENTIAL","summary":"Images loaded via vips_sequential() have this int field defined. Some operations (eg. vips_shrinkv()) add extra caches if they see ...","deprecated":null},{"type":"constant","name":"META_XMP_NAME","ident":"VIPS_META_XMP_NAME","summary":"The name that read and write operations use for the image's XMP data.","deprecated":null},{"type":"constant","name":"MICRO_VERSION","ident":"VIPS_MICRO_VERSION","summary":"No description available.","deprecated":null},{"type":"constant","name":"MINOR_VERSION","ident":"VIPS_MINOR_VERSION","summary":"No description available.","deprecated":null},{"type":"constant","name":"PATH_MAX","ident":"VIPS_PATH_MAX","summary":"No description available.","deprecated":null},{"type":"constant","name":"PI","ident":"VIPS_PI","summary":"No description available.","deprecated":null},{"type":"constant","name":"SBUF_BUFFER_SIZE","ident":"VIPS_SBUF_BUFFER_SIZE","summary":"No description available.","deprecated":null},{"type":"constant","name":"TARGET_BUFFER_SIZE","ident":"VIPS_TARGET_BUFFER_SIZE","summary":"No description available.","deprecated":null},{"type":"constant","name":"TARGET_CUSTOM_BUFFER_SIZE","ident":"VIPS_TARGET_CUSTOM_BUFFER_SIZE","summary":"No description available.","deprecated":null},{"type":"constant","name":"TRANSFORM_SCALE","ident":"VIPS_TRANSFORM_SCALE","summary":"[const@TRANSFORM_SHIFT] as a multiplicative constant.","deprecated":null},{"type":"constant","name":"TRANSFORM_SHIFT","ident":"VIPS_TRANSFORM_SHIFT","summary":"Many of the libvips interpolators use fixed-point arithmetic for coordinate calculation. This is how many bits of precision they use.","deprecated":null},{"type":"constant","name":"VERSION","ident":"VIPS_VERSION","summary":"No description available.","deprecated":null},{"type":"constant","name":"VERSION_STRING","ident":"VIPS_VERSION_STRING","summary":"No description available.","deprecated":null},{"type":"content","name":"Advanced > Writing bindings","href":"binding.html","summary":" There are full libvips bindings for quite a few environments now, including C, C++, command-line, Ruby, PHP, Lua, ..."},{"type":"content","name":"Advanced > Writing operators","href":"extending.html","summary":" This section runs quickly through adding a simple operator to libvips. For more information, see [class@Operation] and [class@Region]. ..."},{"type":"content","name":"Citing libvips","href":"cite.html","summary":" Cupitt, J., Martinez, K., Fuller, L. and Wolthuizen, K. A. (2025) [The libvips image processing library]( https://www.southampton.ac.uk/~km2/papers/2025/vips-ist-preprint.pdf). In ..."},{"type":"content","name":"Operator index / Alphabetical","href":"function-list.html","summary":" libvips has a set of operators, each of which computes some useful image processing operation. Each operator is ..."},{"type":"content","name":"Operator index > By section > Arithmetic","href":"libvips-arithmetic.html","summary":"   These operations perform pixel arithmetic, that is, they perform an arithmetic operation, such as addition, on ..."},{"type":"content","name":"Operator index > By section > Basic","href":"libvips-basic.html","summary":"   A selection of basic aliases, [alias@GObject.Type] helpers and macro definitions used by libvips.  ## Structs ..."},{"type":"content","name":"Operator index > By section > Colour","href":"libvips-colour.html","summary":"   These operators let you transform coordinates and images between colour spaces, calculate colour differences, and move ..."},{"type":"content","name":"Operator index > By section > Conversion","href":"libvips-conversion.html","summary":"   These operations convert an image in some way. They can be split into two main groups. ..."},{"type":"content","name":"Operator index > By section > Convolution","href":"libvips-convolution.html","summary":"   These operations convolve an image in some way, or are operations based on simple convolution, or ..."},{"type":"content","name":"Operator index > By section > Create","href":"libvips-create.html","summary":"   These functions generate various images. You can combine them with the arithmetic and rotate functions to ..."},{"type":"content","name":"Operator index > By section > Draw","href":"libvips-draw.html","summary":"   These operations directly modify the image. They do not thread, on 32-bit machines they will be ..."},{"type":"content","name":"Operator index > By section > Error","href":"libvips-error.html","summary":"   libvips maintains an error buffer (a log of localised text messages), a set of functions for ..."},{"type":"content","name":"Operator index > By section > Fourier","href":"libvips-freqfilt.html","summary":"   To and from Fourier space, filter in Fourier space, convert Fourier-space images to a displayable form. ..."},{"type":"content","name":"Operator index > By section > Generate","href":"libvips-generate.html","summary":"   These functions let you attach generate functions to images and ask for regions of images to ..."},{"type":"content","name":"Operator index > By section > Header","href":"libvips-header.html","summary":"   libvips supports getting and setting image header data (including metadata) in a uniform way.  Use ..."},{"type":"content","name":"Operator index > By section > Histogram","href":"libvips-histogram.html","summary":"   Histograms and look-up tables are 1xn or nx1 images, where n is less than 256 or ..."},{"type":"content","name":"Operator index > By section > Initialisation","href":"libvips-vips.html","summary":"   These functions handle the initialization, finalization, version retrieval, and relocation for libvips.  libvips is a ..."},{"type":"content","name":"Operator index > By section > Memory","href":"libvips-memory.html","summary":"   These functions cover two main areas.  First, some simple utility functions over the underlying [func@GLib.malloc] ..."},{"type":"content","name":"Operator index > By section > Morphology","href":"libvips-morphology.html","summary":"   The morphological functions search images for particular patterns of pixels, specified with the mask argument, either ..."},{"type":"content","name":"Operator index > By section > Mosaicing","href":"libvips-mosaicing.html","summary":"   These functions are useful for joining many small images together to make one large image. They ..."},{"type":"content","name":"Operator index > By section > Resample","href":"libvips-resample.html","summary":"   These operations build on each other in a set of layers.  First, [method@Image.affine] applies an ..."},{"type":"content","name":"Technical background > Evaluation","href":"how-it-works.html","summary":" Compared to most image processing libraries, libvips needs little RAM and runs quickly, especially on machines with more ..."},{"type":"content","name":"Technical background > Opening files","href":"how-it-opens-files.html","summary":" libvips has at least four different ways of opening image files, each best for different file types, file ..."},{"type":"content","name":"Technical background > The libvips file format","href":"file-format.html","summary":" libvips has a simple, native file format. It's very fast, there is no image size limit, and it ..."},{"type":"content","name":"Using > At the command-line","href":"using-the-cli.html","summary":" Use the `vips` command to execute libvips operations from the command-line. For example:  ```bash $ vips rot ..."},{"type":"content","name":"Using > Building image pyramids","href":"making-image-pyramids.html","summary":" libvips includes [method@Image.dzsave], an operation that can build image pyramids compatible with [DeepZoom](http://en.wikipedia.org/wiki/Deep_Zoom), Zoomify and [Google Maps](https://developers.google.com/maps) image ..."},{"type":"content","name":"Using > C","href":"using-from-c.html","summary":" libvips comes with a convenient, high-level C API. You should read the API docs for full details, but ..."},{"type":"content","name":"Using > C++","href":"using-from-cplusplus.html","summary":" libvips comes with a convenient C++ API. It is a very thin wrapper over the C API and ..."},{"type":"content","name":"Using > Checklist for programmers using libvips","href":"developer-checklist.html","summary":" libvips is a slightly unusual library and you may need to take some of its stranger features into ..."},{"type":"content","name":"Using > Multipage and animated images","href":"multipage-and-animated-images.html","summary":" libvips represents animated and multipage images as tall, thin strips of frames, like a strip of movie film ..."},{"type":"content","name":"Using > Python examples","href":"examples.html","summary":" This page shows a few libvips examples using Python. They will work with small syntax changes in any ..."},{"type":"content","name":"Using > Threads","href":"using-threads.html","summary":" This section tries to summarise the rules for threaded programs using libvips. Generally, libvips is threaded and thread-safe, ..."},{"type":"content","name":"Using > vipsthumbnail","href":"using-vipsthumbnail.html","summary":" libvips ships with a handy command-line image thumbnailer, `vipsthumbnail`. This page introduces it, with some examples.  The ..."},{"type":"ctor","name":"analyzeload","type_name":"Image","ident":"vips_analyzeload","summary":"Load an Analyze 6.0 file. If @filename is \"fred.img\", this will look for an image header called \"fred.hdr\" and ...","deprecated":null},{"type":"ctor","name":"black","type_name":"Image","ident":"vips_black","summary":"Make a black unsigned char image of a specified size.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"ctor","name":"csvload","type_name":"Image","ident":"vips_csvload","summary":"Load a CSV (comma-separated values) file.  The output image is always 1 band (monochrome), [enum@Vips.BandFormat.DOUBLE]. Use [method@Image.bandfold] to ...","deprecated":null},{"type":"ctor","name":"csvload_source","type_name":"Image","ident":"vips_csvload_source","summary":"Exactly as [ctor@Image.csvload], but read from a source.  ::: tip \"Optional arguments\"     * @skip: ...","deprecated":null},{"type":"ctor","name":"empty","type_name":"ArrayImage","ident":"vips_array_image_empty","summary":"Make an empty image array. Handy with [method@ArrayImage.append] for bindings which can't handle object array arguments.  ::: seealso ...","deprecated":null},{"type":"ctor","name":"eye","type_name":"Image","ident":"vips_eye","summary":"Create a test pattern with increasing spatial frequency in X and amplitude in Y.  @factor should be between ...","deprecated":null},{"type":"ctor","name":"fitsload","type_name":"Image","ident":"vips_fitsload","summary":"Read a FITS image file into a VIPS image.  This operation can read images with up to three ...","deprecated":null},{"type":"ctor","name":"fitsload_source","type_name":"Image","ident":"vips_fitsload_source","summary":"Exactly as [ctor@Image.fitsload], but read from a source.","deprecated":null},{"type":"ctor","name":"fractsurf","type_name":"Image","ident":"vips_fractsurf","summary":"Generate an image of size @width by @height and fractal dimension @fractal_dimension. The dimension should be between 2 and ...","deprecated":null},{"type":"ctor","name":"gaussmat","type_name":"Image","ident":"vips_gaussmat","summary":"Creates a circularly symmetric Gaussian image of radius @sigma.  The size of the mask is determined by the ...","deprecated":null},{"type":"ctor","name":"gaussnoise","type_name":"Image","ident":"vips_gaussnoise","summary":"Make a one band float image of gaussian noise with the specified distribution.  The gaussian distribution is created ...","deprecated":null},{"type":"ctor","name":"gifload","type_name":"Image","ident":"vips_gifload","summary":"Read a GIF file into a libvips image.  Use @page to select a page to render, numbering from ...","deprecated":null},{"type":"ctor","name":"gifload_buffer","type_name":"Image","ident":"vips_gifload_buffer","summary":"Exactly as [ctor@Image.gifload], but read from a memory buffer.  You must not free the buffer while @out is ...","deprecated":null},{"type":"ctor","name":"gifload_source","type_name":"Image","ident":"vips_gifload_source","summary":"Exactly as [ctor@Image.gifload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"grey","type_name":"Image","ident":"vips_grey","summary":"Create a one-band float image with the left-most column zero and the right-most 1.  Intermediate pixels are a ...","deprecated":null},{"type":"ctor","name":"heifload","type_name":"Image","ident":"vips_heifload","summary":"Read a HEIF image file into a VIPS image.  Use @page to select a page to render, numbering ...","deprecated":null},{"type":"ctor","name":"heifload_buffer","type_name":"Image","ident":"vips_heifload_buffer","summary":"Read a HEIF image file into a VIPS image. Exactly as [ctor@Image.heifload], but read from a memory buffer.  ...","deprecated":null},{"type":"ctor","name":"heifload_source","type_name":"Image","ident":"vips_heifload_source","summary":"Exactly as [ctor@Image.heifload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"identity","type_name":"Image","ident":"vips_identity","summary":"Creates an identity lookup table, ie. one which will leave an image unchanged when applied with [method@Image.maplut]. Each entry ...","deprecated":null},{"type":"ctor","name":"jp2kload","type_name":"Image","ident":"vips_jp2kload","summary":"Read a JPEG2000 image.  The loader supports 8, 16 and 32-bit int pixel values, signed and unsigned. It ...","deprecated":null},{"type":"ctor","name":"jp2kload_buffer","type_name":"Image","ident":"vips_jp2kload_buffer","summary":"Exactly as [ctor@Image.jp2kload], but read from a buffer.  You must not free the buffer while @out is active. ...","deprecated":null},{"type":"ctor","name":"jp2kload_source","type_name":"Image","ident":"vips_jp2kload_source","summary":"Exactly as [ctor@Image.jp2kload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"jpegload","type_name":"Image","ident":"vips_jpegload","summary":"Read a JPEG file into a VIPS image. It can read most 8-bit JPEG images, including CMYK and YCbCr. ...","deprecated":null},{"type":"ctor","name":"jpegload_buffer","type_name":"Image","ident":"vips_jpegload_buffer","summary":"Read a JPEG-formatted memory block into a VIPS image. Exactly as [ctor@Image.jpegload], but read from a memory buffer.  ...","deprecated":null},{"type":"ctor","name":"jpegload_source","type_name":"Image","ident":"vips_jpegload_source","summary":"Read a JPEG-formatted memory block into a VIPS image. Exactly as [ctor@Image.jpegload], but read from a source.  ::: ...","deprecated":null},{"type":"ctor","name":"jxlload","type_name":"Image","ident":"vips_jxlload","summary":"Read a JPEG-XL image.  The JPEG-XL loader and saver are experimental features and may change in future libvips ...","deprecated":null},{"type":"ctor","name":"jxlload_buffer","type_name":"Image","ident":"vips_jxlload_buffer","summary":"Exactly as [ctor@Image.jxlload], but read from a buffer.","deprecated":null},{"type":"ctor","name":"jxlload_source","type_name":"Image","ident":"vips_jxlload_source","summary":"Exactly as [ctor@Image.jxlload], but read from a source.","deprecated":null},{"type":"ctor","name":"logmat","type_name":"Image","ident":"vips_logmat","summary":"Create a circularly symmetric Laplacian of Gaussian mask of radius @sigma.  The size of the mask is determined ...","deprecated":null},{"type":"ctor","name":"magickload","type_name":"Image","ident":"vips_magickload","summary":"Read in an image using libMagick, the ImageMagick library.  This library can read more than 80 file formats, ...","deprecated":null},{"type":"ctor","name":"magickload_buffer","type_name":"Image","ident":"vips_magickload_buffer","summary":"Read an image memory block using libMagick into a VIPS image. Exactly as [ctor@Image.magickload], but read from a memory ...","deprecated":null},{"type":"ctor","name":"mask_butterworth","type_name":"Image","ident":"vips_mask_butterworth","summary":"Make an butterworth high- or low-pass filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff, where ...","deprecated":null},{"type":"ctor","name":"mask_butterworth_band","type_name":"Image","ident":"vips_mask_butterworth_band","summary":"Make an butterworth band-pass or band-reject filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff_x, @frequency_cutoff_y, ...","deprecated":null},{"type":"ctor","name":"mask_butterworth_ring","type_name":"Image","ident":"vips_mask_butterworth_ring","summary":"Make a butterworth ring-pass or ring-reject filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff of ...","deprecated":null},{"type":"ctor","name":"mask_fractal","type_name":"Image","ident":"vips_mask_fractal","summary":"This operation should be used to create fractal images by filtering the power spectrum of Gaussian white noise.  ...","deprecated":null},{"type":"ctor","name":"mask_gaussian","type_name":"Image","ident":"vips_mask_gaussian","summary":"Make a gaussian high- or low-pass filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff.  ...","deprecated":null},{"type":"ctor","name":"mask_gaussian_band","type_name":"Image","ident":"vips_mask_gaussian_band","summary":"Make a gaussian band-pass or band-reject filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff_x, @frequency_cutoff_y, ...","deprecated":null},{"type":"ctor","name":"mask_gaussian_ring","type_name":"Image","ident":"vips_mask_gaussian_ring","summary":"Make a gaussian ring-pass or ring-reject filter, that is, one with a variable, smooth transition positioned at @frequency_cutoff of ...","deprecated":null},{"type":"ctor","name":"mask_ideal","type_name":"Image","ident":"vips_mask_ideal","summary":"Make an ideal high- or low-pass filter, that is, one with a sharp cutoff positioned at @frequency_cutoff, where @frequency_cutoff ...","deprecated":null},{"type":"ctor","name":"mask_ideal_band","type_name":"Image","ident":"vips_mask_ideal_band","summary":"Make an ideal band-pass or band-reject filter, that is, one with a sharp cutoff around the point @frequency_cutoff_x, @frequency_cutoff_y, ...","deprecated":null},{"type":"ctor","name":"mask_ideal_ring","type_name":"Image","ident":"vips_mask_ideal_ring","summary":"Make an ideal ring-pass or ring-reject filter, that is, one with a sharp ring positioned at @frequency_cutoff of width ...","deprecated":null},{"type":"ctor","name":"matload","type_name":"Image","ident":"vips_matload","summary":"Read a Matlab save file into a VIPS image.  This operation searches the save file for the first ...","deprecated":null},{"type":"ctor","name":"matrixload","type_name":"Image","ident":"vips_matrixload","summary":"Reads a matrix from a file.  Matrix files have a simple format that's supposed to be easy to ...","deprecated":null},{"type":"ctor","name":"matrixload_source","type_name":"Image","ident":"vips_matrixload_source","summary":"Exactly as [ctor@Image.matrixload], but read from a source.  ::: seealso     [ctor@Image.matrixload].","deprecated":null},{"type":"ctor","name":"memory","type_name":"Image","ident":"vips_image_memory","summary":"A renamed [ctor@Image.new_memory] ... Some gobject binding systems do not like more than one _new() method.  ::: seealso ...","deprecated":null},{"type":"ctor","name":"new","type_name":"Image","ident":"vips_image_new","summary":"[ctor@Image.new] creates a new, empty [class@Image]. If you write to one of these images, vips will just attach some ...","deprecated":null},{"type":"ctor","name":"new","type_name":"Interpolate","ident":"vips_interpolate_new","summary":"Look up an interpolator from a nickname and make one. You need to free the result with [method@GObject.Object.unref] when ...","deprecated":null},{"type":"ctor","name":"new","type_name":"Object","ident":"vips_object_new","summary":"[ctor@GObject.Object.new] the object, set any arguments with @set, call [method@Object.build] and return the complete object.","deprecated":null},{"type":"ctor","name":"new","type_name":"Operation","ident":"vips_operation_new","summary":"Return a new [class@Operation] with the specified nickname. Useful for language bindings.  You'll need to set any arguments ...","deprecated":null},{"type":"ctor","name":"new","type_name":"Region","ident":"vips_region_new","summary":"Create a region. [class@Region] start out empty, you need to call [method@Region.prepare] to fill them with pixels.  ::: ...","deprecated":null},{"type":"ctor","name":"new","type_name":"SourceCustom","ident":"vips_source_custom_new","summary":"Create a [class@SourceCustom]. Attach signals to implement read and seek.","deprecated":null},{"type":"ctor","name":"new","type_name":"TargetCustom","ident":"vips_target_custom_new","summary":"Create a [class@TargetCustom]. Attach signals to implement write and finish.","deprecated":null},{"type":"ctor","name":"new","type_name":"ThreadState","ident":"vips_thread_state_new","summary":"No description available.","deprecated":null},{"type":"ctor","name":"new","type_name":"Area","ident":"vips_area_new","summary":"A VipsArea wraps a chunk of memory. It adds reference counting and a free function. It also keeps a ...","deprecated":null},{"type":"ctor","name":"new","type_name":"ArrayDouble","ident":"vips_array_double_new","summary":"Allocate a new array of doubles and copy @array into it. Free with [method@Area.unref].  ::: seealso   ...","deprecated":null},{"type":"ctor","name":"new","type_name":"ArrayImage","ident":"vips_array_image_new","summary":"Allocate a new array of images and copy @array into it. Free with [method@Area.unref].  The images will all ...","deprecated":null},{"type":"ctor","name":"new","type_name":"ArrayInt","ident":"vips_array_int_new","summary":"Allocate a new array of ints and copy @array into it. Free with [method@Area.unref].  ::: seealso   ...","deprecated":null},{"type":"ctor","name":"new","type_name":"Blob","ident":"vips_blob_new","summary":"Like [ctor@Area.new], but track a length as well. The returned [struct@Blob] takes ownership of @data and will free it ...","deprecated":null},{"type":"ctor","name":"new","type_name":"RefString","ident":"vips_ref_string_new","summary":"Create a new refstring. These are reference-counted immutable strings, used to store string data in vips image metadata.  ...","deprecated":null},{"type":"ctor","name":"new_array","type_name":"Area","ident":"vips_area_new_array","summary":"An area which holds an array of elements of some [alias@GObject.Type]. To set values for the elements, get the ...","deprecated":null},{"type":"ctor","name":"new_array_object","type_name":"Area","ident":"vips_area_new_array_object","summary":"An area which holds an array of [class@GObject.Object] s. See [ctor@Area.new_array]. When the area is freed, each [class@GObject.Object] will ...","deprecated":null},{"type":"ctor","name":"new_from_blob","type_name":"Source","ident":"vips_source_new_from_blob","summary":"Create a source attached to an area of memory.","deprecated":null},{"type":"ctor","name":"new_from_buffer","type_name":"Image","ident":"vips_image_new_from_buffer","summary":"Loads an image from the formatted area of memory @buf, @len using the loader recommended by [func@Foreign.find_load_buffer]. To load ...","deprecated":null},{"type":"ctor","name":"new_from_descriptor","type_name":"Source","ident":"vips_source_new_from_descriptor","summary":"Create an source attached to a file descriptor. @descriptor is closed with close() when source is finalized.","deprecated":null},{"type":"ctor","name":"new_from_file","type_name":"Image","ident":"vips_image_new_from_file","summary":"::: note \"Optional arguments\"     * @access: hint [enum@Access] mode to loader     ...","deprecated":null},{"type":"ctor","name":"new_from_file","type_name":"Source","ident":"vips_source_new_from_file","summary":"Create a source attached to a file.  If this descriptor does not support mmap and the source is ...","deprecated":null},{"type":"ctor","name":"new_from_file_RW","type_name":"Image","ident":"vips_image_new_from_file_RW","summary":"Opens the named file for simultaneous reading and writing. This will only work for VIPS files in a format ...","deprecated":null},{"type":"ctor","name":"new_from_file_raw","type_name":"Image","ident":"vips_image_new_from_file_raw","summary":"This function maps the named file and returns a [class@Image] you can use to read it.  It returns ...","deprecated":null},{"type":"ctor","name":"new_from_image","type_name":"Image","ident":"vips_image_new_from_image","summary":"Creates a new image with width, height, format, interpretation, resolution and offset taken from @image, but with number of ...","deprecated":null},{"type":"ctor","name":"new_from_image1","type_name":"Image","ident":"vips_image_new_from_image1","summary":"Creates a new image with width, height, format, interpretation, resolution and offset taken from @image, but with one band ...","deprecated":null},{"type":"ctor","name":"new_from_memory","type_name":"Image","ident":"vips_image_new_from_memory","summary":"This function wraps a [class@Image] around a memory area. The memory area must be a simple array, for example ...","deprecated":null},{"type":"ctor","name":"new_from_memory","type_name":"Source","ident":"vips_source_new_from_memory","summary":"Create a source attached to an area of memory.  You must not free @data while the source is active.","deprecated":null},{"type":"ctor","name":"new_from_memory_copy","type_name":"Image","ident":"vips_image_new_from_memory_copy","summary":"Like [ctor@Image.new_from_memory], but VIPS will make a copy of the memory area. This means more memory use and an ...","deprecated":null},{"type":"ctor","name":"new_from_options","type_name":"Source","ident":"vips_source_new_from_options","summary":"Create a source from an option string.","deprecated":null},{"type":"ctor","name":"new_from_source","type_name":"Image","ident":"vips_image_new_from_source","summary":"Loads an image from the formatted source @input, loader recommended by [func@Foreign.find_load_source].  Load options may be given in ...","deprecated":null},{"type":"ctor","name":"new_from_source","type_name":"Sbuf","ident":"vips_sbuf_new_from_source","summary":"Create a [class@Sbuf] wrapping a source.","deprecated":null},{"type":"ctor","name":"new_from_string","type_name":"Object","ident":"vips_object_new_from_string","summary":"No description available.","deprecated":null},{"type":"ctor","name":"new_from_string","type_name":"ArrayImage","ident":"vips_array_image_new_from_string","summary":"No description available.","deprecated":null},{"type":"ctor","name":"new_from_target","type_name":"Source","ident":"vips_source_new_from_target","summary":"Create a source from a temp target that has been written to.","deprecated":null},{"type":"ctor","name":"new_matrix","type_name":"Image","ident":"vips_image_new_matrix","summary":"This convenience function makes an image which is a matrix: a one-band [enum@Vips.BandFormat.DOUBLE] image held in memory.  Use ...","deprecated":null},{"type":"ctor","name":"new_matrix_from_array","type_name":"Image","ident":"vips_image_new_matrix_from_array","summary":"A binding-friendly version of [ctor@Image.new_matrixv].","deprecated":null},{"type":"ctor","name":"new_matrixv","type_name":"Image","ident":"vips_image_new_matrixv","summary":"As [ctor@Image.new_matrix], but initialise the matrix from the argument list. After @height should be @width * @height double constants ...","deprecated":null},{"type":"ctor","name":"new_memory","type_name":"Image","ident":"vips_image_new_memory","summary":"[ctor@Image.new_memory] creates a new [class@Image] which, when written to, will create a memory image.  ::: seealso   ...","deprecated":null},{"type":"ctor","name":"new_temp","type_name":"Target","ident":"vips_target_new_temp","summary":"Create a temporary target -- either a temporary file on disc, or an area in memory, depending on what ...","deprecated":null},{"type":"ctor","name":"new_temp_file","type_name":"Image","ident":"vips_image_new_temp_file","summary":"Make a [class@Image] which, when written to, will create a temporary file on disc. The file will be automatically ...","deprecated":null},{"type":"ctor","name":"new_to_descriptor","type_name":"Target","ident":"vips_target_new_to_descriptor","summary":"Create a target attached to a file descriptor. @descriptor is kept open until the target is finalized.  ::: ...","deprecated":null},{"type":"ctor","name":"new_to_file","type_name":"Target","ident":"vips_target_new_to_file","summary":"Create a target attached to a file.","deprecated":null},{"type":"ctor","name":"new_to_memory","type_name":"Target","ident":"vips_target_new_to_memory","summary":"Create a target which will write to a memory area. Read from @blob to get memory.  ::: seealso ...","deprecated":null},{"type":"ctor","name":"newv","type_name":"ArrayDouble","ident":"vips_array_double_newv","summary":"Allocate a new array of @n doubles and copy @... into it. Free with [method@Area.unref].  ::: seealso  ...","deprecated":null},{"type":"ctor","name":"newv","type_name":"ArrayImage","ident":"vips_array_image_newv","summary":"Allocate a new array of @n [class@Image] and copy @... into it. Free with [method@Area.unref].  The images will ...","deprecated":null},{"type":"ctor","name":"newv","type_name":"ArrayInt","ident":"vips_array_int_newv","summary":"Allocate a new array of @n ints and copy @... into it. Free with [method@Area.unref].  ::: seealso  ...","deprecated":null},{"type":"ctor","name":"niftiload","type_name":"Image","ident":"vips_niftiload","summary":"Read a NIFTI image file into a VIPS image.  NIFTI metadata is attached with the \"nifti-\" prefix.  ...","deprecated":null},{"type":"ctor","name":"niftiload_source","type_name":"Image","ident":"vips_niftiload_source","summary":"Exactly as [ctor@Image.niftiload], but read from a source.","deprecated":null},{"type":"ctor","name":"openexrload","type_name":"Image","ident":"vips_openexrload","summary":"Read a OpenEXR file into a VIPS image.  The reader can handle scanline and tiled OpenEXR images. It ...","deprecated":null},{"type":"ctor","name":"openslideload","type_name":"Image","ident":"vips_openslideload","summary":"Read a virtual slide supported by the OpenSlide library into a VIPS image. OpenSlide supports images in Aperio, Hamamatsu, ...","deprecated":null},{"type":"ctor","name":"openslideload_source","type_name":"Image","ident":"vips_openslideload_source","summary":"Exactly as [ctor@Image.openslideload], but read from a source.  ::: tip \"Optional arguments\"     * @level: ...","deprecated":null},{"type":"ctor","name":"pdfload","type_name":"Image","ident":"vips_pdfload","summary":"Render a PDF file into a VIPS image.  The output image is always RGBA --- CMYK PDFs will ...","deprecated":null},{"type":"ctor","name":"pdfload_buffer","type_name":"Image","ident":"vips_pdfload_buffer","summary":"Read a PDF-formatted memory buffer into a VIPS image. Exactly as [ctor@Image.pdfload], but read from memory.  You must ...","deprecated":null},{"type":"ctor","name":"pdfload_source","type_name":"Image","ident":"vips_pdfload_source","summary":"Exactly as [ctor@Image.pdfload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"perlin","type_name":"Image","ident":"vips_perlin","summary":"Create a one-band float image of Perlin noise.  See:  https://en.wikipedia.org/wiki/Perlin_noise  Use @cell_size to set the size ...","deprecated":null},{"type":"ctor","name":"pngload","type_name":"Image","ident":"vips_pngload","summary":"Read a PNG file into a VIPS image. It can read all png images, including 8- and 16-bit images, ...","deprecated":null},{"type":"ctor","name":"pngload_buffer","type_name":"Image","ident":"vips_pngload_buffer","summary":"Exactly as [ctor@Image.pngload], but read from a PNG-formatted memory block.  You must not free the buffer while @out ...","deprecated":null},{"type":"ctor","name":"pngload_source","type_name":"Image","ident":"vips_pngload_source","summary":"Exactly as [ctor@Image.pngload], but read from a source.  ::: tip \"Optional arguments\"     * @fail_on: ...","deprecated":null},{"type":"ctor","name":"ppmload","type_name":"Image","ident":"vips_ppmload","summary":"Read a PPM/PBM/PGM/PFM file into a VIPS image.  It can read 1, 8, 16 and 32 bit images, ...","deprecated":null},{"type":"ctor","name":"ppmload_source","type_name":"Image","ident":"vips_ppmload_source","summary":"Exactly as [ctor@Image.ppmload], but read from a source.  ::: seealso     [ctor@Image.ppmload].","deprecated":null},{"type":"ctor","name":"profile_load","type_name":"Blob","ident":"vips_profile_load","summary":"Load a named profile.  Profiles are loaded from four sources:  - The special name `\"none\"` means no ...","deprecated":null},{"type":"ctor","name":"radload","type_name":"Image","ident":"vips_radload","summary":"Read a Radiance (HDR) file into a VIPS image.  Radiance files are read as [enum@Vips.Coding.RAD]. They have one ...","deprecated":null},{"type":"ctor","name":"radload_buffer","type_name":"Image","ident":"vips_radload_buffer","summary":"Exactly as [ctor@Image.radload], but read from a HDR-formatted memory block.  You must not free the buffer while @out ...","deprecated":null},{"type":"ctor","name":"radload_source","type_name":"Image","ident":"vips_radload_source","summary":"Exactly as [ctor@Image.radload], but read from a source.  ::: seealso     [ctor@Image.radload].","deprecated":null},{"type":"ctor","name":"rawload","type_name":"Image","ident":"vips_rawload","summary":"This operation mmaps the file, setting up @out so that access to that image will read from the file. ...","deprecated":null},{"type":"ctor","name":"sdf","type_name":"Image","ident":"vips_sdf","summary":"Create a signed distance field (SDF) image of the given @shape.  Different shapes use different combinations of the ...","deprecated":null},{"type":"ctor","name":"sines","type_name":"Image","ident":"vips_sines","summary":"Creates a float one band image of the a sine waveform in two dimensions.  The number of horizontal ...","deprecated":null},{"type":"ctor","name":"svgload","type_name":"Image","ident":"vips_svgload","summary":"Render a SVG file into a VIPS image.  Rendering uses the librsvg library and should be fast.  ...","deprecated":null},{"type":"ctor","name":"svgload_buffer","type_name":"Image","ident":"vips_svgload_buffer","summary":"Read a SVG-formatted memory block into a VIPS image. Exactly as [ctor@Image.svgload], but read from a memory buffer.  ...","deprecated":null},{"type":"ctor","name":"svgload_source","type_name":"Image","ident":"vips_svgload_source","summary":"Exactly as [ctor@Image.svgload], but read from a source.  ::: seealso     [ctor@Image.svgload].","deprecated":null},{"type":"ctor","name":"svgload_string","type_name":"Image","ident":"vips_svgload_string","summary":"Exactly as [ctor@Image.svgload], but read from a string. This function takes a copy of the string.  ::: tip ...","deprecated":null},{"type":"ctor","name":"system","type_name":"Image","ident":"vips_system","summary":"::: note \"Optional arguments\"     * @in: array of input images     * ...","deprecated":null},{"type":"ctor","name":"text","type_name":"Image","ident":"vips_text","summary":"Draw the string @text to an image.  @out is normally a one-band 8-bit unsigned char image, with 0 ...","deprecated":null},{"type":"ctor","name":"thumbnail","type_name":"Image","ident":"vips_thumbnail","summary":"Make a thumbnail from a file.  Shrinking is done in three stages: using any shrink-on-load features available in ...","deprecated":null},{"type":"ctor","name":"thumbnail_buffer","type_name":"Image","ident":"vips_thumbnail_buffer","summary":"Exactly as [ctor@Image.thumbnail], but read from a memory buffer.  One extra optional argument, @option_string, lets you pass options ...","deprecated":null},{"type":"ctor","name":"thumbnail_source","type_name":"Image","ident":"vips_thumbnail_source","summary":"Exactly as [ctor@Image.thumbnail], but read from a source.  One extra optional argument, @option_string, lets you pass options to ...","deprecated":null},{"type":"ctor","name":"tiffload","type_name":"Image","ident":"vips_tiffload","summary":"Read a TIFF file into a VIPS image.  It is a full baseline TIFF 6 reader, with extensions ...","deprecated":null},{"type":"ctor","name":"tiffload_buffer","type_name":"Image","ident":"vips_tiffload_buffer","summary":"Read a TIFF-formatted memory block into a VIPS image. Exactly as [ctor@Image.tiffload], but read from a memory source.  ...","deprecated":null},{"type":"ctor","name":"tiffload_source","type_name":"Image","ident":"vips_tiffload_source","summary":"Exactly as [ctor@Image.tiffload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"tonelut","type_name":"Image","ident":"vips_tonelut","summary":"[ctor@Image.tonelut] generates a tone curve for the adjustment of image levels.  This is mostly designed for adjusting the ...","deprecated":null},{"type":"ctor","name":"vipsload","type_name":"Image","ident":"vips_vipsload","summary":"Read in a vips image.  ::: seealso     [method@Image.vipssave].","deprecated":null},{"type":"ctor","name":"vipsload_source","type_name":"Image","ident":"vips_vipsload_source","summary":"Exactly as [ctor@Image.vipsload], but read from a source.","deprecated":null},{"type":"ctor","name":"webpload","type_name":"Image","ident":"vips_webpload","summary":"Read a WebP file into a VIPS image.  Use @page to select a page to render, numbering from ...","deprecated":null},{"type":"ctor","name":"webpload_buffer","type_name":"Image","ident":"vips_webpload_buffer","summary":"Read a WebP-formatted memory block into a VIPS image. Exactly as [ctor@Image.webpload], but read from a memory buffer.  ...","deprecated":null},{"type":"ctor","name":"webpload_source","type_name":"Image","ident":"vips_webpload_source","summary":"Exactly as [ctor@Image.webpload], but read from a source.  ::: tip \"Optional arguments\"     * @page: ...","deprecated":null},{"type":"ctor","name":"worley","type_name":"Image","ident":"vips_worley","summary":"Create a one-band float image of Worley noise.  See:  https://en.wikipedia.org/wiki/Worley_noise  Use @cell_size to set the size ...","deprecated":null},{"type":"ctor","name":"xyz","type_name":"Image","ident":"vips_xyz","summary":"Create a two-band uint32 image where the elements in the first band have the value of their x coordinate ...","deprecated":null},{"type":"ctor","name":"zone","type_name":"Image","ident":"vips_zone","summary":"Create a one-band image of a zone plate.  Pixels are normally in [-1, +1], set @uchar to output ...","deprecated":null},{"type":"enum","name":"Access","ctype":"VipsAccess","summary":"The type of access an operation has to supply. See [method@Image.tilecache] and [class@Foreign].  @VIPS_ACCESS_RANDOM means requests can come ...","deprecated":null},{"type":"enum","name":"Align","ctype":"VipsAlign","summary":"See [method@Image.join] and so on.  Operations like [method@Image.join] need to be told whether to align images on the ...","deprecated":null},{"type":"enum","name":"Angle","ctype":"VipsAngle","summary":"See [method@Image.rot] and so on.  Fixed rotate angles.  ::: seealso     [method@Image.rot].","deprecated":null},{"type":"enum","name":"Angle45","ctype":"VipsAngle45","summary":"See [method@Image.rot45] and so on.  Fixed rotate angles.  ::: seealso     [method@Image.rot45].","deprecated":null},{"type":"enum","name":"BandFormat","ctype":"VipsBandFormat","summary":"The format used for each band element.  Each corresponds to a native C type for the current machine. ...","deprecated":null},{"type":"enum","name":"BlendMode","ctype":"VipsBlendMode","summary":"The various Porter-Duff and PDF blend modes. See [func@Image.composite], for example.  The Cairo docs have a nice explanation ...","deprecated":null},{"type":"enum","name":"Coding","ctype":"VipsCoding","summary":"How pixels are coded.  Normally, pixels are uncoded and can be manipulated as you would expect. However some ...","deprecated":null},{"type":"enum","name":"Combine","ctype":"VipsCombine","summary":"How to combine values. See [method@Image.compass], for example.","deprecated":null},{"type":"enum","name":"CombineMode","ctype":"VipsCombineMode","summary":"See [method@Image.draw_image] and so on.  Operations like [method@Image.draw_image] need to be told how to combine images from two ...","deprecated":null},{"type":"enum","name":"CompassDirection","ctype":"VipsCompassDirection","summary":"A direction on a compass. Used for [method@Image.gravity], for example.","deprecated":null},{"type":"enum","name":"DemandStyle","ctype":"VipsDemandStyle","summary":"See [method@Image.pipelinev]. Operations can hint the kind of demand geometry they prefer to the VIPS image IO system.  ...","deprecated":null},{"type":"enum","name":"Direction","ctype":"VipsDirection","summary":"See [method@Image.flip], [method@Image.join] and so on.  Operations like [method@Image.flip] need to be told whether to flip left-right or ...","deprecated":null},{"type":"enum","name":"Extend","ctype":"VipsExtend","summary":"See [method@Image.embed], [method@Image.conv], [method@Image.affine] and so on.  When the edges of an image are extended, you can specify ...","deprecated":null},{"type":"enum","name":"FailOn","ctype":"VipsFailOn","summary":"How sensitive loaders are to errors, from never stop (very insensitive), to stop on the smallest warning (very sensitive). ...","deprecated":null},{"type":"enum","name":"ForeignDzContainer","ctype":"VipsForeignDzContainer","summary":"How many pyramid layers to create.","deprecated":null},{"type":"enum","name":"ForeignDzDepth","ctype":"VipsForeignDzDepth","summary":"How many pyramid layers to create.","deprecated":null},{"type":"enum","name":"ForeignDzLayout","ctype":"VipsForeignDzLayout","summary":"What directory layout and metadata standard to use.","deprecated":null},{"type":"enum","name":"ForeignHeifCompression","ctype":"VipsForeignHeifCompression","summary":"The compression format to use inside a HEIF container.  This is assumed to use the same numbering as `heif_compression_format`.","deprecated":null},{"type":"enum","name":"ForeignHeifEncoder","ctype":"VipsForeignHeifEncoder","summary":"The selected encoder to use. If libheif hasn't been compiled with the selected encoder, we will fallback to the ...","deprecated":null},{"type":"enum","name":"ForeignJpegSubsample","ctype":"VipsForeignJpegSubsample","summary":"No description available.","deprecated":null},{"type":"enum","name":"ForeignPpmFormat","ctype":"VipsForeignPpmFormat","summary":"The netpbm file format to save as.  [enum@Vips.ForeignPpmFormat.PBM] images are single bit.  [enum@Vips.ForeignPpmFormat.PGM] images are 8, 16, ...","deprecated":null},{"type":"enum","name":"ForeignSubsample","ctype":"VipsForeignSubsample","summary":"Set subsampling mode.","deprecated":null},{"type":"enum","name":"ForeignTiffCompression","ctype":"VipsForeignTiffCompression","summary":"The compression types supported by the tiff writer.  Use @Q to set the jpeg compression level, default 75. ...","deprecated":null},{"type":"enum","name":"ForeignTiffPredictor","ctype":"VipsForeignTiffPredictor","summary":"The predictor can help deflate and lzw compression. The values are fixed by the tiff library.","deprecated":null},{"type":"enum","name":"ForeignTiffResunit","ctype":"VipsForeignTiffResunit","summary":"Use inches or centimeters as the resolution unit for a tiff file.","deprecated":null},{"type":"enum","name":"ForeignWebpPreset","ctype":"VipsForeignWebpPreset","summary":"Tune lossy encoder settings for different image types.","deprecated":null},{"type":"enum","name":"ImageType","ctype":"VipsImageType","summary":"No description available.","deprecated":null},{"type":"enum","name":"Intent","ctype":"VipsIntent","summary":"The rendering intent. [enum@Vips.Intent.ABSOLUTE] is best for scientific work, [enum@Vips.Intent.RELATIVE] is usually best for accurate communication with other imaging libraries.","deprecated":null},{"type":"enum","name":"Interesting","ctype":"VipsInteresting","summary":"Pick the algorithm vips uses to decide image \"interestingness\". This is used by [method@Image.smartcrop], for example, to decide what ...","deprecated":null},{"type":"enum","name":"Interpretation","ctype":"VipsInterpretation","summary":"How the values in an image should be interpreted. For example, a three-band float image of type @VIPS_INTERPRETATION_LAB should ...","deprecated":null},{"type":"enum","name":"Kernel","ctype":"VipsKernel","summary":"The resampling kernels vips supports. See [method@Image.reduce], for example.","deprecated":null},{"type":"enum","name":"OperationBoolean","ctype":"VipsOperationBoolean","summary":"See also: [method@Image.boolean].","deprecated":null},{"type":"enum","name":"OperationComplex","ctype":"VipsOperationComplex","summary":"See also: [method@Image.complex].","deprecated":null},{"type":"enum","name":"OperationComplex2","ctype":"VipsOperationComplex2","summary":"See also: [method@Image.complex2].","deprecated":null},{"type":"enum","name":"OperationComplexget","ctype":"VipsOperationComplexget","summary":"See also: [method@Image.complexget].","deprecated":null},{"type":"enum","name":"OperationMath","ctype":"VipsOperationMath","summary":"See also: [method@Image.math].","deprecated":null},{"type":"enum","name":"OperationMath2","ctype":"VipsOperationMath2","summary":"See also: [method@Image.math].","deprecated":null},{"type":"enum","name":"OperationMorphology","ctype":"VipsOperationMorphology","summary":"More like hit-miss, really.  ::: seealso     [method@Image.morph].","deprecated":null},{"type":"enum","name":"OperationRelational","ctype":"VipsOperationRelational","summary":"See also: [method@Image.relational].","deprecated":null},{"type":"enum","name":"OperationRound","ctype":"VipsOperationRound","summary":"See also: [method@Image.round].","deprecated":null},{"type":"enum","name":"PCS","ctype":"VipsPCS","summary":"Pick a Profile Connection Space for [method@Image.icc_import] and [method@Image.icc_export]. LAB is usually best, XYZ can be more convenient in ...","deprecated":null},{"type":"enum","name":"Precision","ctype":"VipsPrecision","summary":"How accurate an operation should be.","deprecated":null},{"type":"enum","name":"RegionShrink","ctype":"VipsRegionShrink","summary":"How to calculate the output pixels when shrinking a 2x2 region.","deprecated":null},{"type":"enum","name":"SdfShape","ctype":"VipsSdfShape","summary":"The SDF to generate,  ::: seealso     [ctor@Image.sdf].","deprecated":null},{"type":"enum","name":"Size","ctype":"VipsSize","summary":"Controls whether an operation should upsize, downsize, both up and downsize, or force a size.  ::: seealso  ...","deprecated":null},{"type":"enum","name":"TextWrap","ctype":"VipsTextWrap","summary":"Sets the word wrapping style for [ctor@Image.text] when used with a maximum width.  ::: seealso    ...","deprecated":null},{"type":"function","name":"add_option_entries","ident":"vips_add_option_entries","summary":"Add the standard vips [struct@GLib.OptionEntry] to a [struct@GLib.OptionGroup].  ::: seealso     [ctor@GLib.OptionGroup.new].","deprecated":null},{"type":"function","name":"allocate_input_array","ident":"vips_allocate_input_array","summary":"Convenience function --- make a `NULL`-terminated array of input images. Use with [func@start_many].  ::: seealso    ...","deprecated":null},{"type":"function","name":"amiMSBfirst","ident":"vips_amiMSBfirst","summary":"No description available.","deprecated":null},{"type":"function","name":"block_untrusted_set","ident":"vips_block_untrusted_set","summary":"Set the block state on all untrusted operations.  ```c vips_block_untrusted_set(TRUE); ```  Will block all untrusted operations from ...","deprecated":null},{"type":"function","name":"break_token","ident":"vips_break_token","summary":"No description available.","deprecated":null},{"type":"function","name":"cache_drop_all","ident":"vips_cache_drop_all","summary":"Drop the whole operation cache, handy for leak tracking. Also called automatically on [func@shutdown].","deprecated":null},{"type":"function","name":"cache_get_max","ident":"vips_cache_get_max","summary":"Get the maximum number of operations we keep in cache.","deprecated":null},{"type":"function","name":"cache_get_max_files","ident":"vips_cache_get_max_files","summary":"Get the maximum number of tracked files we allow before we start dropping cached operations. See [func@tracked_get_files].  libvips ...","deprecated":null},{"type":"function","name":"cache_get_max_mem","ident":"vips_cache_get_max_mem","summary":"Get the maximum amount of tracked memory we allow before we start dropping cached operations. See [func@tracked_get_mem].  ::: ...","deprecated":null},{"type":"function","name":"cache_get_size","ident":"vips_cache_get_size","summary":"Get the current number of operations in cache.","deprecated":null},{"type":"function","name":"cache_operation_build","ident":"vips_cache_operation_build","summary":"A binding-friendly version of [func@cache_operation_buildp].  After calling this, @operation has the same ref count as when it went ...","deprecated":null},{"type":"function","name":"cache_operation_buildp","ident":"vips_cache_operation_buildp","summary":"Look up @operation in the cache. If we get a hit, unref @operation, ref the old one and return ...","deprecated":null},{"type":"function","name":"cache_print","ident":"vips_cache_print","summary":"Print the whole operation cache to stdout. Handy for debugging.","deprecated":null},{"type":"function","name":"cache_set_dump","ident":"vips_cache_set_dump","summary":"Handy for debugging. Print the operation cache to stdout just before exit.  ::: seealso     [func@cache_set_trace].","deprecated":null},{"type":"function","name":"cache_set_max","ident":"vips_cache_set_max","summary":"Set the maximum number of operations we keep in cache.","deprecated":null},{"type":"function","name":"cache_set_max_files","ident":"vips_cache_set_max_files","summary":"Set the maximum number of tracked files we allow before we start dropping cached operations. See [func@tracked_get_files].  ::: ...","deprecated":null},{"type":"function","name":"cache_set_max_mem","ident":"vips_cache_set_max_mem","summary":"Set the maximum amount of tracked memory we allow before we start dropping cached operations. See [func@tracked_get_mem].  libvips ...","deprecated":null},{"type":"function","name":"cache_set_trace","ident":"vips_cache_set_trace","summary":"Handy for debugging. Print operation cache actions to stdout as we run.  You can set the environment variable ...","deprecated":null},{"type":"function","name":"call","ident":"vips_call","summary":"[func@call] calls the named operation, passing in required arguments and then setting any optional ones from the remainder of ...","deprecated":null},{"type":"function","name":"call_argv","ident":"vips_call_argv","summary":"No description available.","deprecated":null},{"type":"function","name":"call_options","ident":"vips_call_options","summary":"No description available.","deprecated":null},{"type":"function","name":"call_required_optional","ident":"vips_call_required_optional","summary":"This is the main entry point for the C and C++ varargs APIs. @operation is executed, supplying @required and ...","deprecated":null},{"type":"function","name":"call_split","ident":"vips_call_split","summary":"No description available.","deprecated":null},{"type":"function","name":"call_split_option_string","ident":"vips_call_split_option_string","summary":"No description available.","deprecated":null},{"type":"function","name":"check_8or16","ident":"vips_check_8or16","summary":"Check that the image is 8 or 16-bit integer, signed or unsigned. Otherwise set an error message and return ...","deprecated":null},{"type":"function","name":"check_bandno","ident":"vips_check_bandno","summary":"@bandno should be a valid band number (ie. 0 to im->Bands - 1), or can be -1, meaning all ...","deprecated":null},{"type":"function","name":"check_bands","ident":"vips_check_bands","summary":"Check that the image has @bands bands. Otherwise set an error message and return non-zero.  ::: seealso  ...","deprecated":null},{"type":"function","name":"check_bands_1or3","ident":"vips_check_bands_1or3","summary":"Check that the image has either one or three bands. Otherwise set an error message and return non-zero.  ...","deprecated":null},{"type":"function","name":"check_bands_1orn","ident":"vips_check_bands_1orn","summary":"Check that the images have the same number of bands, or that one of the images has just 1 ...","deprecated":null},{"type":"function","name":"check_bands_1orn_unary","ident":"vips_check_bands_1orn_unary","summary":"Check that an image has 1 or @n bands. Handy for unary operations, cf. [func@check_bands_1orn]. If not, set an ...","deprecated":null},{"type":"function","name":"check_bands_atleast","ident":"vips_check_bands_atleast","summary":"Check that the image has at least @bands bands. Otherwise set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_bands_same","ident":"vips_check_bands_same","summary":"Check that the images have the same number of bands. If not, set an error message and return non-zero. ...","deprecated":null},{"type":"function","name":"check_coding","ident":"vips_check_coding","summary":"Check that the image has the required @coding. If not, set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_coding_known","ident":"vips_check_coding_known","summary":"Check that the image is uncoded, LABQ coded or RAD coded. If not, set an error message and return ...","deprecated":null},{"type":"function","name":"check_coding_noneorlabq","ident":"vips_check_coding_noneorlabq","summary":"Check that the image is uncoded or LABQ coded. If not, set an error message and return non-zero.  ...","deprecated":null},{"type":"function","name":"check_coding_same","ident":"vips_check_coding_same","summary":"Check that the images have the same coding. If not, set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_complex","ident":"vips_check_complex","summary":"Check that the image is complex. Otherwise set an error message and return non-zero.  ::: seealso   ...","deprecated":null},{"type":"function","name":"check_format","ident":"vips_check_format","summary":"Check that the image has the specified format. Otherwise set an error message and return non-zero.  ::: seealso ...","deprecated":null},{"type":"function","name":"check_format_same","ident":"vips_check_format_same","summary":"Check that the images have the same format. If not, set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_hist","ident":"vips_check_hist","summary":"Histogram images must have width or height 1, and must not have more than 65536 elements. Return 0 if ...","deprecated":null},{"type":"function","name":"check_int","ident":"vips_check_int","summary":"Check that the image is in one of the integer formats. Otherwise set an error message and return non-zero. ...","deprecated":null},{"type":"function","name":"check_matrix","ident":"vips_check_matrix","summary":"Matrix images must have width and height less than 100000 and have 1 band.  Return 0 if the ...","deprecated":null},{"type":"function","name":"check_mono","ident":"vips_check_mono","summary":"Check that the image has exactly one band. Otherwise set an error message and return non-zero.  ::: seealso ...","deprecated":null},{"type":"function","name":"check_noncomplex","ident":"vips_check_noncomplex","summary":"Check that the image is not complex. Otherwise set an error message and return non-zero.  ::: seealso  ...","deprecated":null},{"type":"function","name":"check_oddsquare","ident":"vips_check_oddsquare","summary":"Check that the image is square and that the sides are odd. If not, set an error message and ...","deprecated":null},{"type":"function","name":"check_precision_intfloat","ident":"vips_check_precision_intfloat","summary":"Check that @prec image is either float or int. If not, set an error message and return non-zero.  ...","deprecated":null},{"type":"function","name":"check_separable","ident":"vips_check_separable","summary":"Separable matrix images must have width or height 1. Return 0 if the image will pass, or -1 and ...","deprecated":null},{"type":"function","name":"check_size_same","ident":"vips_check_size_same","summary":"Check that the images have the same size. If not, set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_twocomponents","ident":"vips_check_twocomponents","summary":"Check that the image is has two \"components\", ie. is a one-band complex or a two-band non-complex. Otherwise set ...","deprecated":null},{"type":"function","name":"check_u8or16","ident":"vips_check_u8or16","summary":"Check that the image is 8 or 16-bit unsigned integer. Otherwise set an error message and return non-zero.  ...","deprecated":null},{"type":"function","name":"check_u8or16orf","ident":"vips_check_u8or16orf","summary":"Check that the image is 8 or 16-bit unsigned integer, or float. Otherwise set an error message and return ...","deprecated":null},{"type":"function","name":"check_uint","ident":"vips_check_uint","summary":"Check that the image is in one of the unsigned integer formats. Otherwise set an error message and return ...","deprecated":null},{"type":"function","name":"check_uintorf","ident":"vips_check_uintorf","summary":"Check that the image is unsigned int or float. Otherwise set an error message and return non-zero.  ::: ...","deprecated":null},{"type":"function","name":"check_uncoded","ident":"vips_check_uncoded","summary":"Check that the image is not coded. If not, set an error message and return non-zero.  ::: seealso ...","deprecated":null},{"type":"function","name":"check_vector","ident":"vips_check_vector","summary":"Operations with a vector constant need a 1-element vector, or a vector with the same number of elements as ...","deprecated":null},{"type":"function","name":"check_vector_length","ident":"vips_check_vector_length","summary":"Check that @n == @len.  ::: seealso     [func@error].","deprecated":null},{"type":"function","name":"class_find","ident":"vips_class_find","summary":"Search below @basename, return the first class whose name or @nickname matches.  ::: seealso     [func@type_find]","deprecated":null},{"type":"function","name":"class_map_all","ident":"vips_class_map_all","summary":"Loop over all the subclasses of @type. Non-abstract classes only. Stop when @fn returns non-`NULL` and return that value.","deprecated":null},{"type":"function","name":"col_C2Ccmc","ident":"vips_col_C2Ccmc","summary":"Calculate Ccmc from C.","deprecated":null},{"type":"function","name":"col_Ccmc2C","ident":"vips_col_Ccmc2C","summary":"Calculate C from Ccmc using a table. Call [func@col_make_tables_CMC] at least once before using this function.","deprecated":null},{"type":"function","name":"col_Ch2ab","ident":"vips_col_Ch2ab","summary":"Calculate ab from Ch, h in degrees.","deprecated":null},{"type":"function","name":"col_Ch2hcmc","ident":"vips_col_Ch2hcmc","summary":"Calculate hcmc from C and h.","deprecated":null},{"type":"function","name":"col_Chcmc2h","ident":"vips_col_Chcmc2h","summary":"Calculate h from C and hcmc, using a table. Call [func@col_make_tables_CMC] at least once before using this function.","deprecated":null},{"type":"function","name":"col_L2Lcmc","ident":"vips_col_L2Lcmc","summary":"Calculate Lcmc from L.","deprecated":null},{"type":"function","name":"col_Lab2XYZ","ident":"vips_col_Lab2XYZ","summary":"Calculate XYZ from Lab, D65.  ::: seealso     [method@Image.Lab2XYZ].","deprecated":null},{"type":"function","name":"col_Lcmc2L","ident":"vips_col_Lcmc2L","summary":"Calculate L from Lcmc using a table. Call [func@col_make_tables_CMC] at least once before using this function.","deprecated":null},{"type":"function","name":"col_XYZ2Lab","ident":"vips_col_XYZ2Lab","summary":"Calculate XYZ from Lab, D65.  ::: seealso     [method@Image.XYZ2Lab].","deprecated":null},{"type":"function","name":"col_XYZ2scRGB","ident":"vips_col_XYZ2scRGB","summary":"Turn XYZ into scRGB.  ::: seealso     [method@Image.XYZ2scRGB].","deprecated":null},{"type":"function","name":"col_ab2Ch","ident":"vips_col_ab2Ch","summary":"No description available.","deprecated":null},{"type":"function","name":"col_ab2h","ident":"vips_col_ab2h","summary":"No description available.","deprecated":null},{"type":"function","name":"col_dE00","ident":"vips_col_dE00","summary":"CIEDE2000, from:  Luo, Cui, Rigg, \"The Development of the CIE 2000 Colour-Difference Formula: CIEDE2000\", COLOR research and application, ...","deprecated":null},{"type":"function","name":"col_make_tables_CMC","ident":"vips_col_make_tables_CMC","summary":"Make the lookup tables for cmc.","deprecated":null},{"type":"function","name":"col_sRGB2scRGB_16","ident":"vips_col_sRGB2scRGB_16","summary":"No description available.","deprecated":null},{"type":"function","name":"col_sRGB2scRGB_16_noclip","ident":"vips_col_sRGB2scRGB_16_noclip","summary":"No description available.","deprecated":null},{"type":"function","name":"col_sRGB2scRGB_8","ident":"vips_col_sRGB2scRGB_8","summary":"No description available.","deprecated":null},{"type":"function","name":"col_sRGB2scRGB_8_noclip","ident":"vips_col_sRGB2scRGB_8_noclip","summary":"No description available.","deprecated":null},{"type":"function","name":"col_scRGB2BW_16","ident":"vips_col_scRGB2BW_16","summary":"No description available.","deprecated":null},{"type":"function","name":"col_scRGB2BW_8","ident":"vips_col_scRGB2BW_8","summary":"No description available.","deprecated":null},{"type":"function","name":"col_scRGB2XYZ","ident":"vips_col_scRGB2XYZ","summary":"Turn scRGB into XYZ.  ::: seealso     [method@Image.scRGB2XYZ].","deprecated":null},{"type":"function","name":"col_scRGB2sRGB_16","ident":"vips_col_scRGB2sRGB_16","summary":"No description available.","deprecated":null},{"type":"function","name":"col_scRGB2sRGB_8","ident":"vips_col_scRGB2sRGB_8","summary":"No description available.","deprecated":null},{"type":"function","name":"concurrency_get","ident":"vips_concurrency_get","summary":"Returns the number of worker threads that vips should use when running [func@threadpool_run].  vips gets this values from ...","deprecated":null},{"type":"function","name":"concurrency_set","ident":"vips_concurrency_set","summary":"Sets the number of worker threads that vips should use when running [func@threadpool_run].  The special value 0 means ...","deprecated":null},{"type":"function","name":"enum_from_nick","ident":"vips_enum_from_nick","summary":"No description available.","deprecated":null},{"type":"function","name":"enum_nick","ident":"vips_enum_nick","summary":"No description available.","deprecated":null},{"type":"function","name":"enum_string","ident":"vips_enum_string","summary":"No description available.","deprecated":null},{"type":"function","name":"error","ident":"vips_error","summary":"Format the string in the style of [`printf()`](man:printf(3)) and append to the error buffer.  ::: seealso   ...","deprecated":null},{"type":"function","name":"error_buffer","ident":"vips_error_buffer","summary":"Get a pointer to the start of the error buffer as a C string. The string is owned by ...","deprecated":null},{"type":"function","name":"error_buffer_copy","ident":"vips_error_buffer_copy","summary":"Return a copy of the vips error buffer, and clear it.","deprecated":null},{"type":"function","name":"error_clear","ident":"vips_error_clear","summary":"Clear and reset the error buffer. This is typically called after presenting an error to the user.  ::: ...","deprecated":null},{"type":"function","name":"error_exit","ident":"vips_error_exit","summary":"Sends a formatted error message to stderr, then sends the contents of the error buffer, if any, then shuts ...","deprecated":null},{"type":"function","name":"error_freeze","ident":"vips_error_freeze","summary":"Stop errors being logged. Use [func@error_thaw] to unfreeze. You can nest freeze/thaw pairs.","deprecated":null},{"type":"function","name":"error_g","ident":"vips_error_g","summary":"This function sets the glib error pointer from the vips error buffer and clears it. It's handy for returning ...","deprecated":null},{"type":"function","name":"error_system","ident":"vips_error_system","summary":"Format the string in the style of printf() and append to the error buffer. Then create and append a ...","deprecated":null},{"type":"function","name":"error_thaw","ident":"vips_error_thaw","summary":"Re-enable error logging.","deprecated":null},{"type":"function","name":"existsf","ident":"vips_existsf","summary":"No description available.","deprecated":null},{"type":"function","name":"file_length","ident":"vips_file_length","summary":"No description available.","deprecated":null},{"type":"function","name":"filename_get_filename","ident":"vips_filename_get_filename","summary":"Given a vips filename like \"fred.jpg[Q=90]\", return a new string of just the filename part, \"fred.jpg\" in this case. ...","deprecated":null},{"type":"function","name":"filename_get_options","ident":"vips_filename_get_options","summary":"Given a vips filename like \"fred.jpg[Q=90]\", return a new string of just the options part, \"[Q=90]\" in this case. ...","deprecated":null},{"type":"function","name":"filename_suffix_match","ident":"vips_filename_suffix_match","summary":"No description available.","deprecated":null},{"type":"function","name":"flags_from_nick","ident":"vips_flags_from_nick","summary":"No description available.","deprecated":null},{"type":"function","name":"foreign_flags","ident":"vips_foreign_flags","summary":"Return the flags for @filename using @loader. @loader is something like \"tiffload\" or \"VipsForeignLoadTiff\".","deprecated":null},{"type":"function","name":"format_sizeof","ident":"vips_format_sizeof","summary":"No description available.","deprecated":null},{"type":"function","name":"format_sizeof_unsafe","ident":"vips_format_sizeof_unsafe","summary":"A fast but dangerous version of [func@format_sizeof]. You must have previously range-checked @format or you'll crash.","deprecated":null},{"type":"function","name":"g_error","ident":"vips_g_error","summary":"This function adds the [struct@GLib.Error] to the vips error buffer and clears it. It's the opposite of [func@error_g].  ...","deprecated":null},{"type":"function","name":"g_input_stream_new_from_source","ident":"vips_g_input_stream_new_from_source","summary":"Create a new [class@Gio.InputStream] wrapping a [class@Source]. This is useful for loaders like SVG and PDF which support [class@Gio.InputStream] ...","deprecated":null},{"type":"function","name":"g_thread_new","ident":"vips_g_thread_new","summary":"Wrapper for [ctor@GLib.Thread.try_new].","deprecated":null},{"type":"function","name":"get_argv0","ident":"vips_get_argv0","summary":"::: seealso     [func@INIT].","deprecated":null},{"type":"function","name":"get_disc_threshold","ident":"vips_get_disc_threshold","summary":"Return the number of bytes at which we flip between open via memory and open via disc. This defaults ...","deprecated":null},{"type":"function","name":"get_prgname","ident":"vips_get_prgname","summary":"Return the program name.  ::: seealso     [func@INIT].","deprecated":null},{"type":"function","name":"guess_libdir","ident":"vips_guess_libdir","summary":"[func@guess_libdir] tries to guess the install directory (usually the configure libdir, or $prefix/lib). You should pass in the value ...","deprecated":null},{"type":"function","name":"guess_prefix","ident":"vips_guess_prefix","summary":"[func@guess_prefix] tries to guess the install directory. You should pass in the value of argv[0] (the name your program ...","deprecated":null},{"type":"function","name":"hash_table_map","ident":"vips_hash_table_map","summary":"Like slist map, but for a hash table.","deprecated":null},{"type":"function","name":"icc_is_compatible_profile","ident":"vips_icc_is_compatible_profile","summary":"No description available.","deprecated":null},{"type":"function","name":"icc_present","ident":"vips_icc_present","summary":"VIPS can optionally be built without the ICC library. Use this function to test for its availability.","deprecated":null},{"type":"function","name":"init","ident":"vips_init","summary":"This function starts up libvips, see [func@INIT].  This function is for bindings which need to start up vips. ...","deprecated":null},{"type":"function","name":"interpolate","ident":"vips_interpolate","summary":"Look up the @interpolate method in the class and call it. Use [method@Interpolate.get_method] to get a direct pointer to ...","deprecated":null},{"type":"function","name":"iscasepostfix","ident":"vips_iscasepostfix","summary":"No description available.","deprecated":null},{"type":"function","name":"isdirf","ident":"vips_isdirf","summary":"No description available.","deprecated":null},{"type":"function","name":"ispoweroftwo","ident":"vips_ispoweroftwo","summary":"No description available.","deprecated":null},{"type":"function","name":"isprefix","ident":"vips_isprefix","summary":"No description available.","deprecated":null},{"type":"function","name":"leak_set","ident":"vips_leak_set","summary":"Turn on or off vips leak checking. See also `--vips-leak`, [func@add_option_entries] and the `VIPS_LEAK` environment variable.  You should ...","deprecated":null},{"type":"function","name":"malloc","ident":"vips_malloc","summary":"[func@GLib.malloc] local to @object, that is, the memory will be automatically freed for you when the object is closed. ...","deprecated":null},{"type":"function","name":"map_equal","ident":"vips_map_equal","summary":"No description available.","deprecated":null},{"type":"function","name":"max_coord_get","ident":"vips_max_coord_get","summary":"Return the maximum coordinate value. This can be the default, a value set set by the `--vips-max-coord` CLI arg, ...","deprecated":null},{"type":"function","name":"mkdirf","ident":"vips_mkdirf","summary":"No description available.","deprecated":null},{"type":"function","name":"nickname_find","ident":"vips_nickname_find","summary":"Return the VIPS nickname for a [alias@GObject.Type]. Handy for language bindings.","deprecated":null},{"type":"function","name":"pipe_read_limit_set","ident":"vips_pipe_read_limit_set","summary":"If a source does not support mmap or seek and the source is used with a loader that can ...","deprecated":null},{"type":"function","name":"profile_set","ident":"vips_profile_set","summary":"If set, vips will record profiling information, and dump it on program exit. These profiles can be analysed with ...","deprecated":null},{"type":"function","name":"pythagoras","ident":"vips_pythagoras","summary":"Pythagorean distance between two points in colour space. Lab/XYZ/CMC etc.","deprecated":null},{"type":"function","name":"realpath","ident":"vips_realpath","summary":"No description available.","deprecated":null},{"type":"function","name":"rename","ident":"vips_rename","summary":"No description available.","deprecated":null},{"type":"function","name":"rmdirf","ident":"vips_rmdirf","summary":"No description available.","deprecated":null},{"type":"function","name":"shutdown","ident":"vips_shutdown","summary":"Call this to drop caches, close plugins, terminate background threads, and finalize any internal library testing.  [func@shutdown] is ...","deprecated":null},{"type":"function","name":"sink_memory","ident":"vips_sink_memory","summary":"Loops over @im, generating it to a memory buffer attached to @im. It is used by vips to implement ...","deprecated":null},{"type":"function","name":"slist_equal","ident":"vips_slist_equal","summary":"Test two lists for equality.","deprecated":null},{"type":"function","name":"slist_filter","ident":"vips_slist_filter","summary":"Remove all occurrences of an item from a list. Returns the new head of the list.","deprecated":null},{"type":"function","name":"slist_fold2","ident":"vips_slist_fold2","summary":"Fold over a slist, applying @fn to each element.","deprecated":null},{"type":"function","name":"slist_free_all","ident":"vips_slist_free_all","summary":"Free a [struct@GLib.SList] of things which need [func@GLib.free]ing.","deprecated":null},{"type":"function","name":"slist_map2","ident":"vips_slist_map2","summary":"Map over a slist. _copy() the list in case the callback changes it.","deprecated":null},{"type":"function","name":"slist_map2_rev","ident":"vips_slist_map2_rev","summary":"Map backwards. We _reverse() rather than recurse and unwind to save stack.","deprecated":null},{"type":"function","name":"slist_map4","ident":"vips_slist_map4","summary":"Map over a slist. _copy() the list in case the callback changes it.","deprecated":null},{"type":"function","name":"start_many","ident":"vips_start_many","summary":"Start function for many images in. @a is a pointer to a `NULL`-terminated array of input images.  ::: ...","deprecated":null},{"type":"function","name":"start_one","ident":"vips_start_one","summary":"Start function for one image in. Input image is @a.  ::: seealso     [method@Image.generate].","deprecated":null},{"type":"function","name":"stop_many","ident":"vips_stop_many","summary":"Stop function for many images in. @a is a pointer to a `NULL`-terminated array of input images.  ::: ...","deprecated":null},{"type":"function","name":"stop_one","ident":"vips_stop_one","summary":"Stop function for one image in. Input image is @a.  ::: seealso     [method@Image.generate].","deprecated":null},{"type":"function","name":"strdup","ident":"vips_strdup","summary":"[func@GLib.strdup] a string. When @object is freed, the string will be freed for you.  If @object is `NULL`, ...","deprecated":null},{"type":"function","name":"strtod","ident":"vips_strtod","summary":"No description available.","deprecated":null},{"type":"function","name":"thread_execute","ident":"vips_thread_execute","summary":"A newly created or reused thread will execute @func with the argument @data.","deprecated":null},{"type":"function","name":"thread_isvips","ident":"vips_thread_isvips","summary":"No description available.","deprecated":null},{"type":"function","name":"thread_shutdown","ident":"vips_thread_shutdown","summary":"Free any thread-private data and flush any profiling information.  This function needs to be called when a thread ...","deprecated":null},{"type":"function","name":"threadpool_run","ident":"vips_threadpool_run","summary":"This function runs a set of threads over an image. Each thread first calls @start to create new per-thread ...","deprecated":null},{"type":"function","name":"tracked_aligned_alloc","ident":"vips_tracked_aligned_alloc","summary":"Allocate an area of memory aligned on a boundary specified by @align that will be tracked by [func@tracked_get_mem] and ...","deprecated":null},{"type":"function","name":"tracked_aligned_free","ident":"vips_tracked_aligned_free","summary":"Only use it to free memory that was previously allocated with [func@tracked_aligned_alloc] with a `NULL` first argument.  ::: ...","deprecated":null},{"type":"function","name":"tracked_close","ident":"vips_tracked_close","summary":"Exactly as close(2), but update the number of files currently open via [func@tracked_get_files]. This is used by the vips ...","deprecated":null},{"type":"function","name":"tracked_free","ident":"vips_tracked_free","summary":"Only use it to free memory that was previously allocated with [func@tracked_malloc] with a `NULL` first argument.  ::: ...","deprecated":null},{"type":"function","name":"tracked_get_allocs","ident":"vips_tracked_get_allocs","summary":"Returns the number of active allocations.","deprecated":null},{"type":"function","name":"tracked_get_files","ident":"vips_tracked_get_files","summary":"Returns the number of open files.","deprecated":null},{"type":"function","name":"tracked_get_mem","ident":"vips_tracked_get_mem","summary":"Returns the number of bytes currently allocated via [func@malloc] and friends. vips uses this figure to decide when to ...","deprecated":null},{"type":"function","name":"tracked_get_mem_highwater","ident":"vips_tracked_get_mem_highwater","summary":"Returns the largest number of bytes simultaneously allocated via [func@tracked_malloc]. Handy for estimating max memory requirements for a program.","deprecated":null},{"type":"function","name":"tracked_malloc","ident":"vips_tracked_malloc","summary":"Allocate an area of memory that will be tracked by [func@tracked_get_mem] and friends.  If allocation fails, [func@tracked_malloc] returns ...","deprecated":null},{"type":"function","name":"tracked_open","ident":"vips_tracked_open","summary":"Exactly as open(2), but the number of files currently open via [func@tracked_open] is available via [func@tracked_get_files]. This is used ...","deprecated":null},{"type":"function","name":"type_depth","ident":"vips_type_depth","summary":"No description available.","deprecated":null},{"type":"function","name":"type_find","ident":"vips_type_find","summary":"Search below @basename, return the [alias@GObject.Type] of the class whose name or @nickname matches, or 0 for not found. ...","deprecated":null},{"type":"function","name":"type_map","ident":"vips_type_map","summary":"Map over a type's children. Stop when @fn returns non-`NULL` and return that value.","deprecated":null},{"type":"function","name":"type_map_all","ident":"vips_type_map_all","summary":"Map over a type's children, direct and indirect. Stop when @fn returns non-`NULL` and return that value.","deprecated":null},{"type":"function","name":"value_get_area","ident":"vips_value_get_area","summary":"Get the pointer from an area. Don't touch count (area is static).","deprecated":null},{"type":"function","name":"value_get_array","ident":"vips_value_get_array","summary":"Return the pointer to the array held by @value. Optionally return the other properties of the array in @n, ...","deprecated":null},{"type":"function","name":"value_get_array_double","ident":"vips_value_get_array_double","summary":"Return the start of the array of doubles held by @value. optionally return the number of elements in @n. ...","deprecated":null},{"type":"function","name":"value_get_array_image","ident":"vips_value_get_array_image","summary":"Return the start of the array of images held by @value. optionally return the number of elements in @n. ...","deprecated":null},{"type":"function","name":"value_get_array_int","ident":"vips_value_get_array_int","summary":"Return the start of the array of ints held by @value. optionally return the number of elements in @n. ...","deprecated":null},{"type":"function","name":"value_get_array_object","ident":"vips_value_get_array_object","summary":"Return the start of the array of [class@GObject.Object] held by @value. Optionally return the number of elements in @n. ...","deprecated":null},{"type":"function","name":"value_get_blob","ident":"vips_value_get_blob","summary":"Returns the data pointer from a blob. Optionally returns the length too.  blobs are things like ICC profiles ...","deprecated":null},{"type":"function","name":"value_get_ref_string","ident":"vips_value_get_ref_string","summary":"Get the C string held internally by the [struct@GObject.Value].","deprecated":null},{"type":"function","name":"value_get_save_string","ident":"vips_value_get_save_string","summary":"Get the C string held internally by the GValue.","deprecated":null},{"type":"function","name":"value_is_null","ident":"vips_value_is_null","summary":"No description available.","deprecated":null},{"type":"function","name":"value_set_area","ident":"vips_value_set_area","summary":"Set value to be a ref-counted area of memory with a free function.","deprecated":null},{"type":"function","name":"value_set_array","ident":"vips_value_set_array","summary":"Set @value to be an array of things.  This allocates memory but does not initialise the contents: get ...","deprecated":null},{"type":"function","name":"value_set_array_double","ident":"vips_value_set_array_double","summary":"Set @value to hold a copy of @array. Pass in the array length in @n.  ::: seealso  ...","deprecated":null},{"type":"function","name":"value_set_array_image","ident":"vips_value_set_array_image","summary":"Set @value to hold an array of images. Pass in the array length in @n.  ::: seealso  ...","deprecated":null},{"type":"function","name":"value_set_array_int","ident":"vips_value_set_array_int","summary":"Set @value to hold a copy of @array. Pass in the array length in @n.  ::: seealso  ...","deprecated":null},{"type":"function","name":"value_set_array_object","ident":"vips_value_set_array_object","summary":"Set @value to hold an array of [class@GObject.Object]. Pass in the array length in @n.  ::: seealso  ...","deprecated":null},{"type":"function","name":"value_set_blob","ident":"vips_value_set_blob","summary":"Sets @value to hold a @data. When @value is freed, @data will be freed with @free_fn. @value also holds ...","deprecated":null},{"type":"function","name":"value_set_blob_free","ident":"vips_value_set_blob_free","summary":"Just like [func@value_set_blob], but when @value is freed, @data will be freed with [func@GLib.free].  This can be easier ...","deprecated":null},{"type":"function","name":"value_set_ref_string","ident":"vips_value_set_ref_string","summary":"Copies the C string @str into @value.  vips_ref_string are immutable C strings that are copied between images by ...","deprecated":null},{"type":"function","name":"value_set_save_string","ident":"vips_value_set_save_string","summary":"Copies the C string into @value.  @str should be a valid utf-8 string.","deprecated":null},{"type":"function","name":"value_set_save_stringf","ident":"vips_value_set_save_stringf","summary":"Generates a string and copies it into @value.","deprecated":null},{"type":"function","name":"vector_disable_targets","ident":"vips_vector_disable_targets","summary":"Takes a bitfield of targets to disable on the runtime platform. Handy for testing and benchmarking purposes.  This ...","deprecated":null},{"type":"function","name":"vector_get_builtin_targets","ident":"vips_vector_get_builtin_targets","summary":"Gets a bitfield of builtin targets that libvips was built with.","deprecated":null},{"type":"function","name":"vector_get_supported_targets","ident":"vips_vector_get_supported_targets","summary":"Gets a bitfield of enabled targets that are supported on this CPU. The targets returned may change after calling [func@vector_disable_targets].","deprecated":null},{"type":"function","name":"vector_isenabled","ident":"vips_vector_isenabled","summary":"No description available.","deprecated":null},{"type":"function","name":"vector_set_enabled","ident":"vips_vector_set_enabled","summary":"No description available.","deprecated":null},{"type":"function","name":"vector_target_name","ident":"vips_vector_target_name","summary":"Generates a human-readable ASCII string descriptor for a specific target.","deprecated":null},{"type":"function","name":"verror","ident":"vips_verror","summary":"Append a message to the error buffer.  ::: seealso     [func@error].","deprecated":null},{"type":"function","name":"verror_system","ident":"vips_verror_system","summary":"Format the string in the style of [`printf()`](man:printf(3)) and append to the error buffer. Then create and append a ...","deprecated":null},{"type":"function","name":"version","ident":"vips_version","summary":"Get the major, minor or micro library version, with @flag values 0, 1 and 2.  Get the ABI ...","deprecated":null},{"type":"function","name":"version_string","ident":"vips_version_string","summary":"Get the VIPS version as a static string, including a build date and time. Do not free.","deprecated":null},{"type":"function_macro","name":"ABS","ident":"VIPS_ABS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ALIGNED","ident":"VIPS_ALIGNED","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARGUMENT_COLLECT_SET","ident":"VIPS_ARGUMENT_COLLECT_SET","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARGUMENT_FOR_ALL","ident":"VIPS_ARGUMENT_FOR_ALL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_BOOL","ident":"VIPS_ARG_BOOL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_BOXED","ident":"VIPS_ARG_BOXED","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_DOUBLE","ident":"VIPS_ARG_DOUBLE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_ENUM","ident":"VIPS_ARG_ENUM","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_FLAGS","ident":"VIPS_ARG_FLAGS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_IMAGE","ident":"VIPS_ARG_IMAGE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_INT","ident":"VIPS_ARG_INT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_INTERPOLATE","ident":"VIPS_ARG_INTERPOLATE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_OBJECT","ident":"VIPS_ARG_OBJECT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_POINTER","ident":"VIPS_ARG_POINTER","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_STRING","ident":"VIPS_ARG_STRING","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARG_UINT64","ident":"VIPS_ARG_UINT64","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ARRAY","ident":"VIPS_ARRAY","summary":"Allocate memory for an array of objects of type @T. The memory is not cleared.  This macro cannot ...","deprecated":null},{"type":"function_macro","name":"ARRAY_ADDR","ident":"VIPS_ARRAY_ADDR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"BUF_STATIC","ident":"VIPS_BUF_STATIC","summary":"Initialize a heap buffer. For example:  ```c char txt[256]; VipsBuf buf = VIPS_BUF_STATIC(txt); ```","deprecated":null},{"type":"function_macro","name":"CEIL","ident":"VIPS_CEIL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP","ident":"VIPS_CLIP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_CHAR","ident":"VIPS_CLIP_CHAR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_NONE","ident":"VIPS_CLIP_NONE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_SHORT","ident":"VIPS_CLIP_SHORT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_UCHAR","ident":"VIPS_CLIP_UCHAR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_UINT","ident":"VIPS_CLIP_UINT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"CLIP_USHORT","ident":"VIPS_CLIP_USHORT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"COUNT_PIXELS","ident":"VIPS_COUNT_PIXELS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"DEG","ident":"VIPS_DEG","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"DEPRECATED_FOR","ident":"VIPS_DEPRECATED_FOR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"DEPRECATED_MACRO_FOR","ident":"VIPS_DEPRECATED_MACRO_FOR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FABS","ident":"VIPS_FABS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FCLIP","ident":"VIPS_FCLIP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FLOOR","ident":"VIPS_FLOOR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FMAX","ident":"VIPS_FMAX","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FMIN","ident":"VIPS_FMIN","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FREE","ident":"VIPS_FREE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"FREEF","ident":"VIPS_FREEF","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"GATE_FREE","ident":"VIPS_GATE_FREE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"GATE_MALLOC","ident":"VIPS_GATE_MALLOC","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"GATE_START","ident":"VIPS_GATE_START","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"GATE_STOP","ident":"VIPS_GATE_STOP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_ADDR","ident":"VIPS_IMAGE_ADDR","summary":"This macro returns a pointer to a pixel in an image, cast to a [alias@Pel]*. It only works for ...","deprecated":null},{"type":"function_macro","name":"IMAGE_N_ELEMENTS","ident":"VIPS_IMAGE_N_ELEMENTS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_N_PELS","ident":"VIPS_IMAGE_N_PELS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_SIZEOF_ELEMENT","ident":"VIPS_IMAGE_SIZEOF_ELEMENT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_SIZEOF_IMAGE","ident":"VIPS_IMAGE_SIZEOF_IMAGE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_SIZEOF_LINE","ident":"VIPS_IMAGE_SIZEOF_LINE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"IMAGE_SIZEOF_PEL","ident":"VIPS_IMAGE_SIZEOF_PEL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"INIT","ident":"VIPS_INIT","summary":"[func@INIT] starts up the world of VIPS. You should call this on program startup before using any other VIPS ...","deprecated":null},{"type":"function_macro","name":"ISNAN","ident":"VIPS_ISNAN","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"MALLOC","ident":"VIPS_MALLOC","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"MATRIX","ident":"VIPS_MATRIX","summary":"This macro returns a pointer to a pixel in an image, cast to a double*. The image must have ...","deprecated":null},{"type":"function_macro","name":"MAX","ident":"VIPS_MAX","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"MIN","ident":"VIPS_MIN","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"NEW","ident":"VIPS_NEW","summary":"Allocate memory for a thing of type @T. The memory is not cleared.  This macro cannot fail. See ...","deprecated":null},{"type":"function_macro","name":"NUMBER","ident":"VIPS_NUMBER","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ONCE","ident":"VIPS_ONCE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RAD","ident":"VIPS_RAD","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RECT_BOTTOM","ident":"VIPS_RECT_BOTTOM","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RECT_HCENTRE","ident":"VIPS_RECT_HCENTRE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RECT_RIGHT","ident":"VIPS_RECT_RIGHT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RECT_VCENTRE","ident":"VIPS_RECT_VCENTRE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"REGION_ADDR","ident":"VIPS_REGION_ADDR","summary":"This macro returns a pointer to a pixel in a region. The (@X, @Y) coordinates need to be within ...","deprecated":null},{"type":"function_macro","name":"REGION_ADDR_TOPLEFT","ident":"VIPS_REGION_ADDR_TOPLEFT","summary":"This macro returns a pointer to the top-left pixel in the [class@Region], that is, the pixel at (@R->valid.left, @R->valid.top). ...","deprecated":null},{"type":"function_macro","name":"REGION_LSKIP","ident":"VIPS_REGION_LSKIP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"REGION_N_ELEMENTS","ident":"VIPS_REGION_N_ELEMENTS","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"REGION_SIZEOF_ELEMENT","ident":"VIPS_REGION_SIZEOF_ELEMENT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"REGION_SIZEOF_LINE","ident":"VIPS_REGION_SIZEOF_LINE","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"REGION_SIZEOF_PEL","ident":"VIPS_REGION_SIZEOF_PEL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"RINT","ident":"VIPS_RINT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ROUND","ident":"VIPS_ROUND","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ROUND_DOWN","ident":"VIPS_ROUND_DOWN","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ROUND_INT","ident":"VIPS_ROUND_INT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ROUND_UINT","ident":"VIPS_ROUND_UINT","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"ROUND_UP","ident":"VIPS_ROUND_UP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"SBUF_FETCH","ident":"VIPS_SBUF_FETCH","summary":"After a successful [func@SBUF_REQUIRE], you can use this require times to fetch characters of input.","deprecated":null},{"type":"function_macro","name":"SBUF_GETC","ident":"VIPS_SBUF_GETC","summary":"Fetch the next character from the source.","deprecated":null},{"type":"function_macro","name":"SBUF_PEEK","ident":"VIPS_SBUF_PEEK","summary":"After a successful [func@SBUF_REQUIRE], you can index this to get require characters of input.","deprecated":null},{"type":"function_macro","name":"SBUF_REQUIRE","ident":"VIPS_SBUF_REQUIRE","summary":"Make sure at least @require characters are available for [func@SBUF_PEEK] and [func@SBUF_FETCH].","deprecated":null},{"type":"function_macro","name":"SBUF_UNGETC","ident":"VIPS_SBUF_UNGETC","summary":"The opposite of [method@Sbuf.getc]: undo the previous getc.  unget more than one character is undefined. Unget at the ...","deprecated":null},{"type":"function_macro","name":"SETSTR","ident":"VIPS_SETSTR","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"SWAP","ident":"VIPS_SWAP","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"TARGET_CLONES","ident":"VIPS_TARGET_CLONES","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"TARGET_PUTC","ident":"VIPS_TARGET_PUTC","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"UNREF","ident":"VIPS_UNREF","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"UNROLL","ident":"VIPS_UNROLL","summary":"No description available.","deprecated":null},{"type":"function_macro","name":"object_local","ident":"vips_object_local","summary":"No description available.","deprecated":null},{"type":"method","name":"","type_name":"Interpolate","ident":"vips_interpolate","summary":"Look up the @interpolate method in the class and call it. Use [method@Interpolate.get_method] to get a direct pointer to ...","deprecated":null},{"type":"method","name":"CMC2LCh","type_name":"Image","ident":"vips_CMC2LCh","summary":"Turn LCh to CMC.  ::: seealso     [method@Image.LCh2CMC].","deprecated":null},{"type":"method","name":"CMYK2XYZ","type_name":"Image","ident":"vips_CMYK2XYZ","summary":"Turn CMYK to XYZ. If the image has an embedded ICC profile this will be used for the conversion. ...","deprecated":null},{"type":"method","name":"HSV2sRGB","type_name":"Image","ident":"vips_HSV2sRGB","summary":"Convert HSV to sRGB.  HSV is a crude polar coordinate system for RGB images. It is provided for ...","deprecated":null},{"type":"method","name":"LCh2CMC","type_name":"Image","ident":"vips_LCh2CMC","summary":"Turn LCh to CMC.  The CMC colourspace is described in \"Uniform Colour Space Based on the CMC(l:c) Colour-difference ...","deprecated":null},{"type":"method","name":"LCh2Lab","type_name":"Image","ident":"vips_LCh2Lab","summary":"Turn LCh to Lab.","deprecated":null},{"type":"method","name":"Lab2LCh","type_name":"Image","ident":"vips_Lab2LCh","summary":"Turn Lab to LCh.","deprecated":null},{"type":"method","name":"Lab2LabQ","type_name":"Image","ident":"vips_Lab2LabQ","summary":"Convert a Lab three-band float image to LabQ ([enum@Vips.Coding.LABQ]).  ::: seealso     [method@Image.LabQ2Lab].","deprecated":null},{"type":"method","name":"Lab2LabS","type_name":"Image","ident":"vips_Lab2LabS","summary":"Turn Lab to LabS, signed 16-bit int fixed point.  ::: seealso     [method@Image.LabQ2Lab].","deprecated":null},{"type":"method","name":"Lab2XYZ","type_name":"Image","ident":"vips_Lab2XYZ","summary":"Turn Lab to XYZ. The colour temperature defaults to D65, but can be specified with @temp.  ::: tip ...","deprecated":null},{"type":"method","name":"LabQ2Lab","type_name":"Image","ident":"vips_LabQ2Lab","summary":"Unpack a LabQ ([enum@Vips.Coding.LABQ]) image to a three-band float image.  ::: seealso     [method@Image.LabQ2Lab], [method@Image.LabQ2LabS], [method@Image.rad2float].","deprecated":null},{"type":"method","name":"LabQ2LabS","type_name":"Image","ident":"vips_LabQ2LabS","summary":"Unpack a LabQ ([enum@Vips.Coding.LABQ]) image to a three-band short image.  ::: seealso     [method@Image.LabS2LabQ], [method@Image.LabQ2LabS], [method@Image.rad2float].","deprecated":null},{"type":"method","name":"LabQ2sRGB","type_name":"Image","ident":"vips_LabQ2sRGB","summary":"Unpack a LabQ ([enum@Vips.Coding.LABQ]) image to a three-band short image.  ::: seealso     [method@Image.LabS2LabQ], [method@Image.LabQ2sRGB], [method@Image.rad2float].","deprecated":null},{"type":"method","name":"LabS2Lab","type_name":"Image","ident":"vips_LabS2Lab","summary":"Convert a LabS three-band signed short image to a three-band float image.  ::: seealso     [method@Image.LabS2Lab].","deprecated":null},{"type":"method","name":"LabS2LabQ","type_name":"Image","ident":"vips_LabS2LabQ","summary":"Convert a LabS three-band signed short image to LabQ  ::: seealso     [method@Image.LabQ2LabS].","deprecated":null},{"type":"method","name":"XYZ2CMYK","type_name":"Image","ident":"vips_XYZ2CMYK","summary":"Turn XYZ to CMYK.  Conversion is from D65 XYZ with relative intent. If you need more control over ...","deprecated":null},{"type":"method","name":"XYZ2Lab","type_name":"Image","ident":"vips_XYZ2Lab","summary":"Turn XYZ to Lab, optionally specifying the colour temperature. @temp defaults to D65.  ::: tip \"Optional arguments\"  ...","deprecated":null},{"type":"method","name":"XYZ2Yxy","type_name":"Image","ident":"vips_XYZ2Yxy","summary":"Turn XYZ to Yxy.","deprecated":null},{"type":"method","name":"XYZ2scRGB","type_name":"Image","ident":"vips_XYZ2scRGB","summary":"Turn XYZ to scRGB.","deprecated":null},{"type":"method","name":"Yxy2XYZ","type_name":"Image","ident":"vips_Yxy2XYZ","summary":"Turn XYZ to Yxy.","deprecated":null},{"type":"method","name":"abs","type_name":"Image","ident":"vips_abs","summary":"This operation finds the absolute value of an image. It does a copy for unsigned integer types, negate for ...","deprecated":null},{"type":"method","name":"acos","type_name":"Image","ident":"vips_acos","summary":"Perform [enum@Vips.OperationMath.ACOS] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"acosh","type_name":"Image","ident":"vips_acosh","summary":"Perform [enum@Vips.OperationMath.ACOSH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"add","type_name":"Image","ident":"vips_add","summary":"This operation calculates @in1 + @in2 and writes the result to @out.  If the images differ in size, ...","deprecated":null},{"type":"method","name":"addalpha","type_name":"Image","ident":"vips_addalpha","summary":"Append an alpha channel.  ::: seealso     [method@Image.hasalpha].","deprecated":null},{"type":"method","name":"affine","type_name":"Image","ident":"vips_affine","summary":"This operator performs an affine transform on an image using @interpolate.  The transform is:  ```  X ...","deprecated":null},{"type":"method","name":"all","type_name":"Buf","ident":"vips_buf_all","summary":"Return the contents of the buffer as a C string."},{"type":"method","name":"allocate","type_name":"Dbuf","ident":"vips_dbuf_allocate","summary":"Make sure @dbuf has at least @size bytes available after the write point."},{"type":"method","name":"andimage","type_name":"Image","ident":"vips_andimage","summary":"Perform [enum@Vips.OperationBoolean.AND] on a pair of images. See [method@Image.boolean].","deprecated":null},{"type":"method","name":"andimage_const","type_name":"Image","ident":"vips_andimage_const","summary":"Perform [enum@Vips.OperationBoolean.AND] on an image and an array of constants. See [method@Image.boolean_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"andimage_const1","type_name":"Image","ident":"vips_andimage_const1","summary":"Perform [enum@Vips.OperationBoolean.AND] on an image and a constant. See [method@Image.boolean_const1].  ::: seealso     [method@Image.boolean], [method@Image.boolean_const].","deprecated":null},{"type":"method","name":"append","type_name":"ArrayImage","ident":"vips_array_image_append","summary":"Make a new [struct@ArrayImage], one larger than @array, with @image appended to the end. Handy with [ctor@ArrayImage.empty] for bindings ..."},{"type":"method","name":"append_size","type_name":"Buf","ident":"vips_buf_append_size","summary":"Turn a number of bytes into a sensible string ... eg \"12\", \"12KB\", \"12MB\", \"12GB\" etc."},{"type":"method","name":"appendc","type_name":"Buf","ident":"vips_buf_appendc","summary":"Append a single character @ch to @buf."},{"type":"method","name":"appendd","type_name":"Buf","ident":"vips_buf_appendd","summary":"Append a number. If the number is -ve, add brackets. Needed for building function arguments."},{"type":"method","name":"appendf","type_name":"Buf","ident":"vips_buf_appendf","summary":"Format the string and append to @buf."},{"type":"method","name":"appendg","type_name":"Buf","ident":"vips_buf_appendg","summary":"Append a double, non-localised. Useful for config files etc."},{"type":"method","name":"appendgv","type_name":"Buf","ident":"vips_buf_appendgv","summary":"Format and append a #GValue as a printable thing. We display text line \"3144 bytes of binary data\" for ..."},{"type":"method","name":"appendns","type_name":"Buf","ident":"vips_buf_appendns","summary":"Append at most @sz chars from @str to @buf. @sz < 0 means unlimited. This is the low-level append ..."},{"type":"method","name":"appends","type_name":"Buf","ident":"vips_buf_appends","summary":"Append the whole of @str to @buf."},{"type":"method","name":"argument_isset","type_name":"Object","ident":"vips_object_argument_isset","summary":"Convenience: has an argument been assigned. Useful for bindings.","deprecated":null},{"type":"method","name":"argument_needsstring","type_name":"Object","ident":"vips_object_argument_needsstring","summary":"No description available.","deprecated":null},{"type":"method","name":"asin","type_name":"Image","ident":"vips_asin","summary":"Perform [enum@Vips.OperationMath.ASIN] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"asinh","type_name":"Image","ident":"vips_asinh","summary":"Perform [enum@Vips.OperationMath.ASINH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"atan","type_name":"Image","ident":"vips_atan","summary":"Perform [enum@Vips.OperationMath.ATAN] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"atan2","type_name":"Image","ident":"vips_atan2","summary":"Perform [enum@Vips.OperationMath2.ATAN2] on a pair of images. See [method@Image.math2].","deprecated":null},{"type":"method","name":"atan2_const","type_name":"Image","ident":"vips_atan2_const","summary":"Perform [enum@Vips.OperationMath2.ATAN2] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"atan2_const1","type_name":"Image","ident":"vips_atan2_const1","summary":"Perform [enum@Vips.OperationMath2.ATAN2] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"atanh","type_name":"Image","ident":"vips_atanh","summary":"Perform [enum@Vips.OperationMath.ATANH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"autorot","type_name":"Image","ident":"vips_autorot","summary":"Look at the image metadata and rotate and flip the image to make it upright. The [const@META_ORIENTATION] tag is ...","deprecated":null},{"type":"method","name":"autorot_remove_angle","type_name":"Image","ident":"vips_autorot_remove_angle","summary":"Remove the orientation tag on @image. Also remove any exif orientation tags. You must [method@Image.copy] the image before calling ...","deprecated":null},{"type":"method","name":"avg","type_name":"Image","ident":"vips_avg","summary":"This operation finds the average value in an image. It operates on all bands of the input image: use ...","deprecated":null},{"type":"method","name":"bandand","type_name":"Image","ident":"vips_bandand","summary":"Perform [enum@Vips.OperationBoolean.AND] on an image. See [method@Image.bandbool].","deprecated":null},{"type":"method","name":"bandbool","type_name":"Image","ident":"vips_bandbool","summary":"Perform various boolean operations across the bands of an image. For example, a three-band uchar image operated on with ...","deprecated":null},{"type":"method","name":"bandeor","type_name":"Image","ident":"vips_bandeor","summary":"Perform [enum@Vips.OperationBoolean.EOR] on an image. See [method@Image.bandbool].","deprecated":null},{"type":"method","name":"bandfold","type_name":"Image","ident":"vips_bandfold","summary":"Fold up an image horizontally: width is collapsed into bands. Use @factor to set how much to fold by: ...","deprecated":null},{"type":"method","name":"bandjoin2","type_name":"Image","ident":"vips_bandjoin2","summary":"Join a pair of images together, bandwise. See [func@Image.bandjoin].","deprecated":null},{"type":"method","name":"bandjoin_const","type_name":"Image","ident":"vips_bandjoin_const","summary":"Append a set of constant bands to an image.  ::: seealso     [func@Image.bandjoin].","deprecated":null},{"type":"method","name":"bandjoin_const1","type_name":"Image","ident":"vips_bandjoin_const1","summary":"Append a single constant band to an image.","deprecated":null},{"type":"method","name":"bandmean","type_name":"Image","ident":"vips_bandmean","summary":"This operation writes a one-band image where each pixel is the average of the bands for that pixel in ...","deprecated":null},{"type":"method","name":"bandor","type_name":"Image","ident":"vips_bandor","summary":"Perform [enum@Vips.OperationBoolean.OR] on an image. See [method@Image.bandbool].","deprecated":null},{"type":"method","name":"bandunfold","type_name":"Image","ident":"vips_bandunfold","summary":"Unfold image bands into x axis. Use @factor to set how much to unfold by: @factor 3, for example, ...","deprecated":null},{"type":"method","name":"black","type_name":"Region","ident":"vips_region_black","summary":"Paints 0 into the valid part of @reg.  ::: seealso     [method@Region.paint].","deprecated":null},{"type":"method","name":"boolean","type_name":"Image","ident":"vips_boolean","summary":"Perform various boolean operations on pairs of images.  The output image is the same format as the upcast ...","deprecated":null},{"type":"method","name":"boolean_const","type_name":"Image","ident":"vips_boolean_const","summary":"Perform various boolean operations on an image against an array of constants.  The output type is always uchar, ...","deprecated":null},{"type":"method","name":"boolean_const1","type_name":"Image","ident":"vips_boolean_const1","summary":"Perform various boolean operations on an image with a single constant. See [method@Image.boolean_const].  ::: seealso    ...","deprecated":null},{"type":"method","name":"buffer","type_name":"Region","ident":"vips_region_buffer","summary":"The region is transformed so that at least @r pixels are available as a memory buffer that can be ...","deprecated":null},{"type":"method","name":"build","type_name":"Object","ident":"vips_object_build","summary":"No description available.","deprecated":null},{"type":"method","name":"buildlut","type_name":"Image","ident":"vips_buildlut","summary":"This operation builds a lookup table from a set of points. Intermediate values are generated by piecewise linear interpolation. ...","deprecated":null},{"type":"method","name":"byteswap","type_name":"Image","ident":"vips_byteswap","summary":"Swap the byte order in an image.  ::: seealso     [ctor@Image.rawload].","deprecated":null},{"type":"method","name":"call_valist","type_name":"Operation","ident":"vips_operation_call_valist","summary":"No description available.","deprecated":null},{"type":"method","name":"canny","type_name":"Image","ident":"vips_canny","summary":"Find edges by Canny's method: The maximum of the derivative of the gradient in the direction of the gradient. ...","deprecated":null},{"type":"method","name":"case","type_name":"Image","ident":"vips_case","summary":"Use values in @index to select pixels from @cases.  @index must have one band. @cases can have up ...","deprecated":null},{"type":"method","name":"cast","type_name":"Image","ident":"vips_cast","summary":"Convert @in to @format. You can convert between any pair of formats. Floats are truncated (not rounded). Out of ...","deprecated":null},{"type":"method","name":"cast_char","type_name":"Image","ident":"vips_cast_char","summary":"Convert @in to [enum@Vips.BandFormat.CHAR]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"cast_complex","type_name":"Image","ident":"vips_cast_complex","summary":"Convert @in to [enum@Vips.BandFormat.COMPLEX]. See [method@Image.cast].","deprecated":null},{"type":"method","name":"cast_double","type_name":"Image","ident":"vips_cast_double","summary":"Convert @in to [enum@Vips.BandFormat.DOUBLE]. See [method@Image.cast].","deprecated":null},{"type":"method","name":"cast_dpcomplex","type_name":"Image","ident":"vips_cast_dpcomplex","summary":"Convert @in to [enum@Vips.BandFormat.DPCOMPLEX]. See [method@Image.cast].","deprecated":null},{"type":"method","name":"cast_float","type_name":"Image","ident":"vips_cast_float","summary":"Convert @in to [enum@Vips.BandFormat.FLOAT]. See [method@Image.cast].","deprecated":null},{"type":"method","name":"cast_int","type_name":"Image","ident":"vips_cast_int","summary":"Convert @in to [enum@Vips.BandFormat.INT]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"cast_short","type_name":"Image","ident":"vips_cast_short","summary":"Convert @in to [enum@Vips.BandFormat.SHORT]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"cast_uchar","type_name":"Image","ident":"vips_cast_uchar","summary":"Convert @in to [enum@Vips.BandFormat.UCHAR]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"cast_uint","type_name":"Image","ident":"vips_cast_uint","summary":"Convert @in to [enum@Vips.BandFormat.UINT]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"cast_ushort","type_name":"Image","ident":"vips_cast_ushort","summary":"Convert @in to [enum@Vips.BandFormat.USHORT]. See [method@Image.cast].  ::: tip \"Optional arguments\"     * @shift: `gboolean`, integer ...","deprecated":null},{"type":"method","name":"ceil","type_name":"Image","ident":"vips_ceil","summary":"Round to an integral value with [enum@Vips.OperationRound.CEIL]. See [method@Image.round].","deprecated":null},{"type":"method","name":"change","type_name":"Buf","ident":"vips_buf_change","summary":"Swap the rightmost occurrence of @o for @n."},{"type":"method","name":"clamp","type_name":"Image","ident":"vips_clamp","summary":"This operation clamps pixel values to a range, by default 0 - 1.  Use @min and @max to ...","deprecated":null},{"type":"method","name":"colourspace","type_name":"Image","ident":"vips_colourspace","summary":"This operation looks at the interpretation field of @in (or uses @source_space, if set) and runs a set of ...","deprecated":null},{"type":"method","name":"colourspace_issupported","type_name":"Image","ident":"vips_colourspace_issupported","summary":"Test if @image is in a colourspace that [method@Image.colourspace] can process.","deprecated":null},{"type":"method","name":"compass","type_name":"Image","ident":"vips_compass","summary":"This convolves @in with @mask @times times, rotating @mask by @angle each time. By default, it comvolves twice, rotating ...","deprecated":null},{"type":"method","name":"complex","type_name":"Image","ident":"vips_complex","summary":"Perform various operations on complex images.  Angles are expressed in degrees. The output type is complex unless the ...","deprecated":null},{"type":"method","name":"complex2","type_name":"Image","ident":"vips_complex2","summary":"Perform various binary operations on complex images.  Angles are expressed in degrees. The output type is complex unless ...","deprecated":null},{"type":"method","name":"complexform","type_name":"Image","ident":"vips_complexform","summary":"Compose two real images to make a complex image. If either @left or @right are [enum@Vips.BandFormat.DOUBLE], @out is [enum@Vips.BandFormat.DPCOMPLEX]. ...","deprecated":null},{"type":"method","name":"complexget","type_name":"Image","ident":"vips_complexget","summary":"Get components of complex images.  The output type is the same as the input type, except [enum@Vips.BandFormat.COMPLEX] becomes ...","deprecated":null},{"type":"method","name":"composite2","type_name":"Image","ident":"vips_composite2","summary":"Composite @overlay on top of @base with @mode. See [func@Image.composite].  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"conj","type_name":"Image","ident":"vips_conj","summary":"Perform [enum@Vips.OperationComplex.CONJ] on an image. See [method@Image.complex].","deprecated":null},{"type":"method","name":"conv","type_name":"Image","ident":"vips_conv","summary":"Perform a convolution of @in with @mask.  Each output pixel is calculated as:  ``` sigma[i]{pixel[i] * mask[i]} ...","deprecated":null},{"type":"method","name":"conva","type_name":"Image","ident":"vips_conva","summary":"Perform an approximate integer convolution of @in with @mask. This is a low-level operation, see [method@Image.conv] for something more ...","deprecated":null},{"type":"method","name":"convasep","type_name":"Image","ident":"vips_convasep","summary":"Approximate separable integer convolution. This is a low-level operation, see [method@Image.convsep] for something more convenient.  The image is ...","deprecated":null},{"type":"method","name":"convf","type_name":"Image","ident":"vips_convf","summary":"Convolution. This is a low-level operation, see [method@Image.conv] for something more convenient.  Perform a convolution of @in with ...","deprecated":null},{"type":"method","name":"convi","type_name":"Image","ident":"vips_convi","summary":"Integer convolution. This is a low-level operation, see [method@Image.conv] for something more convenient.  @mask is converted to an ...","deprecated":null},{"type":"method","name":"convsep","type_name":"Image","ident":"vips_convsep","summary":"Perform a separable convolution of @in with @mask. See [method@Image.conv] for a detailed description.  The mask must be ...","deprecated":null},{"type":"method","name":"copy","type_name":"Image","ident":"vips_copy","summary":"Copy an image, optionally modifying the header. VIPS copies images by copying pointers, so this operation is instant, even ...","deprecated":null},{"type":"method","name":"copy","type_name":"Region","ident":"vips_region_copy","summary":"Copy from one region to another. Copy area @r from inside @reg to @dest, positioning the area of pixels ...","deprecated":null},{"type":"method","name":"copy","type_name":"Area","ident":"vips_area_copy","summary":"No description available."},{"type":"method","name":"copy_file","type_name":"Image","ident":"vips_copy_file","summary":"A simple convenience function to copy an image to a file, then copy again to output. If the image ...","deprecated":null},{"type":"method","name":"copy_memory","type_name":"Image","ident":"vips_image_copy_memory","summary":"This function allocates memory, renders @image into it, builds a new image around the memory area, and returns that. ...","deprecated":null},{"type":"method","name":"cos","type_name":"Image","ident":"vips_cos","summary":"Perform [enum@Vips.OperationMath.COS] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"cosh","type_name":"Image","ident":"vips_cosh","summary":"Perform [enum@Vips.OperationMath.COSH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"countlines","type_name":"Image","ident":"vips_countlines","summary":"Function which calculates the number of transitions between black and white for the horizontal or the vertical direction of ...","deprecated":null},{"type":"method","name":"crop","type_name":"Image","ident":"vips_crop","summary":"A synonym for [method@Image.extract_area].  ::: seealso     [method@Image.extract_band], [method@Image.smartcrop].","deprecated":null},{"type":"method","name":"cross_phase","type_name":"Image","ident":"vips_cross_phase","summary":"Perform [enum@Vips.OperationComplex2.CROSS_PHASE] on an image. See [method@Image.complex2].","deprecated":null},{"type":"method","name":"csvsave","type_name":"Image","ident":"vips_csvsave","summary":"Writes the pixels in @in to the @filename as CSV (comma-separated values).  The image is written one line ...","deprecated":null},{"type":"method","name":"csvsave_target","type_name":"Image","ident":"vips_csvsave_target","summary":"As [method@Image.csvsave], but save to a target.  ::: tip \"Optional arguments\"     * @separator: separator ...","deprecated":null},{"type":"method","name":"dE00","type_name":"Image","ident":"vips_dE00","summary":"Calculate dE 00.","deprecated":null},{"type":"method","name":"dE76","type_name":"Image","ident":"vips_dE76","summary":"Calculate dE 76.","deprecated":null},{"type":"method","name":"dECMC","type_name":"Image","ident":"vips_dECMC","summary":"Calculate dE CMC. The input images are transformed to CMC colour space and the euclidean distance between corresponding pixels ...","deprecated":null},{"type":"method","name":"decode","type_name":"Image","ident":"vips_image_decode","summary":"A convenience function to unpack to a format that we can compute with. @out.coding is always [enum@Vips.Coding.NONE].  This ...","deprecated":null},{"type":"method","name":"decode","type_name":"Source","ident":"vips_source_decode","summary":"Signal the end of header read and the start of the pixel decode phase. After this, you can no ...","deprecated":null},{"type":"method","name":"decode_predict","type_name":"Image","ident":"vips_image_decode_predict","summary":"We often need to know what an image will decode to without actually decoding it, for example, in arg ...","deprecated":null},{"type":"method","name":"destroy","type_name":"Buf","ident":"vips_buf_destroy","summary":"Destroy a buffer. Only needed for heap buffers. Leaves the buffer in the _init state."},{"type":"method","name":"destroy","type_name":"Dbuf","ident":"vips_dbuf_destroy","summary":"Destroy @dbuf. This frees any allocated memory. Useful for dbufs on the stack."},{"type":"method","name":"destroy","type_name":"Semaphore","ident":"vips_semaphore_destroy","summary":"No description available."},{"type":"method","name":"deviate","type_name":"Image","ident":"vips_deviate","summary":"This operation finds the standard deviation of all pixels in @in. It operates on all bands of the input ...","deprecated":null},{"type":"method","name":"divide","type_name":"Image","ident":"vips_divide","summary":"This operation calculates @in1 / @in2 and writes the result to @out. If any pixels in @in2 are zero, ...","deprecated":null},{"type":"method","name":"down","type_name":"Semaphore","ident":"vips_semaphore_down","summary":"No description available."},{"type":"method","name":"down_timeout","type_name":"Semaphore","ident":"vips_semaphore_down_timeout","summary":"No description available."},{"type":"method","name":"downn","type_name":"Semaphore","ident":"vips_semaphore_downn","summary":"No description available."},{"type":"method","name":"draw_circle","type_name":"Image","ident":"vips_draw_circle","summary":"Draws a circle on @image.  If @fill is `TRUE` then the circle is filled, otherwise a 1-pixel-wide perimeter ...","deprecated":null},{"type":"method","name":"draw_circle1","type_name":"Image","ident":"vips_draw_circle1","summary":"As [method@Image.draw_circle], but just takes a single double for @ink.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"draw_flood","type_name":"Image","ident":"vips_draw_flood","summary":"Flood-fill @image with @ink, starting at position @x, @y.  The filled area is bounded by pixels that are ...","deprecated":null},{"type":"method","name":"draw_flood1","type_name":"Image","ident":"vips_draw_flood1","summary":"As [method@Image.draw_flood], but just takes a single double for @ink.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"draw_image","type_name":"Image","ident":"vips_draw_image","summary":"Draw @sub on top of @image at position @x, @y.  The two images must have the same Coding. ...","deprecated":null},{"type":"method","name":"draw_line","type_name":"Image","ident":"vips_draw_line","summary":"Draws a 1-pixel-wide line on an image.  @ink is an array of double containing values to draw.  ...","deprecated":null},{"type":"method","name":"draw_line1","type_name":"Image","ident":"vips_draw_line1","summary":"As [method@Image.draw_line], but just take a single double for @ink.  ::: seealso     [method@Image.draw_line].","deprecated":null},{"type":"method","name":"draw_mask","type_name":"Image","ident":"vips_draw_mask","summary":"Draw @mask on the image. @mask is a monochrome 8-bit image with 0/255 for transparent or @ink coloured points. ...","deprecated":null},{"type":"method","name":"draw_mask1","type_name":"Image","ident":"vips_draw_mask1","summary":"As [method@Image.draw_mask], but just takes a single double for @ink.  ::: seealso     [method@Image.draw_mask].","deprecated":null},{"type":"method","name":"draw_point","type_name":"Image","ident":"vips_draw_point","summary":"As [method@Image.draw_rect], but draw a single pixel at @x, @y.  ::: seealso     [method@Image.draw_rect].","deprecated":null},{"type":"method","name":"draw_point1","type_name":"Image","ident":"vips_draw_point1","summary":"As [method@Image.draw_point], but just take a single double for @ink.  ::: seealso     [method@Image.draw_point].","deprecated":null},{"type":"method","name":"draw_rect","type_name":"Image","ident":"vips_draw_rect","summary":"Paint pixels within @left, @top, @width, @height in @image with @ink.  If @fill is zero, just paint a ...","deprecated":null},{"type":"method","name":"draw_rect1","type_name":"Image","ident":"vips_draw_rect1","summary":"As [method@Image.draw_rect], but just take a single double for @ink.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"draw_smudge","type_name":"Image","ident":"vips_draw_smudge","summary":"Smudge a section of @image. Each pixel in the area @left, @top, @width, @height is replaced by the average ...","deprecated":null},{"type":"method","name":"dump","type_name":"Object","ident":"vips_object_dump","summary":"Dump everything that vips knows about an object to a string.","deprecated":null},{"type":"method","name":"dup","type_name":"Rect","ident":"vips_rect_dup","summary":"Duplicate a rect to the heap. You need to free the result with [func@GLib.free]."},{"type":"method","name":"dzsave","type_name":"Image","ident":"vips_dzsave","summary":"Save an image as a set of tiles at various resolutions. By default dzsave uses DeepZoom layout -- use ...","deprecated":null},{"type":"method","name":"dzsave_buffer","type_name":"Image","ident":"vips_dzsave_buffer","summary":"As [method@Image.dzsave], but save to a memory buffer.  Output is always in a zip container. Use @basename to ...","deprecated":null},{"type":"method","name":"dzsave_target","type_name":"Image","ident":"vips_dzsave_target","summary":"As [method@Image.dzsave], but save to a target.  ::: tip \"Optional arguments\"     * @basename: `gchararray`, ...","deprecated":null},{"type":"method","name":"embed","type_name":"Image","ident":"vips_embed","summary":"The opposite of [method@Image.extract_area]: embed @in within an image of size @width by @height at position @x, @y.  ...","deprecated":null},{"type":"method","name":"encode","type_name":"Image","ident":"vips_image_encode","summary":"A convenience function to pack to a coding. The inverse of [method@Image.decode].  ::: seealso     [method@Image.decode].","deprecated":null},{"type":"method","name":"end","type_name":"Target","ident":"vips_target_end","summary":"Call this at the end of write to make the target do any cleaning up. You can call it ...","deprecated":null},{"type":"method","name":"eorimage","type_name":"Image","ident":"vips_eorimage","summary":"Perform [enum@Vips.OperationBoolean.EOR] on a pair of images. See [method@Image.boolean].","deprecated":null},{"type":"method","name":"eorimage_const","type_name":"Image","ident":"vips_eorimage_const","summary":"Perform [enum@Vips.OperationBoolean.EOR] on an image and an array of constants. See [method@Image.boolean_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"eorimage_const1","type_name":"Image","ident":"vips_eorimage_const1","summary":"Perform [enum@Vips.OperationBoolean.EOR] on an image and a constant. See [method@Image.boolean_const1].  ::: seealso     [method@Image.boolean], [method@Image.boolean_const].","deprecated":null},{"type":"method","name":"equal","type_name":"Image","ident":"vips_equal","summary":"Perform [enum@Vips.OperationRelational.EQUAL] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"equal_const","type_name":"Image","ident":"vips_equal_const","summary":"Perform [enum@Vips.OperationRelational.EQUAL] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"equal_const1","type_name":"Image","ident":"vips_equal_const1","summary":"Perform [enum@Vips.OperationRelational.EQUAL] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"equalsrect","type_name":"Rect","ident":"vips_rect_equalsrect","summary":"Is @r1 equal to @r2?"},{"type":"method","name":"equalsregion","type_name":"Region","ident":"vips_region_equalsregion","summary":"Do two regions point to the same piece of image? ie.  ```c \tVIPS_REGION_ADDR(reg1, x, y) == VIPS_REGION_ADDR(reg2, x, ...","deprecated":null},{"type":"method","name":"exp","type_name":"Image","ident":"vips_exp","summary":"Perform [enum@Vips.OperationMath.EXP] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"exp10","type_name":"Image","ident":"vips_exp10","summary":"Perform [enum@Vips.OperationMath.EXP10] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"extract_area","type_name":"Image","ident":"vips_extract_area","summary":"Extract an area from an image. The area must fit within @in.  ::: seealso     ...","deprecated":null},{"type":"method","name":"extract_band","type_name":"Image","ident":"vips_extract_band","summary":"Extract a band or bands from an image. Extracting out of range is an error.  @n defaults to ...","deprecated":null},{"type":"method","name":"falsecolour","type_name":"Image","ident":"vips_falsecolour","summary":"Force @in to 1 band, 8-bit, then transform to a 3-band 8-bit image with a false colour map. The ...","deprecated":null},{"type":"method","name":"fastcor","type_name":"Image","ident":"vips_fastcor","summary":"Calculate a fast correlation surface.  @ref is placed at every position in @in and the sum of squares ...","deprecated":null},{"type":"method","name":"fetch","type_name":"Region","ident":"vips_region_fetch","summary":"Generate an area of pixels and return a copy. The result must be freed with [func@GLib.free]. The requested area ...","deprecated":null},{"type":"method","name":"filename","type_name":"Connection","ident":"vips_connection_filename","summary":"No description available.","deprecated":null},{"type":"method","name":"fill_nearest","type_name":"Image","ident":"vips_fill_nearest","summary":"Fill outwards from every non-zero pixel in @in, setting pixels in @distance and @value.  At the position of ...","deprecated":null},{"type":"method","name":"find_trim","type_name":"Image","ident":"vips_find_trim","summary":"Search @in for the bounding box of the non-background area.  Any alpha is flattened out, then the image ...","deprecated":null},{"type":"method","name":"firstline","type_name":"Buf","ident":"vips_buf_firstline","summary":"Trim to just the first line (excluding \"\\n\")."},{"type":"method","name":"fitssave","type_name":"Image","ident":"vips_fitssave","summary":"Write a VIPS image to a file in FITS format.  ::: seealso     [method@Image.write_to_file].","deprecated":null},{"type":"method","name":"flatten","type_name":"Image","ident":"vips_flatten","summary":"Take the last band of @in as an alpha and use it to blend the remaining channels with @background. ...","deprecated":null},{"type":"method","name":"flip","type_name":"Image","ident":"vips_flip","summary":"Flips an image left-right or up-down.  ::: seealso     [method@Image.rot].","deprecated":null},{"type":"method","name":"float2rad","type_name":"Image","ident":"vips_float2rad","summary":"Convert a three-band float image to Radiance 32-bit packed format.  ::: seealso     [method@Image.rad2float], [enum@Vips.Coding.RAD], [method@Image.LabQ2Lab].","deprecated":null},{"type":"method","name":"floor","type_name":"Image","ident":"vips_floor","summary":"Round to an integral value with [enum@Vips.OperationRound.FLOOR]. See [method@Image.round].","deprecated":null},{"type":"method","name":"foreign_load_invalidate","type_name":"Image","ident":"vips_foreign_load_invalidate","summary":"Loaders can call this on the image they are making if they see a read error from the load ...","deprecated":null},{"type":"method","name":"free_buffer","type_name":"Image","ident":"vips_image_free_buffer","summary":"Free the externally allocated buffer found in the input image. This function is intended to be used with g_signal_connect.","deprecated":null},{"type":"method","name":"freqmult","type_name":"Image","ident":"vips_freqmult","summary":"Multiply @in by @mask in Fourier space.  @in is transformed to Fourier space, multiplied with @mask, then transformed ...","deprecated":null},{"type":"method","name":"fwfft","type_name":"Image","ident":"vips_fwfft","summary":"Transform an image to Fourier space.  VIPS uses the fftw Fourier Transform library. If this library was not ...","deprecated":null},{"type":"method","name":"gamma","type_name":"Image","ident":"vips_gamma","summary":"Calculate @in ** (1 / @exponent), normalising to the maximum range of the input type. For float types use ...","deprecated":null},{"type":"method","name":"gaussblur","type_name":"Image","ident":"vips_gaussblur","summary":"This operator runs [ctor@Image.gaussmat] and [method@Image.convsep] for you on an image.  Set @min_ampl smaller to generate a larger, ...","deprecated":null},{"type":"method","name":"generate","type_name":"Image","ident":"vips_image_generate","summary":"Generates an image. The action depends on the image type.  For images created with [ctor@Image.new], vips_image_generate() just attaches ...","deprecated":null},{"type":"method","name":"get","type_name":"Image","ident":"vips_image_get","summary":"Fill @value_copy with a copy of the header field. @value_copy must be zeroed but uninitialised.  This will return ...","deprecated":null},{"type":"method","name":"get","type_name":"ArrayDouble","ident":"vips_array_double_get","summary":"Fetch a double array from a [struct@ArrayDouble]. Useful for language bindings."},{"type":"method","name":"get","type_name":"ArrayImage","ident":"vips_array_image_get","summary":"Fetch an image array from a [struct@ArrayImage]. Useful for language bindings."},{"type":"method","name":"get","type_name":"ArrayInt","ident":"vips_array_int_get","summary":"Fetch an int array from a [struct@ArrayInt]. Useful for language bindings."},{"type":"method","name":"get","type_name":"Blob","ident":"vips_blob_get","summary":"Get the data from a [struct@Blob].  ::: seealso     [ctor@Blob.new]."},{"type":"method","name":"get","type_name":"RefString","ident":"vips_ref_string_get","summary":"Get a pointer to the private string inside a refstr. Handy for language bindings.  ::: seealso   ..."},{"type":"method","name":"get_area","type_name":"Image","ident":"vips_image_get_area","summary":"Gets @data from @image under the name @name. A convenience function over [method@Image.get]. Use [method@Image.get_typeof] to test for the ...","deprecated":null},{"type":"method","name":"get_args","type_name":"Object","ident":"vips_object_get_args","summary":"Get all [class@GObject.ParamSpec] names and [flags@ArgumentFlags] for an object.  This is handy for language bindings. From C, it's ...","deprecated":null},{"type":"method","name":"get_argument","type_name":"Object","ident":"vips_object_get_argument","summary":"Look up the three things you need to work with a vips argument.","deprecated":null},{"type":"method","name":"get_argument_flags","type_name":"Object","ident":"vips_object_get_argument_flags","summary":"Convenience: get the flags for an argument. Useful for bindings.","deprecated":null},{"type":"method","name":"get_argument_priority","type_name":"Object","ident":"vips_object_get_argument_priority","summary":"Convenience: get the priority for an argument. Useful for bindings.","deprecated":null},{"type":"method","name":"get_argument_to_string","type_name":"Object","ident":"vips_object_get_argument_to_string","summary":"No description available.","deprecated":null},{"type":"method","name":"get_array_double","type_name":"Image","ident":"vips_image_get_array_double","summary":"Gets @out from @im under the name @name. The field must be of type `VIPS_TYPE_ARRAY_INT`.  Do not free ...","deprecated":null},{"type":"method","name":"get_array_int","type_name":"Image","ident":"vips_image_get_array_int","summary":"Gets @out from @im under the name @name. The field must be of type `VIPS_TYPE_ARRAY_INT`.  Do not free ...","deprecated":null},{"type":"method","name":"get_as_string","type_name":"Image","ident":"vips_image_get_as_string","summary":"Returns @name from @image in @out. This function will read any field, returning it as a printable string. You ...","deprecated":null},{"type":"method","name":"get_bands","type_name":"Image","ident":"vips_image_get_bands","summary":"No description available.","deprecated":null},{"type":"method","name":"get_blob","type_name":"Image","ident":"vips_image_get_blob","summary":"Gets @data from @image under the name @name, optionally returns its length in @length. Use [method@Image.get_typeof] to test for ...","deprecated":null},{"type":"method","name":"get_coding","type_name":"Image","ident":"vips_image_get_coding","summary":"No description available.","deprecated":null},{"type":"method","name":"get_concurrency","type_name":"Image","ident":"vips_image_get_concurrency","summary":"Fetch and sanity-check [const@META_CONCURRENCY]. Default to 1 if not present or crazy.","deprecated":null},{"type":"method","name":"get_data","type_name":"Image","ident":"vips_image_get_data","summary":"Return a pointer to the image's pixel data, if possible. This can involve allocating large amounts of memory and ...","deprecated":null},{"type":"method","name":"get_data","type_name":"Area","ident":"vips_area_get_data","summary":"Return the data pointer plus optionally the length in bytes of an area, the number of elements, the [alias@GObject.Type] ..."},{"type":"method","name":"get_description","type_name":"Object","ident":"vips_object_get_description","summary":"Fetch the object description. Useful for language bindings.  @object.description is only available after _build(), which can be too ...","deprecated":null},{"type":"method","name":"get_double","type_name":"Image","ident":"vips_image_get_double","summary":"Gets @out from @im under the name @name. The value will be transformed into a double, if possible.  ...","deprecated":null},{"type":"method","name":"get_fields","type_name":"Image","ident":"vips_image_get_fields","summary":"Get a `NULL`-terminated array listing all the metadata field names on @image. Free the return result with [func@GLib.strfreev].  ...","deprecated":null},{"type":"method","name":"get_filename","type_name":"Image","ident":"vips_image_get_filename","summary":"No description available.","deprecated":null},{"type":"method","name":"get_flags","type_name":"Operation","ident":"vips_operation_get_flags","summary":"Returns the set of flags for this operation.","deprecated":null},{"type":"method","name":"get_format","type_name":"Image","ident":"vips_image_get_format","summary":"No description available.","deprecated":null},{"type":"method","name":"get_height","type_name":"Image","ident":"vips_image_get_height","summary":"No description available.","deprecated":null},{"type":"method","name":"get_history","type_name":"Image","ident":"vips_image_get_history","summary":"This function reads the image history as a C string. The string is owned by VIPS and must not ...","deprecated":null},{"type":"method","name":"get_image","type_name":"Image","ident":"vips_image_get_image","summary":"Gets @out from @im under the name @name. The field must be of type `VIPS_TYPE_IMAGE`. You must unref @out ...","deprecated":null},{"type":"method","name":"get_int","type_name":"Image","ident":"vips_image_get_int","summary":"Gets @out from @im under the name @name. The value will be transformed into an int, if possible.  ...","deprecated":null},{"type":"method","name":"get_interpretation","type_name":"Image","ident":"vips_image_get_interpretation","summary":"Return the [enum@Interpretation] set in the image header. Use [method@Image.guess_format] if you want a sanity-checked value.","deprecated":null},{"type":"method","name":"get_line","type_name":"Sbuf","ident":"vips_sbuf_get_line","summary":"Fetch the next line of text from @sbuf and return it. The end of line character (or characters, for ...","deprecated":null},{"type":"method","name":"get_line_copy","type_name":"Sbuf","ident":"vips_sbuf_get_line_copy","summary":"Fetch the next line of text from @sbuf and return it. The end of line character (or characters, for ...","deprecated":null},{"type":"method","name":"get_method","type_name":"Interpolate","ident":"vips_interpolate_get_method","summary":"Look up the @interpolate method in the class and return it. Use this instead of [func@interpolate] to cache method dispatch.","deprecated":null},{"type":"method","name":"get_mode","type_name":"Image","ident":"vips_image_get_mode","summary":"Image modes are things like `\"t\"`, meaning a memory buffer, and `\"p\"` meaning a delayed computation.","deprecated":null},{"type":"method","name":"get_n_pages","type_name":"Image","ident":"vips_image_get_n_pages","summary":"Fetch and sanity-check [const@META_N_PAGES]. Default to 1 if not present or crazy.  This is the number of pages ...","deprecated":null},{"type":"method","name":"get_n_subifds","type_name":"Image","ident":"vips_image_get_n_subifds","summary":"Fetch and sanity-check [const@META_N_SUBIFDS]. Default to 0 if not present or crazy.","deprecated":null},{"type":"method","name":"get_non_whitespace","type_name":"Sbuf","ident":"vips_sbuf_get_non_whitespace","summary":"Fetch the next chunk of non-whitespace text from the source, and null-terminate it.  After this, the next getc ...","deprecated":null},{"type":"method","name":"get_offset","type_name":"Image","ident":"vips_image_get_offset","summary":"Matrix images can have an optional `offset` field for use by integer convolution.","deprecated":null},{"type":"method","name":"get_orientation","type_name":"Image","ident":"vips_image_get_orientation","summary":"Fetch and sanity-check [const@META_ORIENTATION]. Default to 1 (no rotate, no flip) if not present or crazy.","deprecated":null},{"type":"method","name":"get_orientation_swap","type_name":"Image","ident":"vips_image_get_orientation_swap","summary":"Return `TRUE` if applying the orientation would swap width and height.","deprecated":null},{"type":"method","name":"get_page_height","type_name":"Image","ident":"vips_image_get_page_height","summary":"Multi-page images can have a page height. Fetch it, and sanity check it. If page-height is not set, it ...","deprecated":null},{"type":"method","name":"get_scale","type_name":"Image","ident":"vips_image_get_scale","summary":"Matrix images can have an optional `scale` field for use by integer convolution.","deprecated":null},{"type":"method","name":"get_string","type_name":"Image","ident":"vips_image_get_string","summary":"Gets @out from @im under the name @name. The field must be of type `G_TYPE_STRING` or `VIPS_TYPE_REF_STRING`.  Do ...","deprecated":null},{"type":"method","name":"get_tile_size","type_name":"Image","ident":"vips_get_tile_size","summary":"Pick a tile size and a buffer height for this image and the current value of [func@concurrency_get]. The buffer ...","deprecated":null},{"type":"method","name":"get_typeof","type_name":"Image","ident":"vips_image_get_typeof","summary":"Read the [alias@GObject.Type] for a header field. Returns zero if there is no field of that name.  ::: ...","deprecated":null},{"type":"method","name":"get_width","type_name":"Image","ident":"vips_image_get_width","summary":"No description available.","deprecated":null},{"type":"method","name":"get_window_offset","type_name":"Interpolate","ident":"vips_interpolate_get_window_offset","summary":"Look up an interpolators desired window offset.","deprecated":null},{"type":"method","name":"get_window_size","type_name":"Interpolate","ident":"vips_interpolate_get_window_size","summary":"Look up an interpolators desired window size.","deprecated":null},{"type":"method","name":"get_write","type_name":"Dbuf","ident":"vips_dbuf_get_write","summary":"Return a pointer to an area you can write to, return length of area in @size. Use [method@Dbuf.allocate] before ..."},{"type":"method","name":"get_xoffset","type_name":"Image","ident":"vips_image_get_xoffset","summary":"No description available.","deprecated":null},{"type":"method","name":"get_xres","type_name":"Image","ident":"vips_image_get_xres","summary":"No description available.","deprecated":null},{"type":"method","name":"get_yoffset","type_name":"Image","ident":"vips_image_get_yoffset","summary":"No description available.","deprecated":null},{"type":"method","name":"get_yres","type_name":"Image","ident":"vips_image_get_yres","summary":"No description available.","deprecated":null},{"type":"method","name":"getc","type_name":"Sbuf","ident":"vips_sbuf_getc","summary":"Fetch the next character from the source.  If you can, use the macro [func@SBUF_GETC] instead for speed.","deprecated":null},{"type":"method","name":"getpoint","type_name":"Image","ident":"vips_getpoint","summary":"Reads a single pixel on an image.  The pixel values are returned in @vector, the length of the ...","deprecated":null},{"type":"method","name":"gifsave","type_name":"Image","ident":"vips_gifsave","summary":"Write to a file in GIF format.  Use @dither to set the degree of Floyd-Steinberg dithering and @effort ...","deprecated":null},{"type":"method","name":"gifsave_buffer","type_name":"Image","ident":"vips_gifsave_buffer","summary":"As [method@Image.gifsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"gifsave_target","type_name":"Image","ident":"vips_gifsave_target","summary":"As [method@Image.gifsave], but save to a target.  ::: tip \"Optional arguments\"     * @dither: `gdouble`, ...","deprecated":null},{"type":"method","name":"globalbalance","type_name":"Image","ident":"vips_globalbalance","summary":"[method@Image.globalbalance] can be used to remove contrast differences in an assembled mosaic.  It reads the History field attached ...","deprecated":null},{"type":"method","name":"gravity","type_name":"Image","ident":"vips_gravity","summary":"The opposite of [method@Image.extract_area]: place @in within an image of size @width by @height at a certain gravity.  ...","deprecated":null},{"type":"method","name":"grid","type_name":"Image","ident":"vips_grid","summary":"Chop a tall thin image up into a set of tiles, lay the tiles out in a grid.  ...","deprecated":null},{"type":"method","name":"guess_format","type_name":"Image","ident":"vips_image_guess_format","summary":"Return the [enum@BandFormat] for an image, guessing a sane value if the set value looks crazy.  For example, ...","deprecated":null},{"type":"method","name":"guess_interpretation","type_name":"Image","ident":"vips_image_guess_interpretation","summary":"Return the [enum@Interpretation] for an image, guessing a sane value if the set value looks crazy.","deprecated":null},{"type":"method","name":"hasalpha","type_name":"Image","ident":"vips_image_hasalpha","summary":"Look at an image's interpretation and see if it has extra alpha bands. For example, a 4-band [enum@Vips.Interpretation.sRGB] would, ...","deprecated":null},{"type":"method","name":"heifsave","type_name":"Image","ident":"vips_heifsave","summary":"Write a VIPS image to a file in HEIF format.  Use @Q to set the compression factor. Default ...","deprecated":null},{"type":"method","name":"heifsave_buffer","type_name":"Image","ident":"vips_heifsave_buffer","summary":"As [method@Image.heifsave], but save to a memory buffer.  The address of the buffer is returned in @obuf, the ...","deprecated":null},{"type":"method","name":"heifsave_target","type_name":"Image","ident":"vips_heifsave_target","summary":"As [method@Image.heifsave], but save to a target.  ::: tip \"Optional arguments\"     * @Q: `gint`, ...","deprecated":null},{"type":"method","name":"height","type_name":"Region","ident":"vips_region_height","summary":"No description available.","deprecated":null},{"type":"method","name":"hist_cum","type_name":"Image","ident":"vips_hist_cum","summary":"Form cumulative histogram.  ::: seealso     [method@Image.hist_norm].","deprecated":null},{"type":"method","name":"hist_entropy","type_name":"Image","ident":"vips_hist_entropy","summary":"Estimate image entropy from a histogram. Entropy is calculated as:  ``` -sum(p * log2(p)) ```  where p ...","deprecated":null},{"type":"method","name":"hist_equal","type_name":"Image","ident":"vips_hist_equal","summary":"Histogram-equalise @in.  Equalise using band @bandno, or if @bandno is -1, equalise bands independently. The output format is ...","deprecated":null},{"type":"method","name":"hist_find","type_name":"Image","ident":"vips_hist_find","summary":"Find the histogram of @in. Find the histogram for band @band (producing a one-band histogram), or for all bands ...","deprecated":null},{"type":"method","name":"hist_find_indexed","type_name":"Image","ident":"vips_hist_find_indexed","summary":"Make a histogram of @in, but use image @index to pick the bins. In other words, element zero in ...","deprecated":null},{"type":"method","name":"hist_find_ndim","type_name":"Image","ident":"vips_hist_find_ndim","summary":"Make a one, two or three dimensional histogram of a 1, 2 or 3 band image. Divide each axis ...","deprecated":null},{"type":"method","name":"hist_ismonotonic","type_name":"Image","ident":"vips_hist_ismonotonic","summary":"Test @in for monotonicity. @out is set non-zero if @in is monotonic.","deprecated":null},{"type":"method","name":"hist_local","type_name":"Image","ident":"vips_hist_local","summary":"Performs local histogram equalisation on @in using a window of size @width by @height centered on the input pixel. ...","deprecated":null},{"type":"method","name":"hist_match","type_name":"Image","ident":"vips_hist_match","summary":"Adjust @in to match @ref. If @in and @ref are normalised cumulative histograms, @out will be a LUT that ...","deprecated":null},{"type":"method","name":"hist_norm","type_name":"Image","ident":"vips_hist_norm","summary":"Normalise histogram. The maximum of each band becomes equal to the maximum index, so for example the max for ...","deprecated":null},{"type":"method","name":"hist_plot","type_name":"Image","ident":"vips_hist_plot","summary":"Plot a 1 by any or any by 1 image file as a max by any or any by ...","deprecated":null},{"type":"method","name":"history_args","type_name":"Image","ident":"vips_image_history_args","summary":"Formats the name/argv as a single string and calls [method@Image.history_printf]. A convenience function for command-line programs.  ::: seealso ...","deprecated":null},{"type":"method","name":"history_printf","type_name":"Image","ident":"vips_image_history_printf","summary":"Add a line to the image history. The @format and arguments are expanded, the date and time is appended ...","deprecated":null},{"type":"method","name":"hough_circle","type_name":"Image","ident":"vips_hough_circle","summary":"Find the circular Hough transform of an image. @in must be one band, with non-zero pixels for image edges. ...","deprecated":null},{"type":"method","name":"hough_line","type_name":"Image","ident":"vips_hough_line","summary":"Find the line Hough transform for @in. @in must have one band. @out has one band, with pixels being ...","deprecated":null},{"type":"method","name":"icc_ac2rc","type_name":"Image","ident":"vips_icc_ac2rc","summary":"Transform an image from absolute to relative colorimetry using the MediaWhitePoint stored in the ICC profile.  ::: seealso ...","deprecated":null},{"type":"method","name":"icc_export","type_name":"Image","ident":"vips_icc_export","summary":"Export an image from D65 LAB to device space with an ICC profile.  If @pcs is set to ...","deprecated":null},{"type":"method","name":"icc_import","type_name":"Image","ident":"vips_icc_import","summary":"Import an image from device space to D65 LAB with an ICC profile.  If @pcs is set to ...","deprecated":null},{"type":"method","name":"icc_transform","type_name":"Image","ident":"vips_icc_transform","summary":"Transform an image with a pair of ICC profiles.  The input image is moved to profile-connection space with ...","deprecated":null},{"type":"method","name":"ifthenelse","type_name":"Image","ident":"vips_ifthenelse","summary":"This operation scans the condition image @cond and uses it to select pixels from either the then image @in1 ...","deprecated":null},{"type":"method","name":"imag","type_name":"Image","ident":"vips_imag","summary":"Perform [enum@Vips.OperationComplexget.IMAG] on an image. See [method@Image.complexget].","deprecated":null},{"type":"method","name":"image","type_name":"Region","ident":"vips_region_image","summary":"The region is transformed so that at least @r pixels are available to be read from the image. The ...","deprecated":null},{"type":"method","name":"includespoint","type_name":"Rect","ident":"vips_rect_includespoint","summary":"Does @r contain point (@x, @y)?"},{"type":"method","name":"includesrect","type_name":"Rect","ident":"vips_rect_includesrect","summary":"Is @r2 a subset of @r1?"},{"type":"method","name":"init","type_name":"Buf","ident":"vips_buf_init","summary":"Initialize a buffer."},{"type":"method","name":"init","type_name":"Dbuf","ident":"vips_dbuf_init","summary":"Initialize @dbuf. You can also just init to zero, eg. `VipsDbuf buf = {0};`.  Destroy with [method@Dbuf.destroy]."},{"type":"method","name":"init","type_name":"Semaphore","ident":"vips_semaphore_init","summary":"No description available."},{"type":"method","name":"init_dynamic","type_name":"Buf","ident":"vips_buf_init_dynamic","summary":"Initialise and attach to a heap memory area. The memory area needs to be at least 4 bytes long. ..."},{"type":"method","name":"init_fields","type_name":"Image","ident":"vips_image_init_fields","summary":"A convenience function to set the header fields after creating an image. Normally you copy the fields from your ...","deprecated":null},{"type":"method","name":"init_static","type_name":"Buf","ident":"vips_buf_init_static","summary":"Initialise and attach to a static memory area. [func@BUF_STATIC] is usually more convenient.  For example:  ```c char ..."},{"type":"method","name":"inplace","type_name":"Image","ident":"vips_image_inplace","summary":"Gets @image ready for an in-place operation, such as [method@Image.draw_circle]. After calling this function you can both read and ...","deprecated":null},{"type":"method","name":"insert","type_name":"Image","ident":"vips_insert","summary":"Insert @sub into @main at position @x, @y.  Normally @out shows the whole of @main. If @expand is ...","deprecated":null},{"type":"method","name":"intersectrect","type_name":"Rect","ident":"vips_rect_intersectrect","summary":"Fill @out with the intersection of @r1 and @r2. @out can equal @r1 or @r2."},{"type":"method","name":"invalidate","type_name":"Operation","ident":"vips_operation_invalidate","summary":"No description available.","deprecated":null},{"type":"method","name":"invalidate","type_name":"Region","ident":"vips_region_invalidate","summary":"Mark a region as containing invalid pixels. Calling this function means that the next time [method@Region.prepare] is called, the ...","deprecated":null},{"type":"method","name":"invalidate_all","type_name":"Image","ident":"vips_image_invalidate_all","summary":"Invalidate all pixel caches on @image and any downstream images, that is, images which depend on this image. Additionally, ...","deprecated":null},{"type":"method","name":"invert","type_name":"Image","ident":"vips_invert","summary":"For unsigned formats, this operation calculates (max - @in), eg. (255 - @in) for uchar. For signed and float ...","deprecated":null},{"type":"method","name":"invertlut","type_name":"Image","ident":"vips_invertlut","summary":"Given a mask of target values and real values, generate a LUT which will map reals to targets.  ...","deprecated":null},{"type":"method","name":"invfft","type_name":"Image","ident":"vips_invfft","summary":"Transform an image from Fourier space to real space.  The result is complex. If you are OK with ...","deprecated":null},{"type":"method","name":"isMSBfirst","type_name":"Image","ident":"vips_image_isMSBfirst","summary":"Return `TRUE` if @image is in most-significant- byte first form. This is the byte order used on the SPARC ...","deprecated":null},{"type":"method","name":"is_empty","type_name":"Buf","ident":"vips_buf_is_empty","summary":"No description available."},{"type":"method","name":"is_file","type_name":"Source","ident":"vips_source_is_file","summary":"Test if this source is a simple file with support for seek. Named pipes, for example, will fail this ...","deprecated":null},{"type":"method","name":"is_full","type_name":"Buf","ident":"vips_buf_is_full","summary":"No description available."},{"type":"method","name":"is_mappable","type_name":"Source","ident":"vips_source_is_mappable","summary":"Some sources can be efficiently mapped into memory. You can still use [method@Source.map] if this function returns `FALSE`, but ...","deprecated":null},{"type":"method","name":"is_sequential","type_name":"Image","ident":"vips_image_is_sequential","summary":"TRUE if any of the images upstream from @image were opened in sequential mode. Some operations change behaviour slightly ...","deprecated":null},{"type":"method","name":"isempty","type_name":"Rect","ident":"vips_rect_isempty","summary":"Is @r empty? ie. zero width or height."},{"type":"method","name":"isfile","type_name":"Image","ident":"vips_image_isfile","summary":"Return `TRUE` if @image represents a file on disc in some way.","deprecated":null},{"type":"method","name":"iskilled","type_name":"Image","ident":"vips_image_iskilled","summary":"If @image has been killed (see [method@Image.set_kill]), set an error message, clear the [class@Image].kill flag and return `TRUE`. Otherwise ...","deprecated":null},{"type":"method","name":"ispartial","type_name":"Image","ident":"vips_image_ispartial","summary":"Return `TRUE` if @im represents a partial image (a delayed calculation).","deprecated":null},{"type":"method","name":"join","type_name":"Image","ident":"vips_join","summary":"Join @in1 and @in2 together, left-right or up-down depending on the value of @direction.  If one is taller ...","deprecated":null},{"type":"method","name":"jp2ksave","type_name":"Image","ident":"vips_jp2ksave","summary":"Write a VIPS image to a file in JPEG2000 format.  The saver supports 8, 16 and 32-bit int ...","deprecated":null},{"type":"method","name":"jp2ksave_buffer","type_name":"Image","ident":"vips_jp2ksave_buffer","summary":"As [method@Image.jp2ksave], but save to a target.  ::: tip \"Optional arguments\"     * @Q: `gint`, ...","deprecated":null},{"type":"method","name":"jp2ksave_target","type_name":"Image","ident":"vips_jp2ksave_target","summary":"As [method@Image.jp2ksave], but save to a target.  ::: tip \"Optional arguments\"     * @Q: `gint`, ...","deprecated":null},{"type":"method","name":"jpegsave","type_name":"Image","ident":"vips_jpegsave","summary":"Write a VIPS image to a file as JPEG.  Use @Q to set the JPEG compression factor. Default ...","deprecated":null},{"type":"method","name":"jpegsave_buffer","type_name":"Image","ident":"vips_jpegsave_buffer","summary":"As [method@Image.jpegsave], but save to a memory buffer.  The address of the buffer is returned in @obuf, the ...","deprecated":null},{"type":"method","name":"jpegsave_mime","type_name":"Image","ident":"vips_jpegsave_mime","summary":"As [method@Image.jpegsave], but save as a mime jpeg on stdout.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"jpegsave_target","type_name":"Image","ident":"vips_jpegsave_target","summary":"As [method@Image.jpegsave], but save to a target.  ::: tip \"Optional arguments\"     * @Q: `gint`, ...","deprecated":null},{"type":"method","name":"jxlsave","type_name":"Image","ident":"vips_jxlsave","summary":"Write a VIPS image to a file in JPEG-XL format.  The JPEG-XL loader and saver are experimental features ...","deprecated":null},{"type":"method","name":"jxlsave_buffer","type_name":"Image","ident":"vips_jxlsave_buffer","summary":"As [method@Image.jxlsave], but save to a memory buffer.  ::: tip \"Optional arguments\"     * @tier: ...","deprecated":null},{"type":"method","name":"jxlsave_target","type_name":"Image","ident":"vips_jxlsave_target","summary":"As [method@Image.jxlsave], but save to a target.  ::: tip \"Optional arguments\"     * @tier: `gint`, ...","deprecated":null},{"type":"method","name":"labelregions","type_name":"Image","ident":"vips_labelregions","summary":"Label regions of equal pixels in an image.  Repeatedly scans @in for regions of 4-connected pixels with the ...","deprecated":null},{"type":"method","name":"len","type_name":"Buf","ident":"vips_buf_len","summary":"No description available."},{"type":"method","name":"length","type_name":"Source","ident":"vips_source_length","summary":"Return the length in bytes of the source. Unseekable sources, for example pipes, will have to be read entirely ...","deprecated":null},{"type":"method","name":"less","type_name":"Image","ident":"vips_less","summary":"Perform [enum@Vips.OperationRelational.LESS] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"less_const","type_name":"Image","ident":"vips_less_const","summary":"Perform [enum@Vips.OperationRelational.LESS] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"less_const1","type_name":"Image","ident":"vips_less_const1","summary":"Perform [enum@Vips.OperationRelational.LESS] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"lesseq","type_name":"Image","ident":"vips_lesseq","summary":"Perform [enum@Vips.OperationRelational.LESSEQ] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"lesseq_const","type_name":"Image","ident":"vips_lesseq_const","summary":"Perform [enum@Vips.OperationRelational.LESSEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"lesseq_const1","type_name":"Image","ident":"vips_lesseq_const1","summary":"Perform [enum@Vips.OperationRelational.LESSEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"linear","type_name":"Image","ident":"vips_linear","summary":"Pass an image through a linear transform, ie. (@out = @in * @a + @b). Output is float for ...","deprecated":null},{"type":"method","name":"linear1","type_name":"Image","ident":"vips_linear1","summary":"Run [method@Image.linear] with a single constant.  ::: tip \"Optional arguments\"     * @uchar: output uchar ...","deprecated":null},{"type":"method","name":"linecache","type_name":"Image","ident":"vips_linecache","summary":"This operation behaves rather like [method@Image.copy] between images @in and @out, except that it keeps a cache of computed ...","deprecated":null},{"type":"method","name":"local_array","type_name":"Object","ident":"vips_object_local_array","summary":"Make an array of NULL VipsObject pointers. When @parent closes, every non-NULL pointer in the array will be unreffed ...","deprecated":null},{"type":"method","name":"local_cb","type_name":"Object","ident":"vips_object_local_cb","summary":"No description available.","deprecated":null},{"type":"method","name":"log","type_name":"Image","ident":"vips_log","summary":"Perform [enum@Vips.OperationMath.LOG] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"log10","type_name":"Image","ident":"vips_log10","summary":"Perform [enum@Vips.OperationMath.LOG10] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"lshift","type_name":"Image","ident":"vips_lshift","summary":"Perform [enum@Vips.OperationBoolean.LSHIFT] on a pair of images. See [method@Image.boolean].","deprecated":null},{"type":"method","name":"lshift_const","type_name":"Image","ident":"vips_lshift_const","summary":"Perform [enum@Vips.OperationBoolean.LSHIFT] on an image and an array of constants. See [method@Image.boolean_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"lshift_const1","type_name":"Image","ident":"vips_lshift_const1","summary":"Perform [enum@Vips.OperationBoolean.LSHIFT] on an image and a constant. See [method@Image.boolean_const1].  ::: seealso     [method@Image.boolean], [method@Image.boolean_const].","deprecated":null},{"type":"method","name":"magicksave","type_name":"Image","ident":"vips_magicksave","summary":"Write an image using libMagick.  Use @quality to set the quality factor. Default 0.  Use @format to ...","deprecated":null},{"type":"method","name":"magicksave_buffer","type_name":"Image","ident":"vips_magicksave_buffer","summary":"As [method@Image.magicksave], but save to a memory buffer.  The address of the buffer is returned in @obuf, the ...","deprecated":null},{"type":"method","name":"map","type_name":"Image","ident":"vips_image_map","summary":"This function calls @fn for every header field, including every item of metadata.  Like all _map functions, the ...","deprecated":null},{"type":"method","name":"map","type_name":"Source","ident":"vips_source_map","summary":"Map the source entirely into memory and return a pointer to the start. If @length is non-NULL, the source ...","deprecated":null},{"type":"method","name":"map_blob","type_name":"Source","ident":"vips_source_map_blob","summary":"Just like [method@Source.map], but return a [struct@Blob] containing the pointer. @source will stay alive as long as the result ...","deprecated":null},{"type":"method","name":"mapim","type_name":"Image","ident":"vips_mapim","summary":"This operator resamples @in using @index to look up pixels.  @out is the same size as @index, with ...","deprecated":null},{"type":"method","name":"maplut","type_name":"Image","ident":"vips_maplut","summary":"Map an image through another image acting as a LUT (Look Up Table). The lut may have any type ...","deprecated":null},{"type":"method","name":"marginadjust","type_name":"Rect","ident":"vips_rect_marginadjust","summary":"Enlarge @r by @n. +1 means out one pixel."},{"type":"method","name":"match","type_name":"Image","ident":"vips_match","summary":"Scale, rotate and translate @sec so that the tie-points line up.  If @search is `TRUE`, before performing the ...","deprecated":null},{"type":"method","name":"math","type_name":"Image","ident":"vips_math","summary":"Perform various functions in -lm, the maths library, on images.  Angles are expressed in degrees. The output type ...","deprecated":null},{"type":"method","name":"math2","type_name":"Image","ident":"vips_math2","summary":"This operation calculates a 2-ary maths operation on a pair of images and writes the result to @out. The ...","deprecated":null},{"type":"method","name":"math2_const","type_name":"Image","ident":"vips_math2_const","summary":"This operation calculates various 2-ary maths operations on an image and an array of constants and writes the result ...","deprecated":null},{"type":"method","name":"math2_const1","type_name":"Image","ident":"vips_math2_const1","summary":"This operation calculates various 2-ary maths operations on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"matrixinvert","type_name":"Image","ident":"vips_matrixinvert","summary":"This operation calculates the inverse of the matrix represented in @m. The scale and offset members of the input ...","deprecated":null},{"type":"method","name":"matrixmultiply","type_name":"Image","ident":"vips_matrixmultiply","summary":"Multiplies two matrix images.  The scale and offset members of @left and @right are ignored.  ::: seealso ...","deprecated":null},{"type":"method","name":"matrixprint","type_name":"Image","ident":"vips_matrixprint","summary":"Print @in to %stdout in matrix format. See [ctor@Image.matrixload] for a description of the format.  ::: seealso  ...","deprecated":null},{"type":"method","name":"matrixsave","type_name":"Image","ident":"vips_matrixsave","summary":"Write @in to @filename in matrix format. See [ctor@Image.matrixload] for a description of the format.  ::: seealso  ...","deprecated":null},{"type":"method","name":"matrixsave_target","type_name":"Image","ident":"vips_matrixsave_target","summary":"As [method@Image.matrixsave], but save to a target.  ::: seealso     [method@Image.matrixsave].","deprecated":null},{"type":"method","name":"max","type_name":"Image","ident":"vips_max","summary":"This operation finds the maximum value in an image.  By default it finds the single largest value. If ...","deprecated":null},{"type":"method","name":"maxpair","type_name":"Image","ident":"vips_maxpair","summary":"For each pixel, pick the maximum of a pair of images.  ::: seealso     [method@Image.minpair].","deprecated":null},{"type":"method","name":"measure","type_name":"Image","ident":"vips_measure","summary":"Analyse a grid of colour patches, producing an array of patch averages. The mask has a row for each ...","deprecated":null},{"type":"method","name":"median","type_name":"Image","ident":"vips_median","summary":"A convenience function equivalent to:   vips_rank(in, out, size, size, (size * size) / 2);  ::: seealso ...","deprecated":null},{"type":"method","name":"merge","type_name":"Image","ident":"vips_merge","summary":"This operation joins two images left-right (with @ref on the left) or up-down (with @ref above) with a smooth ...","deprecated":null},{"type":"method","name":"min","type_name":"Image","ident":"vips_min","summary":"This operation finds the minimum value in an image.  By default it finds the single smallest value. If ...","deprecated":null},{"type":"method","name":"minimise","type_name":"Source","ident":"vips_source_minimise","summary":"Minimise the source. As many resources as can be safely removed are removed. Use [method@Source.unminimise] to restore the source ...","deprecated":null},{"type":"method","name":"minimise_all","type_name":"Image","ident":"vips_image_minimise_all","summary":"Minimise memory use on this image and any upstream images, that is, images which this image depends upon. This ...","deprecated":null},{"type":"method","name":"minimum_size","type_name":"Dbuf","ident":"vips_dbuf_minimum_size","summary":"Make sure @dbuf is at least @size bytes."},{"type":"method","name":"minpair","type_name":"Image","ident":"vips_minpair","summary":"For each pixel, pick the minimum of a pair of images.  ::: seealso     [method@Image.minpair].","deprecated":null},{"type":"method","name":"more","type_name":"Image","ident":"vips_more","summary":"Perform [enum@Vips.OperationRelational.MORE] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"more_const","type_name":"Image","ident":"vips_more_const","summary":"Perform [enum@Vips.OperationRelational.MORE] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"more_const1","type_name":"Image","ident":"vips_more_const1","summary":"Perform [enum@Vips.OperationRelational.MORE] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"moreeq","type_name":"Image","ident":"vips_moreeq","summary":"Perform [enum@Vips.OperationRelational.MOREEQ] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"moreeq_const","type_name":"Image","ident":"vips_moreeq_const","summary":"Perform [enum@Vips.OperationRelational.MOREEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"moreeq_const1","type_name":"Image","ident":"vips_moreeq_const1","summary":"Perform [enum@Vips.OperationRelational.MOREEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"morph","type_name":"Image","ident":"vips_morph","summary":"Performs a morphological operation on @in using @mask as a structuring element.  The image should have 0 (black) ...","deprecated":null},{"type":"method","name":"mosaic","type_name":"Image","ident":"vips_mosaic","summary":"This operation joins two images left-right (with @ref on the left) or top-bottom (with @ref above) given an approximate ...","deprecated":null},{"type":"method","name":"mosaic1","type_name":"Image","ident":"vips_mosaic1","summary":"This operation joins two images top-bottom (with @sec on the right) or left-right (with @sec at the bottom) given ...","deprecated":null},{"type":"method","name":"msb","type_name":"Image","ident":"vips_msb","summary":"Turn any integer image to 8-bit unsigned char by discarding all but the most significant byte. Signed values are ...","deprecated":null},{"type":"method","name":"multiply","type_name":"Image","ident":"vips_multiply","summary":"This operation calculates @left * @right and writes the result to @out.  If the images differ in size, ...","deprecated":null},{"type":"method","name":"needsstring","type_name":"ArgumentClass","ident":"vips_argument_class_needsstring","summary":"No description available."},{"type":"method","name":"nick","type_name":"Connection","ident":"vips_connection_nick","summary":"No description available.","deprecated":null},{"type":"method","name":"niftisave","type_name":"Image","ident":"vips_niftisave","summary":"Write a VIPS image to a file in NIFTI format.  Use the various NIFTI suffixes to pick the ...","deprecated":null},{"type":"method","name":"normalise","type_name":"Rect","ident":"vips_rect_normalise","summary":"Make sure width and height are >0 by moving the origin and flipping the rect."},{"type":"method","name":"notequal","type_name":"Image","ident":"vips_notequal","summary":"Perform [enum@Vips.OperationRelational.NOTEQ] on a pair of images. See [method@Image.relational].","deprecated":null},{"type":"method","name":"notequal_const","type_name":"Image","ident":"vips_notequal_const","summary":"Perform [enum@Vips.OperationRelational.NOTEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"notequal_const1","type_name":"Image","ident":"vips_notequal_const1","summary":"Perform [enum@Vips.OperationRelational.NOTEQ] on an image and a constant. See [method@Image.relational_const].","deprecated":null},{"type":"method","name":"orimage","type_name":"Image","ident":"vips_orimage","summary":"Perform [enum@Vips.OperationBoolean.OR] on a pair of images. See [method@Image.boolean].","deprecated":null},{"type":"method","name":"orimage_const","type_name":"Image","ident":"vips_orimage_const","summary":"Perform [enum@Vips.OperationBoolean.OR] on an image and an array of constants. See [method@Image.boolean_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"orimage_const1","type_name":"Image","ident":"vips_orimage_const1","summary":"Perform [enum@Vips.OperationBoolean.OR] on an image and a constant. See [method@Image.boolean_const1].  ::: seealso     [method@Image.boolean], [method@Image.boolean_const].","deprecated":null},{"type":"method","name":"overlapsrect","type_name":"Rect","ident":"vips_rect_overlapsrect","summary":"Do @r1 and @r2 have a non-empty intersection?"},{"type":"method","name":"paint","type_name":"Region","ident":"vips_region_paint","summary":"Paints @value into @reg covering rectangle @r. @r is clipped against @reg->valid.  For int images, @value is passed ...","deprecated":null},{"type":"method","name":"paint_pel","type_name":"Region","ident":"vips_region_paint_pel","summary":"Paints @ink into @reg covering rectangle @r. @r is clipped against @reg->valid.  @ink should be a byte array ...","deprecated":null},{"type":"method","name":"percent","type_name":"Image","ident":"vips_percent","summary":"[method@Image.percent] returns (through the @threshold parameter) the threshold below which there are @percent values of @in. For example:  ...","deprecated":null},{"type":"method","name":"phasecor","type_name":"Image","ident":"vips_phasecor","summary":"Convert the two input images to Fourier space, calculate phase-correlation, back to real space.  ::: seealso   ...","deprecated":null},{"type":"method","name":"pio_input","type_name":"Image","ident":"vips_image_pio_input","summary":"Check that an image is readable with [method@Region.prepare] and friends. If it isn't, try to transform the image so ...","deprecated":null},{"type":"method","name":"pio_output","type_name":"Image","ident":"vips_image_pio_output","summary":"Check that an image is writeable with [method@Image.generate]. If it isn't, try to transform the image so that [method@Image.generate] ...","deprecated":null},{"type":"method","name":"pipelinev","type_name":"Image","ident":"vips_image_pipelinev","summary":"Build an array and call [func@Image.pipeline_array].  ::: seealso     [method@Image.generate].","deprecated":null},{"type":"method","name":"pngsave","type_name":"Image","ident":"vips_pngsave","summary":"Write a VIPS image to a file as PNG.  @compression means compress with this much effort (0 - ...","deprecated":null},{"type":"method","name":"pngsave_buffer","type_name":"Image","ident":"vips_pngsave_buffer","summary":"As [method@Image.pngsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"pngsave_target","type_name":"Image","ident":"vips_pngsave_target","summary":"As [method@Image.pngsave], but save to a target.  ::: tip \"Optional arguments\"     * @compression: `gint`, ...","deprecated":null},{"type":"method","name":"polar","type_name":"Image","ident":"vips_polar","summary":"Perform [enum@Vips.OperationComplex.POLAR] on an image. See [method@Image.complex].","deprecated":null},{"type":"method","name":"position","type_name":"Region","ident":"vips_region_position","summary":"Set the position of a region. This only affects reg->valid, ie. the way pixels are addressed, not reg->data, the ...","deprecated":null},{"type":"method","name":"pow","type_name":"Image","ident":"vips_pow","summary":"Perform [enum@Vips.OperationMath2.POW] on a pair of images. See [method@Image.math2].","deprecated":null},{"type":"method","name":"pow_const","type_name":"Image","ident":"vips_pow_const","summary":"Perform [enum@Vips.OperationMath2.POW] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"pow_const1","type_name":"Image","ident":"vips_pow_const1","summary":"Perform [enum@Vips.OperationMath2.POW] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"ppmsave","type_name":"Image","ident":"vips_ppmsave","summary":"Write a VIPS image to a file as PPM.  It can write 1, 8, 16 or 32 bit ...","deprecated":null},{"type":"method","name":"ppmsave_target","type_name":"Image","ident":"vips_ppmsave_target","summary":"As [method@Image.ppmsave], but save to a target.  ::: tip \"Optional arguments\"     * @format: [enum@ForeignPpmFormat], ...","deprecated":null},{"type":"method","name":"preclose","type_name":"Object","ident":"vips_object_preclose","summary":"No description available.","deprecated":null},{"type":"method","name":"premultiply","type_name":"Image","ident":"vips_premultiply","summary":"Premultiplies any alpha channel.  The final band is taken to be the alpha and the bands are transformed ...","deprecated":null},{"type":"method","name":"prepare","type_name":"Region","ident":"vips_region_prepare","summary":"[method@Region.prepare] fills @reg with pixels. After calling, you can address at least the area @r with [func@REGION_ADDR] and get ...","deprecated":null},{"type":"method","name":"prepare_to","type_name":"Region","ident":"vips_region_prepare_to","summary":"Like [method@Region.prepare]: fill @reg with the pixels in area @r.  Unlike [method@Region.prepare], rather than writing the result to ...","deprecated":null},{"type":"method","name":"prewitt","type_name":"Image","ident":"vips_prewitt","summary":"Prewitt edge detector.  uchar images are computed using a fast, low-precision path. Cast to float for a high-precision ...","deprecated":null},{"type":"method","name":"print_dump","type_name":"Object","ident":"vips_object_print_dump","summary":"No description available.","deprecated":null},{"type":"method","name":"print_field","type_name":"Image","ident":"vips_image_print_field","summary":"Prints field @name to stdout as ASCII. Handy for debugging.","deprecated":null},{"type":"method","name":"print_name","type_name":"Object","ident":"vips_object_print_name","summary":"No description available.","deprecated":null},{"type":"method","name":"print_summary","type_name":"Object","ident":"vips_object_print_summary","summary":"No description available.","deprecated":null},{"type":"method","name":"profile","type_name":"Image","ident":"vips_profile","summary":"[method@Image.profile] searches inward from the edge of @in and finds the first non-zero pixel. Pixels in @columns have the ...","deprecated":null},{"type":"method","name":"project","type_name":"Image","ident":"vips_project","summary":"Find the horizontal and vertical projections of an image, ie. the sum of every row of pixels, and the ...","deprecated":null},{"type":"method","name":"putc","type_name":"Target","ident":"vips_target_putc","summary":"Write a single character @ch to @target. See the macro [func@TARGET_PUTC] for a faster way to do this.","deprecated":null},{"type":"method","name":"quadratic","type_name":"Image","ident":"vips_quadratic","summary":"Transform an image with a 0, 1, 2, or 3rd order polynomial.  The transform we compute:  ``` ...","deprecated":null},{"type":"method","name":"rad2float","type_name":"Image","ident":"vips_rad2float","summary":"Unpack a RAD ([enum@Vips.Coding.RAD]) image to a three-band float image.  ::: seealso     [method@Image.float2rad], [method@Image.LabQ2LabS].","deprecated":null},{"type":"method","name":"radsave","type_name":"Image","ident":"vips_radsave","summary":"Write a VIPS image in Radiance (HDR) format.  Sections of this reader from Greg Ward and Radiance with ...","deprecated":null},{"type":"method","name":"radsave_buffer","type_name":"Image","ident":"vips_radsave_buffer","summary":"As [method@Image.radsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"radsave_target","type_name":"Image","ident":"vips_radsave_target","summary":"As [method@Image.radsave], but save to a target.  ::: seealso     [method@Image.radsave].","deprecated":null},{"type":"method","name":"rank","type_name":"Image","ident":"vips_rank","summary":"[method@Image.rank] does rank filtering on an image. A window of size @width by @height is passed over the image. ...","deprecated":null},{"type":"method","name":"rawsave","type_name":"Image","ident":"vips_rawsave","summary":"Writes the pixels in @in to the file @filename with no header or other metadata.  ::: seealso  ...","deprecated":null},{"type":"method","name":"rawsave_buffer","type_name":"Image","ident":"vips_rawsave_buffer","summary":"As [method@Image.rawsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"rawsave_target","type_name":"Image","ident":"vips_rawsave_target","summary":"As [method@Image.rawsave], but save to a target.  ::: seealso     [method@Image.rawsave].","deprecated":null},{"type":"method","name":"read","type_name":"Source","ident":"vips_source_read","summary":"Read up to @length bytes from @source and store the bytes in @buffer. Return the number of bytes actually ...","deprecated":null},{"type":"method","name":"read","type_name":"Target","ident":"vips_target_read","summary":"Read up to @length bytes from @target and store the bytes in @buffer. Return the number of bytes actually ...","deprecated":null},{"type":"method","name":"read","type_name":"Dbuf","ident":"vips_dbuf_read","summary":"Up to @size bytes are read from the buffer and copied to @data. The number of bytes transferred is returned."},{"type":"method","name":"real","type_name":"Image","ident":"vips_real","summary":"Perform [enum@Vips.OperationComplexget.REAL] on an image. See [method@Image.complexget].","deprecated":null},{"type":"method","name":"recomb","type_name":"Image","ident":"vips_recomb","summary":"This operation recombines an image's bands. Each pixel in @in is treated as an n-element vector, where n is ...","deprecated":null},{"type":"method","name":"rect","type_name":"Image","ident":"vips_rect","summary":"Perform [enum@Vips.OperationComplex.RECT] on an image. See [method@Image.complex].","deprecated":null},{"type":"method","name":"reduce","type_name":"Image","ident":"vips_reduce","summary":"Reduce @in by a pair of factors with a pair of 1D kernels.  This will not work well ...","deprecated":null},{"type":"method","name":"reduceh","type_name":"Image","ident":"vips_reduceh","summary":"Reduce @in horizontally by a float factor.  The pixels in @out are interpolated with a 1D mask generated ...","deprecated":null},{"type":"method","name":"reducev","type_name":"Image","ident":"vips_reducev","summary":"Reduce @in vertically by a float factor.  The pixels in @out are interpolated with a 1D mask generated ...","deprecated":null},{"type":"method","name":"region","type_name":"Region","ident":"vips_region_region","summary":"Make [func@REGION_ADDR] on @reg go to @dest instead.  @r is the part of @reg which you want to ...","deprecated":null},{"type":"method","name":"relational","type_name":"Image","ident":"vips_relational","summary":"Perform various relational operations on pairs of images.  The output type is always uchar, with 0 for FALSE ...","deprecated":null},{"type":"method","name":"relational_const","type_name":"Image","ident":"vips_relational_const","summary":"Perform various relational operations on an image and an array of constants.  The output type is always uchar, ...","deprecated":null},{"type":"method","name":"relational_const1","type_name":"Image","ident":"vips_relational_const1","summary":"Perform various relational operations on an image and a constant. See [method@Image.relational_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"remainder","type_name":"Image","ident":"vips_remainder","summary":"This operation calculates @left % @right (remainder after integer division) and writes the result to @out. The images may ...","deprecated":null},{"type":"method","name":"remainder_const","type_name":"Image","ident":"vips_remainder_const","summary":"This operation calculates @in % @c (remainder after division by an array of constants) and writes the result to ...","deprecated":null},{"type":"method","name":"remainder_const1","type_name":"Image","ident":"vips_remainder_const1","summary":"This operation calculates @in % @c (remainder after division by a constant) and writes the result to @out. The ...","deprecated":null},{"type":"method","name":"remosaic","type_name":"Image","ident":"vips_remosaic","summary":"[method@Image.remosaic] works rather as [method@Image.globalbalance]. It takes apart the mosaiced image @in and rebuilds it, substituting images.  Unlike ...","deprecated":null},{"type":"method","name":"remove","type_name":"Image","ident":"vips_image_remove","summary":"Find and remove an item of metadata. Return `FALSE` if no metadata of that name was found.  ::: ...","deprecated":null},{"type":"method","name":"removec","type_name":"Buf","ident":"vips_buf_removec","summary":"Remove the last character, if it's @ch."},{"type":"method","name":"reorder_margin_hint","type_name":"Image","ident":"vips_reorder_margin_hint","summary":"[method@Image.reorder_margin_hint] sets a hint that @image contains a margin, that is, that each [method@Region.prepare] on @image will request a ...","deprecated":null},{"type":"method","name":"reorder_prepare_many","type_name":"Image","ident":"vips_reorder_prepare_many","summary":"[method@Image.reorder_prepare_many] runs [method@Region.prepare] on each region in @regions, requesting the pixels in @r.  It tries to request the ...","deprecated":null},{"type":"method","name":"replicate","type_name":"Image","ident":"vips_replicate","summary":"Repeats an image many times.  ::: seealso     [method@Image.extract_area].","deprecated":null},{"type":"method","name":"require","type_name":"Sbuf","ident":"vips_sbuf_require","summary":"Make sure there are at least @require bytes of readahead available.","deprecated":null},{"type":"method","name":"reset","type_name":"Dbuf","ident":"vips_dbuf_reset","summary":"Reset the buffer to empty. No memory is freed, just the data size and write point are reset."},{"type":"method","name":"resize","type_name":"Image","ident":"vips_resize","summary":"Resize an image.  Set @gap to speed up downsizing by having [method@Image.shrink] to shrink with a box filter ...","deprecated":null},{"type":"method","name":"rewind","type_name":"Object","ident":"vips_object_rewind","summary":"No description available.","deprecated":null},{"type":"method","name":"rewind","type_name":"Source","ident":"vips_source_rewind","summary":"Rewind the source to the start.  You can't always do this after the pixel decode phase starts -- ...","deprecated":null},{"type":"method","name":"rewind","type_name":"Buf","ident":"vips_buf_rewind","summary":"Reset the buffer to the empty string."},{"type":"method","name":"rint","type_name":"Image","ident":"vips_rint","summary":"Round to an integral value with [enum@Vips.OperationRound.RINT]. See [method@Image.round].","deprecated":null},{"type":"method","name":"rot","type_name":"Image","ident":"vips_rot","summary":"Rotate @in by a multiple of 90 degrees.  Use [method@Image.similarity] to rotate by an arbitrary angle. [method@Image.rot45] is ...","deprecated":null},{"type":"method","name":"rot180","type_name":"Image","ident":"vips_rot180","summary":"Rotate @in by 180 degrees. A convenience function over [method@Image.rot].  ::: seealso     [method@Image.rot].","deprecated":null},{"type":"method","name":"rot270","type_name":"Image","ident":"vips_rot270","summary":"Rotate @in by 270 degrees clockwise. A convenience function over [method@Image.rot].  ::: seealso     [method@Image.rot].","deprecated":null},{"type":"method","name":"rot45","type_name":"Image","ident":"vips_rot45","summary":"Rotate @in by a multiple of 45 degrees. Odd-length sides and square images only.  This operation is useful ...","deprecated":null},{"type":"method","name":"rot90","type_name":"Image","ident":"vips_rot90","summary":"Rotate @in by 90 degrees clockwise. A convenience function over [method@Image.rot].  ::: seealso     [method@Image.rot].","deprecated":null},{"type":"method","name":"rotate","type_name":"Image","ident":"vips_rotate","summary":"This operator calls [method@Image.affine] for you, calculating the matrix for the affine transform from @scale and @angle.  Other ...","deprecated":null},{"type":"method","name":"round","type_name":"Image","ident":"vips_round","summary":"Round to an integral value.  Copy for integer types, round float and complex types.  The format of ...","deprecated":null},{"type":"method","name":"rshift","type_name":"Image","ident":"vips_rshift","summary":"Perform [enum@Vips.OperationBoolean.RSHIFT] on a pair of images. See [method@Image.boolean].","deprecated":null},{"type":"method","name":"rshift_const","type_name":"Image","ident":"vips_rshift_const","summary":"Perform [enum@Vips.OperationBoolean.LSHIFT] on an image and an array of constants. See [method@Image.boolean_const].  ::: seealso     ...","deprecated":null},{"type":"method","name":"rshift_const1","type_name":"Image","ident":"vips_rshift_const1","summary":"Perform [enum@Vips.OperationBoolean.RSHIFT] on an image and a constant. See [method@Image.boolean_const1].  ::: seealso     [method@Image.boolean], [method@Image.boolean_const].","deprecated":null},{"type":"method","name":"sRGB2HSV","type_name":"Image","ident":"vips_sRGB2HSV","summary":"Convert to HSV.  HSV is a crude polar coordinate system for RGB images. It is provided for compatibility ...","deprecated":null},{"type":"method","name":"sRGB2scRGB","type_name":"Image","ident":"vips_sRGB2scRGB","summary":"Convert an sRGB image to scRGB.  RGB16 images are also handled.  ::: seealso     ...","deprecated":null},{"type":"method","name":"sanity","type_name":"Object","ident":"vips_object_sanity","summary":"No description available.","deprecated":null},{"type":"method","name":"scRGB2BW","type_name":"Image","ident":"vips_scRGB2BW","summary":"Convert an scRGB image to greyscale. Set @depth to 16 to get 16-bit output.  ::: tip \"Optional arguments\" ...","deprecated":null},{"type":"method","name":"scRGB2XYZ","type_name":"Image","ident":"vips_scRGB2XYZ","summary":"Turn XYZ to scRGB.","deprecated":null},{"type":"method","name":"scRGB2sRGB","type_name":"Image","ident":"vips_scRGB2sRGB","summary":"Convert an scRGB image to sRGB. Set @depth to 16 to get 16-bit output.  ::: tip \"Optional arguments\" ...","deprecated":null},{"type":"method","name":"scale","type_name":"Image","ident":"vips_scale","summary":"Search the image for the maximum and minimum value, then return the image as unsigned 8-bit, scaled so that ...","deprecated":null},{"type":"method","name":"scharr","type_name":"Image","ident":"vips_scharr","summary":"Scharr edge detector.  uchar images are computed using a fast, low-precision path. Cast to float for a high-precision ...","deprecated":null},{"type":"method","name":"seek","type_name":"Source","ident":"vips_source_seek","summary":"Move the file read position. You can't call this after pixel decode starts. The arguments are exactly as lseek(2).","deprecated":null},{"type":"method","name":"seek","type_name":"Target","ident":"vips_target_seek","summary":"Seek the target. This behaves exactly as [`lseek()`](man:lseek(2)).  Seeking a target sounds weird, but libtiff needs this. This ...","deprecated":null},{"type":"method","name":"seek","type_name":"Dbuf","ident":"vips_dbuf_seek","summary":"Move the write point. @whence can be `SEEK_SET`, `SEEK_CUR`, `SEEK_END`, with the usual meaning."},{"type":"method","name":"sequential","type_name":"Image","ident":"vips_sequential","summary":"This operation behaves rather like [method@Image.copy] between images @in and @out, except that it checks that pixels on @in ...","deprecated":null},{"type":"method","name":"set","type_name":"Image","ident":"vips_image_set","summary":"Set a piece of metadata on @image. Any old metadata with that name is destroyed. The [struct@GObject.Value] is copied ...","deprecated":null},{"type":"method","name":"set","type_name":"Object","ident":"vips_object_set","summary":"Set a list of vips object arguments. For example:  ```c vips_object_set(operation,     \"input\", in,  ...","deprecated":null},{"type":"method","name":"set","type_name":"Blob","ident":"vips_blob_set","summary":"Any old data is freed and new data attached.  It's sometimes useful to be able to create blobs ..."},{"type":"method","name":"set_area","type_name":"Image","ident":"vips_image_set_area","summary":"Attaches @data as a metadata item on @image under the name @name. When VIPS no longer needs the metadata, ...","deprecated":null},{"type":"method","name":"set_argument_from_string","type_name":"Object","ident":"vips_object_set_argument_from_string","summary":"No description available.","deprecated":null},{"type":"method","name":"set_array_double","type_name":"Image","ident":"vips_image_set_array_double","summary":"Attaches @array as a metadata item on @image as @name. A convenience function over [method@Image.set].  ::: seealso  ...","deprecated":null},{"type":"method","name":"set_array_int","type_name":"Image","ident":"vips_image_set_array_int","summary":"Attaches @array as a metadata item on @image as @name. A convenience function over [method@Image.set].  ::: seealso  ...","deprecated":null},{"type":"method","name":"set_blob","type_name":"Image","ident":"vips_image_set_blob","summary":"Attaches @data as a metadata item on @image under the name @name.  ::: seealso     ...","deprecated":null},{"type":"method","name":"set_blob_copy","type_name":"Image","ident":"vips_image_set_blob_copy","summary":"Attaches @data as a metadata item on @image under the name @name, taking a copy of the memory area. ...","deprecated":null},{"type":"method","name":"set_delete_on_close","type_name":"Image","ident":"vips_image_set_delete_on_close","summary":"Sets the delete_on_close flag for the image. If this flag is set, when @image is finalized, the filename held ...","deprecated":null},{"type":"method","name":"set_double","type_name":"Image","ident":"vips_image_set_double","summary":"Attaches @d as a metadata item on @image as @name. A convenience function over [method@Image.set].  ::: seealso  ...","deprecated":null},{"type":"method","name":"set_dynamic","type_name":"Buf","ident":"vips_buf_set_dynamic","summary":"Attach the buffer to a heap memory area. The buffer needs to have been initialised. The memory area needs ..."},{"type":"method","name":"set_from_string","type_name":"Object","ident":"vips_object_set_from_string","summary":"Set object arguments from a string. The string can be something like \"a=12\", or \"a = 12, b = ...","deprecated":null},{"type":"method","name":"set_image","type_name":"Image","ident":"vips_image_set_image","summary":"Attaches @im as a metadata item on @image as @name. A convenience function over [method@Image.set].  ::: seealso  ...","deprecated":null},{"type":"method","name":"set_int","type_name":"Image","ident":"vips_image_set_int","summary":"Attaches @i as a metadata item on @image under the name @name. A convenience function over [method@Image.set].  ::: ...","deprecated":null},{"type":"method","name":"set_kill","type_name":"Image","ident":"vips_image_set_kill","summary":"Set the [class@Image].kill flag on an image. Handy for stopping sets of threads.  ::: seealso    ...","deprecated":null},{"type":"method","name":"set_progress","type_name":"Image","ident":"vips_image_set_progress","summary":"vips signals evaluation progress via the [signal@Image::preeval], [signal@Image::eval] and [signal@Image::posteval] signals. Progress is signalled on the most-downstream image for ...","deprecated":null},{"type":"method","name":"set_required","type_name":"Object","ident":"vips_object_set_required","summary":"No description available.","deprecated":null},{"type":"method","name":"set_static","type_name":"Object","ident":"vips_object_set_static","summary":"No description available.","deprecated":null},{"type":"method","name":"set_static","type_name":"Buf","ident":"vips_buf_set_static","summary":"Attach the buffer to a static memory area. The buffer needs to have been initialised. The memory area needs ..."},{"type":"method","name":"set_string","type_name":"Image","ident":"vips_image_set_string","summary":"Attaches @str as a metadata item on @image as @name. A convenience function over [method@Image.set] using `VIPS_TYPE_REF_STRING`.  ::: ...","deprecated":null},{"type":"method","name":"set_valist","type_name":"Object","ident":"vips_object_set_valist","summary":"See [method@Object.set].","deprecated":null},{"type":"method","name":"sharpen","type_name":"Image","ident":"vips_sharpen","summary":"Selectively sharpen the L channel of a LAB image. The input image is transformed to [enum@Vips.Interpretation.LABS].  The operation ...","deprecated":null},{"type":"method","name":"shrink","type_name":"Image","ident":"vips_shrink","summary":"Shrink @in by a pair of factors with a simple box filter.  For non-integer factors, [method@Image.shrink] will first ...","deprecated":null},{"type":"method","name":"shrink","type_name":"Region","ident":"vips_region_shrink","summary":"Write the pixels @target in @to from the x2 larger area in @from. Non-complex uncoded images and LABQ only. ...","deprecated":null},{"type":"method","name":"shrink_method","type_name":"Region","ident":"vips_region_shrink_method","summary":"Write the pixels @target in @to from the x2 larger area in @from. Non-complex uncoded images and LABQ only. ...","deprecated":null},{"type":"method","name":"shrinkh","type_name":"Image","ident":"vips_shrinkh","summary":"Shrink @in horizontally by an integer factor. Each pixel in the output is the average of the corresponding line ...","deprecated":null},{"type":"method","name":"shrinkv","type_name":"Image","ident":"vips_shrinkv","summary":"Shrink @in vertically by an integer factor.  Each pixel in the output is the average of the corresponding ...","deprecated":null},{"type":"method","name":"sign","type_name":"Image","ident":"vips_sign","summary":"Finds the unit vector in the direction of the pixel value. For non-complex images, it returns a signed char ...","deprecated":null},{"type":"method","name":"similarity","type_name":"Image","ident":"vips_similarity","summary":"This operator calls [method@Image.affine] for you, calculating the matrix for the affine transform from @scale and @angle. Other parameters ...","deprecated":null},{"type":"method","name":"sin","type_name":"Image","ident":"vips_sin","summary":"Perform [enum@Vips.OperationMath.SIN] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"sinh","type_name":"Image","ident":"vips_sinh","summary":"Perform [enum@Vips.OperationMath.SINH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"sink","type_name":"Image","ident":"vips_sink","summary":"Loops over an image. @generate_fn is called for every pixel in the image, with the @reg argument being a ...","deprecated":null},{"type":"method","name":"sink_disc","type_name":"Image","ident":"vips_sink_disc","summary":"[method@Image.sink_disc] loops over @im, top-to-bottom, generating it in sections. As each section is produced, @write_fn is called.  @write_fn ...","deprecated":null},{"type":"method","name":"sink_screen","type_name":"Image","ident":"vips_sink_screen","summary":"This operation renders @in in the background, making pixels available on @out as they are calculated. The @notify_fn callback ...","deprecated":null},{"type":"method","name":"sink_tile","type_name":"Image","ident":"vips_sink_tile","summary":"Loops over an image. @generate_fn is called for every pixel in the image, with the @reg argument being a ...","deprecated":null},{"type":"method","name":"skip_whitespace","type_name":"Sbuf","ident":"vips_sbuf_skip_whitespace","summary":"After this, the next getc will be the first char of the next block of non-whitespace (or EOF).  ...","deprecated":null},{"type":"method","name":"smartcrop","type_name":"Image","ident":"vips_smartcrop","summary":"Crop an image down to a specified width and height by removing boring parts.  Use @interesting to pick ...","deprecated":null},{"type":"method","name":"sniff","type_name":"Source","ident":"vips_source_sniff","summary":"Return a pointer to the first few bytes of the file. If the file is too short, return NULL.","deprecated":null},{"type":"method","name":"sniff_at_most","type_name":"Source","ident":"vips_source_sniff_at_most","summary":"Attempt to sniff at most @length bytes from the start of the source. A pointer to the bytes is ...","deprecated":null},{"type":"method","name":"sobel","type_name":"Image","ident":"vips_sobel","summary":"Sobel edge detector.  uchar images are computed using a fast, low-precision path. Cast to float for a high-precision ...","deprecated":null},{"type":"method","name":"spcor","type_name":"Image","ident":"vips_spcor","summary":"Calculate a correlation surface.  @ref is placed at every position in @in and the correlation coefficient calculated. The ...","deprecated":null},{"type":"method","name":"spectrum","type_name":"Image","ident":"vips_spectrum","summary":"Make a displayable (ie. 8-bit unsigned int) power spectrum.  If @in is non-complex, it is transformed to Fourier ...","deprecated":null},{"type":"method","name":"stats","type_name":"Image","ident":"vips_stats","summary":"Find many image statistics in a single pass through the data. @out is a one-band [enum@Vips.BandFormat.DOUBLE] image of at ...","deprecated":null},{"type":"method","name":"stdif","type_name":"Image","ident":"vips_stdif","summary":"[method@Image.stdif] performs statistical differencing according to the formula given in page 45 of the book \"An Introduction to Digital ...","deprecated":null},{"type":"method","name":"steal","type_name":"Target","ident":"vips_target_steal","summary":"Memory targets only (see [ctor@Target.new_to_memory]). Steal all data written to the target so far, and call [method@Target.end].  You ...","deprecated":null},{"type":"method","name":"steal","type_name":"Dbuf","ident":"vips_dbuf_steal","summary":"Destroy a buffer, but rather than freeing memory, a pointer is returned. This must be freed with [func@GLib.free].  ..."},{"type":"method","name":"steal_text","type_name":"Target","ident":"vips_target_steal_text","summary":"As [method@Target.steal], but return a null-terminated string.","deprecated":null},{"type":"method","name":"string","type_name":"Dbuf","ident":"vips_dbuf_string","summary":"Return a pointer to @dbuf's internal data.  A `\\0` is appended, but not included in the character count. ..."},{"type":"method","name":"subsample","type_name":"Image","ident":"vips_subsample","summary":"Subsample an image by an integer fraction. This is fast, nearest-neighbour shrink.  For small horizontal shrinks, this operation ...","deprecated":null},{"type":"method","name":"subtract","type_name":"Image","ident":"vips_subtract","summary":"This operation calculates @in1 - @in2 and writes the result to @out.  If the images differ in size, ...","deprecated":null},{"type":"method","name":"summary","type_name":"Object","ident":"vips_object_summary","summary":"Generate a human-readable summary for an object.","deprecated":null},{"type":"method","name":"tan","type_name":"Image","ident":"vips_tan","summary":"Perform [enum@Vips.OperationMath.TAN] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"tanh","type_name":"Image","ident":"vips_tanh","summary":"Perform [enum@Vips.OperationMath.TANH] on an image. See [method@Image.math].","deprecated":null},{"type":"method","name":"tell","type_name":"Dbuf","ident":"vips_dbuf_tell","summary":"No description available."},{"type":"method","name":"thumbnail_image","type_name":"Image","ident":"vips_thumbnail_image","summary":"Exactly as [ctor@Image.thumbnail], but read from an existing image.  This operation is not able to exploit shrink-on-load features ...","deprecated":null},{"type":"method","name":"tiffsave","type_name":"Image","ident":"vips_tiffsave","summary":"Write a VIPS image to a file as TIFF.  If @in has the [const@META_PAGE_HEIGHT] metadata item, this is ...","deprecated":null},{"type":"method","name":"tiffsave_buffer","type_name":"Image","ident":"vips_tiffsave_buffer","summary":"As [method@Image.tiffsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"tiffsave_target","type_name":"Image","ident":"vips_tiffsave_target","summary":"As [method@Image.tiffsave], but save to a target.  ::: tip \"Optional arguments\"     * @compression: use ...","deprecated":null},{"type":"method","name":"tilecache","type_name":"Image","ident":"vips_tilecache","summary":"This operation behaves rather like [method@Image.copy] between images @in and @out, except that it keeps a cache of computed ...","deprecated":null},{"type":"method","name":"to_string","type_name":"Object","ident":"vips_object_to_string","summary":"The inverse of [ctor@Object.new_from_string]: turn @object into eg. `\"VipsInterpolateSnohalo1(blur=.333333)\"`.","deprecated":null},{"type":"method","name":"transpose3d","type_name":"Image","ident":"vips_transpose3d","summary":"Transpose a volumetric image.  Volumetric images are very tall, thin images, with the metadata item [const@META_PAGE_HEIGHT] set to ...","deprecated":null},{"type":"method","name":"truncate","type_name":"Dbuf","ident":"vips_dbuf_truncate","summary":"Truncate the data so that it ends at the write point. No memory is freed."},{"type":"method","name":"unbuffer","type_name":"Sbuf","ident":"vips_sbuf_unbuffer","summary":"Discard the input buffer and reset the read point. You must call this before using read or seek on ...","deprecated":null},{"type":"method","name":"ungetc","type_name":"Sbuf","ident":"vips_sbuf_ungetc","summary":"The opposite of [method@Sbuf.getc]: undo the previous getc.  unget more than one character is undefined. Unget at the ...","deprecated":null},{"type":"method","name":"unionrect","type_name":"Rect","ident":"vips_rect_unionrect","summary":"Fill @out with the bounding box of @r1 and @r2. @out can equal @r1 or @r2."},{"type":"method","name":"unminimise","type_name":"Source","ident":"vips_source_unminimise","summary":"Restore the source after minimisation. This is called at the start of every source method, so loaders should not ...","deprecated":null},{"type":"method","name":"unpremultiply","type_name":"Image","ident":"vips_unpremultiply","summary":"Unpremultiplies any alpha channel.  Band @alpha_band (by default the final band) contains the alpha and all other bands ...","deprecated":null},{"type":"method","name":"unref","type_name":"Area","ident":"vips_area_unref","summary":"No description available."},{"type":"method","name":"unref_outputs","type_name":"Object","ident":"vips_object_unref_outputs","summary":"Unref all assigned output objects. Useful for language bindings.  After an object is built, all output args are ...","deprecated":null},{"type":"method","name":"up","type_name":"Semaphore","ident":"vips_semaphore_up","summary":"No description available."},{"type":"method","name":"upn","type_name":"Semaphore","ident":"vips_semaphore_upn","summary":"No description available."},{"type":"method","name":"vappendf","type_name":"Buf","ident":"vips_buf_vappendf","summary":"Append to @buf, args as [`vprintf()`](man:vprintf(3))."},{"type":"method","name":"vipssave","type_name":"Image","ident":"vips_vipssave","summary":"Write @in to @filename in VIPS format.  ::: seealso     [ctor@Image.vipsload].","deprecated":null},{"type":"method","name":"vipssave_target","type_name":"Image","ident":"vips_vipssave_target","summary":"As [method@Image.vipssave], but save to a target.","deprecated":null},{"type":"method","name":"webpsave","type_name":"Image","ident":"vips_webpsave","summary":"Write an image to a file in WebP format.  By default, images are saved in lossy format, with ...","deprecated":null},{"type":"method","name":"webpsave_buffer","type_name":"Image","ident":"vips_webpsave_buffer","summary":"As [method@Image.webpsave], but save to a memory buffer.  The address of the buffer is returned in @buf, the ...","deprecated":null},{"type":"method","name":"webpsave_mime","type_name":"Image","ident":"vips_webpsave_mime","summary":"As [method@Image.webpsave], but save as a mime webp on stdout.  ::: tip \"Optional arguments\"     ...","deprecated":null},{"type":"method","name":"webpsave_target","type_name":"Image","ident":"vips_webpsave_target","summary":"As [method@Image.webpsave], but save to a target.  ::: tip \"Optional arguments\"     * @Q: `gint`, ...","deprecated":null},{"type":"method","name":"width","type_name":"Region","ident":"vips_region_width","summary":"No description available.","deprecated":null},{"type":"method","name":"wio_input","type_name":"Image","ident":"vips_image_wio_input","summary":"Check that an image is readable via the VIPS_IMAGE_ADDR() macro, that is, that the entire image is in memory ...","deprecated":null},{"type":"method","name":"wop","type_name":"Image","ident":"vips_wop","summary":"Perform [enum@Vips.OperationMath2.WOP] on a pair of images. See [method@Image.math2].","deprecated":null},{"type":"method","name":"wop_const","type_name":"Image","ident":"vips_wop_const","summary":"Perform [enum@Vips.OperationMath2.WOP] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"wop_const1","type_name":"Image","ident":"vips_wop_const1","summary":"Perform [enum@Vips.OperationMath2.WOP] on an image and a constant. See [method@Image.math2_const].","deprecated":null},{"type":"method","name":"wrap","type_name":"Image","ident":"vips_wrap","summary":"Slice an image up and move the segments about so that the pixel that was at 0, 0 is ...","deprecated":null},{"type":"method","name":"write","type_name":"Image","ident":"vips_image_write","summary":"Write @image to @out. Use [ctor@Image.new] and friends to create the [class@Image] you want to write to.  ::: ...","deprecated":null},{"type":"method","name":"write","type_name":"Target","ident":"vips_target_write","summary":"Write @length bytes from @data to the output.","deprecated":null},{"type":"method","name":"write","type_name":"Dbuf","ident":"vips_dbuf_write","summary":"Append @size bytes from @data. @dbuf expands if necessary."},{"type":"method","name":"write_amp","type_name":"Target","ident":"vips_target_write_amp","summary":"Write @str to @target, but escape stuff that xml hates in text. Our argument string is utf-8.  XML ...","deprecated":null},{"type":"method","name":"write_amp","type_name":"Dbuf","ident":"vips_dbuf_write_amp","summary":"Write @str to @dbuf, but escape stuff that xml hates in text. Our argument string is utf-8.  XML ..."},{"type":"method","name":"write_line","type_name":"Image","ident":"vips_image_write_line","summary":"Write a line of pixels to an image. This function must be called repeatedly with @ypos increasing from 0 ...","deprecated":null},{"type":"method","name":"write_prepare","type_name":"Image","ident":"vips_image_write_prepare","summary":"Call this after setting header fields (width, height, and so on) to allocate resources ready for writing.  Normally ...","deprecated":null},{"type":"method","name":"write_to_buffer","type_name":"Image","ident":"vips_image_write_to_buffer","summary":"Writes @in to a memory buffer in a format specified by @suffix.  Save options may be appended to ...","deprecated":null},{"type":"method","name":"write_to_file","type_name":"Image","ident":"vips_image_write_to_file","summary":"Writes @in to @name using the saver recommended by [func@Foreign.find_save].  Save options may be appended to @filename as ...","deprecated":null},{"type":"method","name":"write_to_memory","type_name":"Image","ident":"vips_image_write_to_memory","summary":"Writes @in to memory as a simple, unformatted C-style array.  The caller is responsible for freeing this memory ...","deprecated":null},{"type":"method","name":"write_to_target","type_name":"Image","ident":"vips_image_write_to_target","summary":"Writes @in to @output in format @suffix.  Save options may be appended to @suffix as \"[name=value,...]\" or given ...","deprecated":null},{"type":"method","name":"writef","type_name":"Target","ident":"vips_target_writef","summary":"Format the string and write to @target.","deprecated":null},{"type":"method","name":"writef","type_name":"Dbuf","ident":"vips_dbuf_writef","summary":"Format the string and write to @dbuf."},{"type":"method","name":"writes","type_name":"Target","ident":"vips_target_writes","summary":"Write a null-terminated string to @target.","deprecated":null},{"type":"method","name":"zoom","type_name":"Image","ident":"vips_zoom","summary":"Zoom an image by repeating pixels. This is fast nearest-neighbour zoom.  ::: seealso     [method@Image.affine], [method@Image.subsample].","deprecated":null},{"type":"property","name":"access","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"background","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"bands","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"blob","type_name":"Source","summary":"No description available.","deprecated":null},{"type":"property","name":"blob","type_name":"Target","summary":"No description available.","deprecated":null},{"type":"property","name":"coding","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"demand","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"description","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"property","name":"descriptor","type_name":"Connection","summary":"No description available.","deprecated":null},{"type":"property","name":"disc","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"fail","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"fail-on","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"filename","type_name":"Connection","summary":"No description available.","deprecated":null},{"type":"property","name":"filename","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"flags","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"foreign-buffer","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"format","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"height","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"in","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"input","type_name":"Sbuf","summary":"No description available.","deprecated":null},{"type":"property","name":"interpretation","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"keep","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"kill","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"memory","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"memory","type_name":"Target","summary":"No description available.","deprecated":null},{"type":"property","name":"mode","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"nickname","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"property","name":"out","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"page-height","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"profile","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"revalidate","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"sequential","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"property","name":"sizeof-header","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"strip","type_name":"ForeignSave","summary":"No description available.","deprecated":null},{"type":"property","name":"width","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"xoffset","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"xres","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"yoffset","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"property","name":"yres","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"record","name":"Area","ctype":"VipsArea","summary":"No description available.","deprecated":null},{"type":"record","name":"Argument","ctype":"VipsArgument","summary":"libvips has a simple mechanism for automating at least some aspects of [class@GObject.Object] properties. You add a set of ...","deprecated":null},{"type":"record","name":"ArgumentClass","ctype":"VipsArgumentClass","summary":"No description available.","deprecated":null},{"type":"record","name":"ArgumentInstance","ctype":"VipsArgumentInstance","summary":"No description available.","deprecated":null},{"type":"record","name":"ArrayDouble","ctype":"VipsArrayDouble","summary":"No description available.","deprecated":null},{"type":"record","name":"ArrayImage","ctype":"VipsArrayImage","summary":"No description available.","deprecated":null},{"type":"record","name":"ArrayInt","ctype":"VipsArrayInt","summary":"No description available.","deprecated":null},{"type":"record","name":"Blob","ctype":"VipsBlob","summary":"No description available.","deprecated":null},{"type":"record","name":"Buf","ctype":"VipsBuf","summary":"A message buffer you can append stuff to safely and quickly. If the message gets too long, you get ...","deprecated":null},{"type":"record","name":"Dbuf","ctype":"VipsDbuf","summary":"No description available.","deprecated":null},{"type":"record","name":"GInputStream","ctype":"VipsGInputStream","summary":"No description available.","deprecated":null},{"type":"record","name":"GInputStreamClass","ctype":"VipsGInputStreamClass","summary":"No description available.","deprecated":null},{"type":"record","name":"Progress","ctype":"VipsProgress","summary":"A structure available to eval callbacks giving information on evaluation progress. See [signal@Image::eval].","deprecated":null},{"type":"record","name":"Rect","ctype":"VipsRect","summary":"A [struct@Rect] is a rectangular area of pixels. This is a struct for performing simple rectangle algebra.","deprecated":null},{"type":"record","name":"RefString","ctype":"VipsRefString","summary":"No description available.","deprecated":null},{"type":"record","name":"SaveString","ctype":"VipsSaveString","summary":"No description available.","deprecated":null},{"type":"record","name":"Semaphore","ctype":"VipsSemaphore","summary":"No description available.","deprecated":null},{"type":"record","name":"SourceGInputStream","ctype":"VipsSourceGInputStream","summary":"No description available.","deprecated":null},{"type":"record","name":"SourceGInputStreamClass","ctype":"VipsSourceGInputStreamClass","summary":"No description available.","deprecated":null},{"type":"signal","name":"close","type_name":"Object","summary":"The ::close signal is emitted once during object close. The object is dying and may not work.","deprecated":null},{"type":"signal","name":"end","type_name":"TargetCustom","summary":"This signal is emitted at the end of write. The target should do any finishing necessary.","deprecated":null},{"type":"signal","name":"eval","type_name":"Image","summary":"This signal is emitted once per work unit (typically a 128 x 128 area of pixels) during image computation. ...","deprecated":null},{"type":"signal","name":"finish","type_name":"TargetCustom","summary":"Deprecated for VipsTargetCustom::end.","deprecated":null},{"type":"signal","name":"invalidate","type_name":"Image","summary":"This signal is emitted when an image or one of it's upstream data sources has been destructively modified. See [method@Image.invalidate_all].","deprecated":null},{"type":"signal","name":"invalidate","type_name":"Operation","summary":"No description available.","deprecated":null},{"type":"signal","name":"minimise","type_name":"Image","summary":"This signal is emitted when an image has been asked to minimise memory usage. All non-essential caches are dropped. ...","deprecated":null},{"type":"signal","name":"postbuild","type_name":"Object","summary":"The ::postbuild signal is emitted once just after successful object construction. Return non-zero to cause object construction to fail.","deprecated":null},{"type":"signal","name":"postclose","type_name":"Object","summary":"The ::postclose signal is emitted once after object close. The object pointer is still valid, but nothing else.","deprecated":null},{"type":"signal","name":"posteval","type_name":"Image","summary":"This signal is emitted once at the end of the computation of @image. It's a good place to shut ...","deprecated":null},{"type":"signal","name":"preclose","type_name":"Object","summary":"The ::preclose signal is emitted once just before object close starts. The object is still alive.","deprecated":null},{"type":"signal","name":"preeval","type_name":"Image","summary":"This signal is emitted once before computation of @image starts. It's a good place to set up evaluation feedback. ...","deprecated":null},{"type":"signal","name":"read","type_name":"SourceCustom","summary":"This signal is emitted to read bytes from the source into @buffer.","deprecated":null},{"type":"signal","name":"read","type_name":"TargetCustom","summary":"This signal is emitted to read bytes from the target into @buffer.  The handler for an unreadable target ...","deprecated":null},{"type":"signal","name":"seek","type_name":"SourceCustom","summary":"This signal is emitted to seek the source. The handler should change the source position appropriately.  The handler ...","deprecated":null},{"type":"signal","name":"seek","type_name":"TargetCustom","summary":"This signal is emitted to seek the target. The handler should change the target position appropriately.  The handler ...","deprecated":null},{"type":"signal","name":"write","type_name":"TargetCustom","summary":"This signal is emitted to write bytes to the target.","deprecated":null},{"type":"signal","name":"written","type_name":"Image","summary":"This signal is emitted just after an image has been written to. It is used by vips to implement ...","deprecated":null},{"type":"type_func","name":"arrayjoin","type_name":"Image","ident":"vips_arrayjoin","summary":"Lay out the images in @in in a grid. The grid is @across images across and however high is ...","deprecated":null},{"type":"type_func","name":"bandjoin","type_name":"Image","ident":"vips_bandjoin","summary":"Join a set of images together, bandwise.  If the images have n and m bands, then the output ...","deprecated":null},{"type":"type_func","name":"bandrank","type_name":"Image","ident":"vips_bandrank","summary":"Sorts the images @in band-element-wise, then outputs an image in which each band element is selected from the sorted ...","deprecated":null},{"type":"type_func","name":"bilinear_static","type_name":"Interpolate","ident":"vips_interpolate_bilinear_static","summary":"A convenience function that returns a bilinear interpolator you don't need to free.","deprecated":null},{"type":"type_func","name":"block_set","type_name":"Operation","ident":"vips_operation_block_set","summary":"Set the block state on all operations in the libvips class hierarchy at @name and below.  For example: ...","deprecated":null},{"type":"type_func","name":"composite","type_name":"Image","ident":"vips_composite","summary":"Composite an array of images together.  Images are placed in a stack, with @in[0] at the bottom and ...","deprecated":null},{"type":"type_func","name":"copy","type_name":"Blob","ident":"vips_blob_copy","summary":"Like [ctor@Blob.new], but take a copy of the data. Useful for bindings which struggle with callbacks.  ::: seealso ..."},{"type":"type_func","name":"find_load","type_name":"Foreign","ident":"vips_foreign_find_load","summary":"Searches for an operation you could use to load @filename. Any trailing options on @filename are stripped and ignored. ...","deprecated":null},{"type":"type_func","name":"find_load_buffer","type_name":"Foreign","ident":"vips_foreign_find_load_buffer","summary":"Searches for an operation you could use to load a memory buffer. To see the range of buffer loaders ...","deprecated":null},{"type":"type_func","name":"find_load_source","type_name":"Foreign","ident":"vips_foreign_find_load_source","summary":"Searches for an operation you could use to load a source. To see the range of source loaders supported ...","deprecated":null},{"type":"type_func","name":"find_save","type_name":"Foreign","ident":"vips_foreign_find_save","summary":"Searches for an operation you could use to write to @filename. Any trailing options on @filename are stripped and ...","deprecated":null},{"type":"type_func","name":"find_save_buffer","type_name":"Foreign","ident":"vips_foreign_find_save_buffer","summary":"Searches for an operation you could use to write to a buffer in @suffix format.  ::: seealso  ...","deprecated":null},{"type":"type_func","name":"find_save_target","type_name":"Foreign","ident":"vips_foreign_find_save_target","summary":"Searches for an operation you could use to write to a target in @suffix format.  ::: seealso  ...","deprecated":null},{"type":"type_func","name":"free_cb","type_name":"Area","ident":"vips_area_free_cb","summary":"No description available."},{"type":"type_func","name":"g_input_stream_new","type_name":"Source","ident":"vips_source_g_input_stream_new","summary":"Create a [struct@SourceGInputStream] which wraps @stream.  ::: seealso     [func@g_input_stream_new_from_source]","deprecated":null},{"type":"type_func","name":"get_format_max","type_name":"Image","ident":"vips_image_get_format_max","summary":"No description available.","deprecated":null},{"type":"type_func","name":"get_id","type_name":"Argument","ident":"vips_argument_get_id","summary":"Allocate a new property id. See [method@GObject.ObjectClass.install_property]."},{"type":"type_func","name":"get_property","type_name":"Object","ident":"vips_object_get_property","summary":"No description available.","deprecated":null},{"type":"type_func","name":"get_suffixes","type_name":"Foreign","ident":"vips_foreign_get_suffixes","summary":"Get a `NULL`-terminated array listing all the supported suffixes.  This is not the same as all the supported ...","deprecated":null},{"type":"type_func","name":"is8bit","type_name":"BandFormat","ident":"vips_band_format_is8bit","summary":"Return `TRUE` if @format is uchar or schar.","deprecated":null},{"type":"type_func","name":"is_a","type_name":"Foreign","ident":"vips_foreign_is_a","summary":"Return `TRUE` if @filename can be loaded by @loader. @loader is something like \"tiffload\" or \"VipsForeignLoadTiff\".","deprecated":null},{"type":"type_func","name":"is_a_buffer","type_name":"Foreign","ident":"vips_foreign_is_a_buffer","summary":"Return `TRUE` if @data can be loaded by @loader. @loader is something like \"tiffload_buffer\" or \"VipsForeignLoadTiffBuffer\".","deprecated":null},{"type":"type_func","name":"is_a_source","type_name":"Foreign","ident":"vips_foreign_is_a_source","summary":"Return `TRUE` if @source can be loaded by @loader. @loader is something like \"tiffload_source\" or \"VipsForeignLoadTiffSource\".","deprecated":null},{"type":"type_func","name":"iscomplex","type_name":"BandFormat","ident":"vips_band_format_iscomplex","summary":"Return `TRUE` if @fmt is one of the complex types.","deprecated":null},{"type":"type_func","name":"isfloat","type_name":"BandFormat","ident":"vips_band_format_isfloat","summary":"Return `TRUE` if @format is one of the float types.","deprecated":null},{"type":"type_func","name":"isint","type_name":"BandFormat","ident":"vips_band_format_isint","summary":"Return `TRUE` if @format is one of the integer types.","deprecated":null},{"type":"type_func","name":"isuint","type_name":"BandFormat","ident":"vips_band_format_isuint","summary":"Return `TRUE` if @format is one of the unsigned integer types.","deprecated":null},{"type":"type_func","name":"map","type_name":"Foreign","ident":"vips_foreign_map","summary":"Apply a function to every [class@Foreign]Class that VIPS knows about. Foreigns are presented to the function in priority order. ...","deprecated":null},{"type":"type_func","name":"map","type_name":"Object","ident":"vips_object_map","summary":"Call a function for all alive objects. Stop when @fn returns non-`NULL` and return that value.","deprecated":null},{"type":"type_func","name":"map","type_name":"Argument","ident":"vips_argument_map","summary":"Loop over the vips_arguments to an object. Stop when @fn returns non-`NULL` and return that value."},{"type":"type_func","name":"map","type_name":"ArgumentClass","ident":"vips_argument_class_map","summary":"And loop over a class. Same as ^^, but with no VipsArgumentInstance."},{"type":"type_func","name":"matrix_from_array","type_name":"Image","ident":"vips_image_matrix_from_array","summary":"A renamed [ctor@Image.new_matrix_from_array]. Some gobject bindings do not like more than one _new method.","deprecated":null},{"type":"type_func","name":"max_alpha","type_name":"Interpretation","ident":"vips_interpretation_max_alpha","summary":"No description available.","deprecated":null},{"type":"type_func","name":"nearest_static","type_name":"Interpolate","ident":"vips_interpolate_nearest_static","summary":"A convenience function that returns a nearest-neighbour interpolator you don't need to free.","deprecated":null},{"type":"type_func","name":"pipeline_array","type_name":"Image","ident":"vips_image_pipeline_array","summary":"Add an image to a pipeline. @image depends on all of the images in @in, @image prefers to supply ...","deprecated":null},{"type":"type_func","name":"print_all","type_name":"Object","ident":"vips_object_print_all","summary":"No description available.","deprecated":null},{"type":"type_func","name":"print_summary_class","type_name":"Object","ident":"vips_object_print_summary_class","summary":"No description available.","deprecated":null},{"type":"type_func","name":"sanity_all","type_name":"Object","ident":"vips_object_sanity_all","summary":"No description available.","deprecated":null},{"type":"type_func","name":"set","type_name":"ThreadState","ident":"vips_thread_state_set","summary":"No description available.","deprecated":null},{"type":"type_func","name":"set","type_name":"Progress","ident":"vips_progress_set","summary":"If set, vips will print messages about the progress of computation to stdout. This can also be enabled with ..."},{"type":"type_func","name":"set_property","type_name":"Object","ident":"vips_object_set_property","summary":"No description available.","deprecated":null},{"type":"type_func","name":"sum","type_name":"Image","ident":"vips_sum","summary":"This operation sums all images in @in and writes the result to @out.  If the images differ in ...","deprecated":null},{"type":"type_func","name":"summary_class","type_name":"Object","ident":"vips_object_summary_class","summary":"Generate a human-readable summary for a class.","deprecated":null},{"type":"type_func","name":"switch","type_name":"Image","ident":"vips_switch","summary":"The @tests images are evaluated and at each point the index of the first non-zero value is written to ...","deprecated":null},{"type":"vfunc","name":"build","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"close","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"dump","type_name":"Object","summary":"Dump everything that vips knows about an object to a string.","deprecated":null},{"type":"vfunc","name":"end","type_name":"Target","summary":"Call this at the end of write to make the target do any cleaning up. You can call it ...","deprecated":null},{"type":"vfunc","name":"end","type_name":"TargetCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"eval","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"finish","type_name":"Target","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"finish","type_name":"TargetCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"get_flags","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"get_flags","type_name":"Operation","summary":"Returns the set of flags for this operation.","deprecated":null},{"type":"vfunc","name":"get_window_offset","type_name":"Interpolate","summary":"Look up an interpolators desired window offset.","deprecated":null},{"type":"vfunc","name":"get_window_size","type_name":"Interpolate","summary":"Look up an interpolators desired window size.","deprecated":null},{"type":"vfunc","name":"header","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"interpolate","type_name":"Interpolate","summary":"the interpolation method","deprecated":null},{"type":"vfunc","name":"invalidate","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"invalidate","type_name":"Operation","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"load","type_name":"ForeignLoad","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"minimise","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"output_to_arg","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"postbuild","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"postclose","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"posteval","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"preclose","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"preeval","type_name":"Image","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"read","type_name":"Source","summary":"Read up to @length bytes from @source and store the bytes in @buffer. Return the number of bytes actually ...","deprecated":null},{"type":"vfunc","name":"read","type_name":"SourceCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"read","type_name":"Target","summary":"Read up to @length bytes from @target and store the bytes in @buffer. Return the number of bytes actually ...","deprecated":null},{"type":"vfunc","name":"read","type_name":"TargetCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"rewind","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"sanity","type_name":"Object","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"seek","type_name":"Source","summary":"Move the file read position. You can't call this after pixel decode starts. The arguments are exactly as lseek(2).","deprecated":null},{"type":"vfunc","name":"seek","type_name":"SourceCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"seek","type_name":"Target","summary":"Seek the target. This behaves exactly as [`lseek()`](man:lseek(2)).  Seeking a target sounds weird, but libtiff needs this. This ...","deprecated":null},{"type":"vfunc","name":"seek","type_name":"TargetCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"summary","type_name":"Object","summary":"Generate a human-readable summary for an object.","deprecated":null},{"type":"vfunc","name":"to_string","type_name":"Object","summary":"The inverse of [ctor@Object.new_from_string]: turn @object into eg. `\"VipsInterpolateSnohalo1(blur=.333333)\"`.","deprecated":null},{"type":"vfunc","name":"write","type_name":"Target","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"write","type_name":"TargetCustom","summary":"No description available.","deprecated":null},{"type":"vfunc","name":"written","type_name":"Image","summary":"No description available.","deprecated":null}],"terms":{}}